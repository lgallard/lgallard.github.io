<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.6.0">Jekyll</generator><link href="https://lgallardo.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lgallardo.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-09-25T18:31:21-05:00</updated><id>https://lgallardo.com/</id><title type="html">lgallardo.com</title><subtitle></subtitle><author><name>Luis M. Gallardo D.</name></author><entry><title type="html">OctoPrint with multiple 3D printers</title><link href="https://lgallardo.com/2022/09/25/octoprint-multiple-printers" rel="alternate" type="text/html" title="OctoPrint with multiple 3D printers" /><published>2022-09-24T19:00:00-05:00</published><updated>2022-09-24T19:00:00-05:00</updated><id>https://lgallardo.com/2022/09/25/octoprint-multiple-printers</id><content type="html" xml:base="https://lgallardo.com/2022/09/25/octoprint-multiple-printers">&lt;p&gt;&lt;img src=&quot;/assets/images/OctoPrint.jpg&quot; alt=&quot;OctoPrints&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;&lt;br /&gt;
One of the most useful tools when managing a 3D printer is &lt;a href=&quot;https://octoprint.org&quot; target=&quot;_blank&quot;&gt;OctoPrint&lt;/a&gt;, since among several things it allows you to manage your printer from a web interface, as well as adding a lot of functionality (for example, monitoring and management of the printer through Telegram, plugins to generate timelapse videos of the prints, or even detect when there are spaghetti-like problems in our prints using another plugin with AI).&lt;/p&gt;

&lt;h2 id=&quot;multiple-printers&quot;&gt;Multiple printers&lt;/h2&gt;
&lt;p&gt;But what if we have more than one printer? Can &lt;strong&gt;OctoPrint&lt;/strong&gt; manage more than one printer?&lt;/p&gt;

&lt;p&gt;The short answer is: NO! The software itself is not designed for multiple printers, but you can find alternative ways to have more than one instance of &lt;strong&gt;OctoPrint&lt;/strong&gt; running on your device or computer.&lt;/p&gt;

&lt;p&gt;There are several ways to do this, for example you can &lt;a href=&quot;http://thomas-messmer.com/index.php/14-free-knowledge/howtos/79-setting-up- octoprint-for-multiple-printers&quot; target=&quot;_blank&quot;&gt;modify the OctoPi scripts to add more instances&lt;/a&gt;, create scripts that launch multiple instances of the same program, but the option I ended up using was Docker containers.&lt;/p&gt;

&lt;h2 id=&quot;raspberry-pi--ubuntu&quot;&gt;Raspberry Pi + Ubuntu&lt;/h2&gt;
&lt;p&gt;In my case I have a &lt;strong&gt;Raspberry Pi 4&lt;/strong&gt;, with 8 GB of RAM, more than enough to run multiple instances of &lt;strong&gt;OctoPrint&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I originally had a specific operating system installed on my Raspberry called &lt;a href=&quot;https://github.com/guysoft/OctoPi&quot;&gt;OctoPi&lt;/a&gt;, a Debian derivative with &lt;strong&gt;OctoPrint&lt;/strong&gt; as the main program that is launched when the Raspberry Pi is turned on, but as I wanted to use containers I decided to use Ubuntu, which general purposed distribution where you can surely find everything you need to work with containers.&lt;/p&gt;

&lt;h2 id=&quot;requirements-and-components&quot;&gt;Requirements and components:&lt;/h2&gt;
&lt;p&gt;For this setup I used the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Impresora 3D - Artillery Genius Pro&lt;/li&gt;
  &lt;li&gt;Impresora 3D - Artillery SideWinder X2&lt;/li&gt;
  &lt;li&gt;2x WebCam - Logitech C270 (one per printer)&lt;/li&gt;
  &lt;li&gt;Raspberry Pi 4 - 8G RAM&lt;/li&gt;
  &lt;li&gt;SD Card 64 GB&lt;/li&gt;
  &lt;li&gt;Ubuntu 22.04 LTS  ARM 64 bits&lt;/li&gt;
  &lt;li&gt;Docker 20.10.17&lt;/li&gt;
  &lt;li&gt;OctoPrint lastest (1.8.3)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ubuntu-installation&quot;&gt;Ubuntu Installation&lt;/h2&gt;
&lt;p&gt;Nowadays is easier than ever to install &lt;strong&gt;Ubuntu&lt;/strong&gt; on the Raspberry Pi, you just have to download &lt;strong&gt;Raspberry Pi Imager,&lt;/strong&gt; which will generate the image on your SD card, select the operating system, which in this case is &lt;strong&gt;Ubuntu 22.04 LTS&lt;/strong&gt; and you’re done.  &lt;strong&gt;Raspberry Pi Imager&lt;/strong&gt; is avialable for Linux, Mac and Windows, so you can generate the image on the operating system that suits you best.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Raspberry-Pi-Imager.jpg&quot; alt=&quot;Raspberry Pi Imager&quot; /&gt;
{:style=”display:block; margin-left:auto; margin-right:auto”}&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;From this very software you will have the possibility to configure the password of the WiFi network in case you are using the Raspberry wirelessly, so you don’t need  to use a television set and a keyboard (headless), or manipulate the SD card to configure the networking. Since I’m using it headless, that’s what I did and then I connected via &lt;strong&gt;ssh&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/OctoPi-WiFi-Setting.jpg&quot; alt=&quot;WiFi Settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For the headless setup the trick is to let the &lt;strong&gt;Ubuntu&lt;/strong&gt; initialization scripts run and then connect via ssh. Now if you see that you can’t connect via ssh you can look for an HDMI cable and a keyboard to check what might be going on.&lt;/p&gt;

&lt;h2 id=&quot;software-installation-on-ubuntu&quot;&gt;Software installation on Ubuntu&lt;/h2&gt;
&lt;p&gt;Apart from &lt;strong&gt;Docker&lt;/strong&gt; we are going to need &lt;strong&gt;docker-compose&lt;/strong&gt;, and the utilities that will help us install them.&lt;/p&gt;

&lt;h2 id=&quot;docker-and-docker-compose&quot;&gt;Docker and docker-compose&lt;/h2&gt;
&lt;p&gt;To install docker you need to download it using the script. You will need to loging in as the administrator user with the root account:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pi@octopi:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;su
root@octopi:~# 

root@octopi:~# apt install curl
root@octopi:~# curl &lt;span class=&quot;nt&quot;&gt;-sSL&lt;/span&gt; https://get.docker.com | sh

root@octopi:~# apt update
root@octopi:~# apt install docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;octoprint-with-one-printer&quot;&gt;Octoprint with one printer&lt;/h2&gt;
&lt;p&gt;The first thing you need is to create a folder for OctoPrint, and then go into it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~# mkdir octoprint
root@octopi:~# 
root@octopi:~# &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;octoprint/
root@octopi:~/octoprint#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s start with a printer, in this case I’ll start with the &lt;code class=&quot;highlighter-rouge&quot;&gt;Artillery Genius Pro&lt;/code&gt;. For this you can create a folder that identifies this printer:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~# mkdir geniuspro
root@octopi:~# chmod &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 777 geniuspro/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s important to know the actual path because you’ll use it later in the container definition along with the name of this folder. To do this, execute the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~# &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/root/octoprint
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this you can indicate the files of this first instance of OctoPrint will reside in &lt;code class=&quot;highlighter-rouge&quot;&gt;/root/octoprint/geniuspro&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now to configure the printer you need to use  &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose&lt;/code&gt; so you need to create the &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file with the following information:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '2.4'

services:
  geniuspro:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 5000:5000
      - 8080:8080
    devices:
      - /dev/ttyACM0:/dev/ttyACM0 # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
      - /dev/video0:/dev/video0
    volumes:
      - /root/octoprint/geniuspro:/octoprint
    # uncomment the lines below to ensure camera streaming is enabled when
    # you add a video device
    environment:
      - ENABLE_MJPG_STREAMER=true
      - CAMERA_DEV=/dev/video0
      - MJPG_STREAMER_INPUT=&quot;-y -n -r 1280x960 -f 30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This file defines various things related to OctoPrint, such as the webcam and the printer itself. For example,  &lt;code class=&quot;highlighter-rouge&quot;&gt;image&lt;/code&gt;  indicates which Docker image to use for the &lt;code class=&quot;highlighter-rouge&quot;&gt;geniuspro&lt;/code&gt; service.&lt;/p&gt;

&lt;p&gt;Notice the ports definitions, where &lt;code class=&quot;highlighter-rouge&quot;&gt;5000&lt;/code&gt; will be used for the web interface and &lt;code class=&quot;highlighter-rouge&quot;&gt;8080&lt;/code&gt; for webcam streaming video.&lt;/p&gt;

&lt;p&gt;On the other hand, the printer is defined as a device in &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/ttyACM0&lt;/code&gt;, and the webcam in &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/video0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Something to keep in mind and that differs from the &lt;a href=&quot;https://docs.google.com/document/d/1aU7LGYAe6r45LqEBQ8opuXCiNKeJl3XrPTrobvEvdOM/edit&quot; target=&quot;_bla￼nk&quot;&gt;example on which I based&lt;/a&gt;, is that the streamer is now part of the Docker image and is served on port &lt;code class=&quot;highlighter-rouge&quot;&gt;8080&lt;/code&gt;, so there is no need to have a separate definition of another Docker image pointing to the streamer.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;volumes&lt;/code&gt;  has the reference to the printer directory that you had created as &lt;code class=&quot;highlighter-rouge&quot;&gt;/root/octoprint/geniuspro&lt;/code&gt;, which will be mapped into the container as the &lt;code class=&quot;highlighter-rouge&quot;&gt;/octoprint&lt;/code&gt; folder. That is, when we launch the container all the OctoPrint files for this printer will be in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/root/octoprint/geniuspro&lt;/code&gt; path of the operating system.&lt;/p&gt;

&lt;p&gt;Finally, &lt;code class=&quot;highlighter-rouge&quot;&gt;environment&lt;/code&gt; has the streamer parameters, like webcam device from the container. In this case both the OS and the container match the path &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/video0&lt;/code&gt;. Here you also need to provide you webcam parameters, in my case I indicated that the resolution is 1280x960 at 30 frames per second, which is what corresponds to my Logitech C270. For other models you can consult the &lt;a href=&quot;https://community.octoprint.org/t/usb-webcams-known-to-work-with-mjpg-streamer/21149&quot;&gt;supported cameras list page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once the &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yaml&lt;/code&gt; file has been created with the information shown above, all you have to do is start the service with Docker:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# docker-compose up -d
  
Creating octoprint_geniuspro_1 ... done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this we can access the OctoPrint web interface from the Raspberry Pi on the port that we had indicated,  in my case the url is http://192.168.68.102:5000:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/octoprint-multi-web.jpg&quot; alt=&quot;OctoPrint Web 1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;adding-a-second-printer&quot;&gt;Adding a second printer&lt;/h2&gt;

&lt;p&gt;To add a second printer, you just have to replicate the configuration you had before, but specifying the new printer and the corresponding video camera. So for my Artillery Sidewinder X2 this would be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '2.4'

services:
  geniuspro:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 5000:5000
      - 8080:8080
    devices:
      - /dev/ttyACM0:/dev/ttyACM0 # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
      - /dev/video0:/dev/video0
    volumes:
      - /root/octoprint/geniuspro:/octoprint
    # uncomment the lines below to ensure camera streaming is enabled when
    # you add a video device
    environment:
      - ENABLE_MJPG_STREAMER=true
      - CAMERA_DEV=/dev/video0
      - MJPG_STREAMER_INPUT=&quot;-y -n -r 1280x960 -f 30
 
  sidewinder_x2:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 5000:5000
      - 8080:8080
    devices:
      - /dev/ttyACM1:/dev/ttyACM0 # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
      - /dev/video2:/dev/video0
    volumes:
      - /root/octoprint/geniuspro:/octoprint
    # uncomment the lines below to ensure camera streaming is enabled when
    # you add a video device
    environment:
      - ENABLE_MJPG_STREAMER=true
      - CAMERA_DEV=/dev/video0
      - MJPG_STREAMER_INPUT=&quot;-y -n -r 1280x960 -f 30

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Take into account the phycal printer is identified as &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/ttyACM1&lt;/code&gt; in the Raspberry , but the container internally it will be see it as &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/ttyACM0&lt;/code&gt;. The same goes for the video camera, where it is physically identified as &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/video2&lt;/code&gt; but internally the container will see it as &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/video0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once the configuration has been created, the container must be run as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# docker-compose up -d
  
octoprint_geniuspro_1 is up-to-date
Creating octoprint_sidewinderx2_1 ... done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will now allow access to the second instance of OctoPrint on port 5001:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/octoprint-multi-web2.png&quot; alt=&quot;OctoPrint Web 2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-differentiate-printers&quot;&gt;How to differentiate printers?&lt;/h2&gt;
&lt;p&gt;In the example above I used the devices &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/ttyACM0&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/ttyACM1&lt;/code&gt; to reference my first printer, the Artillery Genius Pro, and my second printer, the Artillery SideWinder X2, but the operating system not always takes that order, since it will depend on which one you had turned on first. In order to identify the printers regardless of the connection order we can create a symbolic link using &lt;code class=&quot;highlighter-rouge&quot;&gt;udev&lt;/code&gt; with the manufacturer and product information.&lt;/p&gt;

&lt;p&gt;For this, you have first list the USB devices:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# lsusb
Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
Bus 001 Device 004: ID 046d:0825 Logitech, Inc. Webcam C270
Bus 001 Device 003: ID 046d:0825 Logitech, Inc. Webcam C270
Bus 001 Device 015: ID 0483:5740 STMicroelectronics Virtual COM Port
Bus 001 Device 016: ID 0483:5740 STMicroelectronics Virtual COM Port
Bus 001 Device 002: ID 2109:3431 VIA Labs, Inc. Hub
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are two &lt;strong&gt;STMicroelectronics Virtual COM Port&lt;/strong&gt; devices here, corresponding to the two printers, but which is which? We are going to ask for the detail of these devices:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; root@octopi:~/octoprint# lsusb -v -d 0483:5740

Bus 001 Device 015: ID 0483:5740 STMicroelectronics Virtual COM Port
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass            2 Communications
  bDeviceSubClass         2 Abstract (modem)
  bDeviceProtocol         0
  bMaxPacketSize0        64
  idVendor           0x0483 STMicroelectronics
  idProduct          0x5740 Virtual COM Port
  bcdDevice            0.00
  iManufacturer           1 STMicroelectronics
  iProduct                2 ARTILLERY_RUBY CDC in FS Mode
  iSerial                 3 386F39543538  
...
  
Bus 001 Device 016: ID 0483:5740 STMicroelectronics Virtual COM Port
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass            2 Communications
  bDeviceSubClass         2 Abstract (modem)
  bDeviceProtocol         0
  bMaxPacketSize0        64
  idVendor           0x0483 STMicroelectronics
  idProduct          0x5740 Virtual COM Port
  bcdDevice            0.00
  iManufacturer           1 STMicroelectronics
  iProduct                2 ARTILLERY_RUBY CDC in FS Mode
  iSerial                 3 3594398F3538  
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What differentiates one printer from another is the serial number of the device. Since the Artillery Genius Pro was initially mapped to &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/ttyACM0&lt;/code&gt;, we can check what its serial number is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# udevadm info -a -n /dev/ttyACM0 | grep serial
    ATTRS{serial}==&quot;3594398F3538&quot;
    ATTRS{serial}==&quot;0000:01:00.0&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now to see the serial code of the Artillery Sidewinder X2 you have to consult the device &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/ttyACM1&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
root@octopi:~/octoprint# udevadm info -a -n /dev/ttyACM1 | grep serial
    ATTRS{serial}==&quot;386F39543538&quot;
    ATTRS{serial}==&quot;0000:01:00.0&quot; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For &lt;code class=&quot;highlighter-rouge&quot;&gt;udev&lt;/code&gt; to recognize these rules we must create the following file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/udev/rules.d/40-printers.rules&lt;/code&gt; , with this content:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Genius Pro
KERNEL==&quot;ttyACM[0-9]*&quot;, SUBSYSTEM==&quot;tty&quot;, ATTRS{idVendor}==&quot;0483&quot;, ATTRS{idProduct}==&quot;5740&quot;, ATTRS{serial}==&quot;3594398F3538&quot;, SYMLINK=&quot;ttyGeniusPro&quot;

# Sidewinder X2
KERNEL==&quot;ttyACM[0-9]*&quot;, SUBSYSTEM==&quot;tty&quot;, ATTRS{idVendor}==&quot;0483&quot;, ATTRS{idProduct}==&quot;5740&quot;, ATTRS{serial}==&quot;386F39543538&quot;, SYMLINK=&quot;ttySidewinderX2&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then &lt;code class=&quot;highlighter-rouge&quot;&gt;udev&lt;/code&gt; must be restarted to take these changes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# udevadm control --reload-rules &amp;amp;&amp;amp; udevadm trigger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way the printers will be mapped as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# ls -l  /dev/tty{GeniusPro,Sidewinder}*
lrwxrwxrwx 1 root root 7 Aug 22 21:10 /dev/ttyGeniusPro -&amp;gt; ttyACM0
lrwxrwxrwx 1 root root 7 Aug 22 21:10 /dev/ttySidewinderX2 -&amp;gt; ttyACM1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the Docker configuration can be modified to reflect these changes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '2.4'

services:
  geniuspro:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 5000:5000
      - 8080:8080
    devices:
      - /dev/ttyGeniusPro:/dev/ttyACM0 # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
      - /dev/video0:/dev/video0
    volumes:
      - /root/octoprint/geniuspro:/octoprint
    # uncomment the lines below to ensure camera streaming is enabled when
    # you add a video device
    environment:
      - ENABLE_MJPG_STREAMER=true
      - CAMERA_DEV=/dev/video0
      - MJPG_STREAMER_INPUT=&quot;-y -n -r 1280x960 -f 30

  sidewinderx2:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 5001:5000
      - 8081:8080
    devices:
      - /dev/ttySidewinderX2:/dev/ttyACM0 # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
      - /dev/video2:/dev/video0
    volumes:
      - /root/octoprint/sidewinderx2:/octoprint
    # uncomment the lines below to ensure camera streaming is enabled when
    # you add a video device
    environment:
      - ENABLE_MJPG_STREAMER=true
      - CAMERA_DEV=/dev/video0
      - MJPG_STREAMER_INPUT=&quot;-y -n -r 1280x960 -f 30  

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;webcams&quot;&gt;Webcams&lt;/h2&gt;
&lt;p&gt;Unlike printers which have different serial numbers, I have two &lt;strong&gt;Logitech C270&lt;/strong&gt; webcams that are exactly the same model. How can we  differente them? How can we make the OS to take the right camera?&lt;/p&gt;

&lt;p&gt;Again we do the analysis with &lt;code class=&quot;highlighter-rouge&quot;&gt;lsusb&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# lsusb
Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
Bus 001 Device 004: ID 046d:0825 Logitech, Inc. Webcam C270
Bus 001 Device 003: ID 046d:0825 Logitech, Inc. Webcam C270
Bus 001 Device 015: ID 0483:5740 STMicroelectronics Virtual COM Port
Bus 001 Device 016: ID 0483:5740 STMicroelectronics Virtual COM Port
Bus 001 Device 002: ID 2109:3431 VIA Labs, Inc. Hub
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ambas cámaras están en el mismos bus pero identificadas como dispositivos USB diferentes, lo cual podemos aprovechar. En este caso no usaremos el id del producto para diferencialrlas sino el id de dispositivo USB.  Tomaremos como referecia el subsystem &lt;code class=&quot;highlighter-rouge&quot;&gt;video4linux&lt;/code&gt; en vez de &lt;code class=&quot;highlighter-rouge&quot;&gt;tty&lt;/code&gt;, por lo que estaremos usando &lt;code class=&quot;highlighter-rouge&quot;&gt;KERNELS&lt;/code&gt; en vez de &lt;code class=&quot;highlighter-rouge&quot;&gt;KERNEL&lt;/code&gt; para diferenciar las cámaras. Por ejemplo, para saber en qué dispositivo USB está  la cámara en &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/video0&lt;/code&gt; podemos ejecutar lo siguiente:&lt;/p&gt;

&lt;p&gt;Both cameras are on the same bus but identified as different USB devices, which we can take advantage of. In this case we will not use the product id to differentiate them but the USB device id. We’ll be referencing the &lt;code class=&quot;highlighter-rouge&quot;&gt;video4linux&lt;/code&gt; subsystem instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;tty&lt;/code&gt;, so we’ll be using &lt;code class=&quot;highlighter-rouge&quot;&gt;KERNELS&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;KERNEL&lt;/code&gt; to differentiate cameras. For example, to find out which USB device the camera in &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/video0&lt;/code&gt; is on, we can run the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# udevadm info -a -p  $(udevadm info -q path -n /dev/video0) | grep KERNELS
    KERNELS==&quot;1-1.4:1.0&quot;
    KERNELS==&quot;1-1.4&quot;
    KERNELS==&quot;1-1&quot;
    KERNELS==&quot;usb1&quot;
    KERNELS==&quot;0000:01:00.0&quot;
    KERNELS==&quot;0000:00:00.0&quot;
    KERNELS==&quot;pci0000:00&quot;
    KERNELS==&quot;fd500000.pcie&quot;
    KERNELS==&quot;scb&quot;
    KERNELS==&quot;platform&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the other camera we do the same:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# udevadm info -a -p  $(udevadm info -q path -n /dev/video2) | grep KERNELS
    KERNELS==&quot;1-1.3:1.0&quot;
    KERNELS==&quot;1-1.3&quot;
    KERNELS==&quot;1-1&quot;
    KERNELS==&quot;usb1&quot;
    KERNELS==&quot;0000:01:00.0&quot;
    KERNELS==&quot;0000:00:00.0&quot;
    KERNELS==&quot;pci0000:00&quot;
    KERNELS==&quot;fd500000.pcie&quot;
    KERNELS==&quot;scb&quot;
    KERNELS==&quot;platform&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now with this information we can modify the &lt;code class=&quot;highlighter-rouge&quot;&gt;udev&lt;/code&gt; rules as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Genius Pro
KERNEL==&quot;ttyACM[0-9]*&quot;, SUBSYSTEM==&quot;tty&quot;, ATTRS{idVendor}==&quot;0483&quot;, ATTRS{idProduct}==&quot;5740&quot;, ATTRS{serial}==&quot;3594398F3538&quot;, SYMLINK=&quot;ttyGeniusPro&quot;
SUBSYSTEM==&quot;video4linux&quot;, KERNELS==&quot;1-1.3&quot;, ATTRS{idVendor}==&quot;046d&quot;, ATTRS{idProduct}==&quot;0825&quot;, SYMLINK=&quot;videoGeniusPro&quot;

# Sidewinder X2
KERNEL==&quot;ttyACM[0-9]*&quot;, SUBSYSTEM==&quot;tty&quot;, ATTRS{idVendor}==&quot;0483&quot;, ATTRS{idProduct}==&quot;5740&quot;, ATTRS{serial}==&quot;386F39543538&quot;, SYMLINK=&quot;ttySidewinderX2&quot;
SUBSYSTEM==&quot;video4linux&quot;, KERNELS==&quot;1-1.4&quot;, ATTRS{idVendor}==&quot;046d&quot;, ATTRS{idProduct}==&quot;0825&quot;, SYMLINK=&quot;videoSidewinderX2&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Remember to reset the &lt;code class=&quot;highlighter-rouge&quot;&gt;udev&lt;/code&gt; rules with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@octopi:~/octoprint# udevadm control --reload-rules &amp;amp;&amp;amp; udevadm trigger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So now we have the cameras mapped to &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/videoGeniusPro&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/videoSidewinderX2&lt;/code&gt; respectively. Now we can modify the &lt;strong&gt;docker-compose.yml&lt;/strong&gt; file to take this new configuration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '2.4'

services:
  geniuspro:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 5000:5000
      - 8080:8080
    devices:
      - /dev/ttyGeniusPro:/dev/ttyACM0 # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
      - /dev/videoGeniusPro:/dev/video0
    volumes:
      - /root/octoprint/geniuspro:/octoprint
    # uncomment the lines below to ensure camera streaming is enabled when
    # you add a video device
    environment:
      - ENABLE_MJPG_STREAMER=true
      - CAMERA_DEV=/dev/video0
      - MJPG_STREAMER_INPUT=&quot;-y -n -r 1280x960 -f 30

  sidewinderx2:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 5001:5000
      - 8081:8080
    devices:
      - /dev/ttySidewinderX2:/dev/ttyACM0 # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
      - /dev/videoSidewinderX2:/dev/video0
    volumes:
      - /root/octoprint/sidewinderx2:/octoprint
    # uncomment the lines below to ensure camera streaming is enabled when
    # you add a video device
    environment:
      - ENABLE_MJPG_STREAMER=true
      - CAMERA_DEV=/dev/video0
      - MJPG_STREAMER_INPUT=&quot;-y -n -r 1280x960 -f 30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;performance-with-two-instances-of-octoprint&quot;&gt;Performance with two instances of OctoPrint&lt;/h2&gt;
&lt;p&gt;Probably you are wondering about the consumption of these containers in the operating system and if the Raspberry can handle it. Here is an image of &lt;code class=&quot;highlighter-rouge&quot;&gt;htop&lt;/code&gt; with the two containers above printing to each of the printers at the same time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/octoprint-htop.jpg&quot; alt=&quot;htop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como pordás notar la Raspberry está holgada, ya que de los 8GB de RAM apenas está consumiendo 0.5 GB incluyendo el sistema operativo. De esto podemos sacar dos conclusiones: la primera es que se pueden agregar más impresoras sin problemas, el único límite es la cantidad de puertos USB que ofrece las Raspberry (4 en mi modelo), pero podrías agregar un hub USB para agregar puertos; y lo segundo es que para dos impresoras se podría usar una Raspberry con menos RAM, por ejemplo de 2 GB o 4 GB, y así economizarías un poco.&lt;/p&gt;

&lt;p&gt;As you can see the Raspberry has a lot of resources available, since of the 8GB of RAM it is only consuming 0.5 GB including the operating system. From this we can draw two conclusions: the first one is that more printers can be added without problems, the only limit is the number of USB ports offered by the Raspberry (4 in my model), but you could add a USB hub to add more ports; and the second conclusion is that for two printers you could use a Raspberry with less RAM, for example 2 GB or 4 GB, and thus you would save a little.&lt;/p&gt;

&lt;h2 id=&quot;what-does-the-raspberry-pi-and-printers-look-like&quot;&gt;What does the Raspberry Pi and printers look like?&lt;/h2&gt;
&lt;p&gt;To finish this article I leave you a photo of my printers connected to the RaspBerry Pi:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/3dprinters.jpg&quot; alt=&quot;3D printers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the smaller printer you can see a small gray box that is the Raspberry Pi, next to the two web cameras.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://octoprint.org&quot; target=&quot;_blank&quot;&gt;OctoPrint&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/guysoft/OctoPi&quot; target=&quot;_blank&quot;&gt;OctoPi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://thomas-messmer.com/index.php/14-free-knowledge/howtos/79-setting-up-octoprint-for-multiple-printers&quot; target=&quot;_blank&quot;&gt;Setting up OctoPrint on a Raspberry Pi for multiple printers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/LcA9o6OGfEg&quot; target=&quot;_blank&quot;&gt;Installing OctoPrint using Docker in Linux (video tutorial)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1aU7LGYAe6r45LqEBQ8opuXCiNKeJl3XrPTrobvEvdOM/edit&quot; target=&quot;_blank&quot;&gt;Installing OctoPrint using Docker in Linux (instructions)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://community.octoprint.org/t/usb-webcams-known-to-work-with-mjpg-streamer/21149&quot; target=&quot;_bla￼nk&quot;&gt;USB webcams known to work with mjpg-streamer&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/49910/how-to-distinguish-between-identical-usb-to-serial-adapters&quot; target=&quot;_blank&quot;&gt;How to distinguish between identical USB-to-serial adapters?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/424887/udev-rule-to-discern-2-identical-webcams-on-linux&quot; target=&quot;_blank&quot;&gt;Udev Rule to discern 2 identical webcams on Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="3dPrint" /><category term="Linux" /><category term="OctoPi" /><category term="Raspberry" /><summary type="html">One of the most useful tools when managing a 3D printer is OctoPrint, since among several things it allows you to manage your printer from a web interface, as well as adding a lot of functionality (for example, monitoring and management of the printer through Telegram, plugins to generate timelapse videos of the prints, or even detect when there are spaghetti-like problems in our prints using another plugin with AI).</summary></entry><entry><title type="html">PaperLike Pencil Grips</title><link href="https://lgallardo.com/2022/04/17/paperlike-pencil-grips" rel="alternate" type="text/html" title="PaperLike Pencil Grips" /><published>2022-04-17T00:00:00-05:00</published><updated>2022-04-17T00:00:00-05:00</updated><id>https://lgallardo.com/2022/04/17/paperlike-pencil-grips</id><content type="html" xml:base="https://lgallardo.com/2022/04/17/paperlike-pencil-grips">&lt;p&gt;&lt;img src=&quot;/assets/images/PaperLike-Pencil-Grip.jpg&quot; alt=&quot;PaperLike Pencil Grips&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;&lt;br /&gt;
I’ve been using my iPad for a while to take notes with the Apple Pencil and I decided to write this article to tell you about a product that has pleasantly surprised me and which I think is an excellent improvement to consider: the &lt;strong&gt;Paper Like Pencil Grips&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It may have happened to you that when using the Apple Pencil for a long time, your hand gets tired? This is common even with traditional pencils, and for this there was already a solution, the classic grips adapted to the pencil to improve the posture of the fingers when writing. This is what the PaperLike team ended up designing, but for the Apple Pencil.&lt;/p&gt;

&lt;p&gt;You’ll say that they are simple grips and probably you think you can use traditional grips to adapt them to the Apple Pencil…Yes, for little money you can put a generic grip on it but there’re a couple of things that you should consider, that the PaperLike team has already solved and that you won’t have with a generic product:&lt;/p&gt;

&lt;h2 id=&quot;apple-pencils-magnetic-charge&quot;&gt;Apple Pencil’s magnetic charge&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/Grip-on-iPad.jpg&quot; alt=&quot;Blink config&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;They achieve this thanks to the fact their grips are specially designed for the Apple Pencil, since they have the shape of the pencil, and the side used for magnetic charging is slightly thinner.&lt;/p&gt;

&lt;h2 id=&quot;the-posture-of-the-fingers&quot;&gt;The posture of the fingers&lt;/h2&gt;
&lt;p&gt;The PaperLike guys took into account two edge cases: precision and prolonged periods of use. Yes, two different pencil grips come in the envelop: The first is aimed at having maximum precision when grabbing the pencil, for example when you need fine details when drawing. The second one is designed to help those who take notes for a long time, ideal for university students.&lt;/p&gt;

&lt;p&gt;In my case, I really enjoy the grip for long session using (although I left behind my university yeas a long time ago), but I am sure this will be very useful for students, and for artists (professional or not) it will be help them  to have more precise lines when making their creations.&lt;/p&gt;

&lt;p&gt;It is definitely an improvement that undoubtedly changes the experience of using the iPad and the Apple Pencil.&lt;/p&gt;

&lt;h2 id=&quot;double-tap-funtion&quot;&gt;Double tap funtion&lt;/h2&gt;
&lt;p&gt;The Apple Pencil has a second function that is activated by double-tapping the flat part of the pencil. With a generic grip there’s no way to double tap. The PaperLike Pencil Grips achieves this with the thinnest part of the grip. But I must comment that to use it you have to turn the pencil to be able to double tap. I use this a lot in &lt;strong&gt;GoodNotes 5&lt;/strong&gt;, and it’s not that natural. In fact, the founder of PaperLike in the How-To video comments that one option is to use the grip with that part facing up, but I think it loses its grace becuase the grip’s shape was designed for the index fingers and the thumb. It seemed to me that the best option is to get used to turning the pencil before doing the double tap, and turning it  back to continue writing.&lt;/p&gt;

&lt;h1 id=&quot;the-packaging&quot;&gt;The packaging&lt;/h1&gt;
&lt;p&gt;Finally, I would like to highlight something pleasant, which is the packaging in which it came. As I bought the grips at an early stage, they came in a paper envelope, which in fact they make clear is not the final packaging for the product.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PaperLike-Pencil-Grips-Envelop.jpg&quot; alt=&quot;PaperLike Pencil Grips Packing&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In particular, it doesn’t bother me at all and in fact I would even say that it should be the final version, a simple and environmentally friendly presentation. The only thing that would suggest to improve is that the material of the envelope, it should be a little harder so that it can withstand the onslaught of the trip, or in any case they should send them in “fragile” correspondence, since the shipment was not at all economical (€ 39.99). In my case, mine arrived in that envelope a little wrinkled, and the contents also wrinkled.&lt;/p&gt;

&lt;p&gt;Other details that I liked were the thank you note they place on the packaging, handwritten by the founder of PaperLike (and then printed industrially), as well as a very nice sticker that they add from the community of artists who use their products.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PaperLike-Pencil-Grips-thanks.jpg&quot; alt=&quot;PaperLike Pencil Grips thanking note&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/PaperLike-Pencil-Grips-Sticker.jpg&quot; alt=&quot;PaperLike Pencil Grips sticker gift&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;where-to-buy-the-paperlike-grips&quot;&gt;Where to buy the PaperLike Grips?&lt;/h1&gt;
&lt;p&gt;As I mentioned, they are at an early stage, so at the moment the only place you will be able to buy them in PaperLike’s store, got to &lt;a href=&quot;https://paperlike.com/collections/ipad-accessories&quot; target=&quot;_blank&quot;&gt;iPad accessories&lt;/a&gt; , here the &lt;a href=&quot;https://paperlike.com/collections/ipad-accessories/products/pencil-grip-set&quot; target=&quot;_blank&quot;&gt;PaperLike Pencil Grips are available.&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;If you need a grip for your Apple Pencil, keep in mind this option offered by the PaperLike guys, which will undoubtedly improve your user experience on your iPad  significantly.&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;I wrote this post to share my experience with the PaperLike pencil grips, and I did not receive any sponsorship or have any profit or participation in their sales.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://paperlike.com&quot; target=&quot;_blank&quot;&gt;PaperLike page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://paperlike.com/collections/ipad-accessories&quot; target=&quot;_blank&quot;&gt;iPad Accessories&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://paperlike.com/collections/ipad-accessories/products/pencil-grip-set&quot; target=&quot;_blank&quot;&gt;PaperLike Pencil Grips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Mac" /><category term="iPad" /><summary type="html">I’ve been using my iPad for a while to take notes with the Apple Pencil and I decided to write this article to tell you about a product that has pleasantly surprised me and which I think is an excellent improvement to consider: the Paper Like Pencil Grips.</summary></entry><entry><title type="html">iPad Pro as portable workstation</title><link href="https://lgallardo.com/2022/01/25/ipad-pro-as-a-portable-workstation/" rel="alternate" type="text/html" title="iPad Pro as portable workstation" /><published>2022-01-24T18:00:00-06:00</published><updated>2022-01-24T18:00:00-06:00</updated><id>https://lgallardo.com/2022/01/25/ipad-pro-as-a-portable-workstation</id><content type="html" xml:base="https://lgallardo.com/2022/01/25/ipad-pro-as-a-portable-workstation/">&lt;p&gt;&lt;img src=&quot;/assets/images/ipad-pro-2021.jpg&quot; alt=&quot;iPad Pro&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;&lt;br /&gt;
It’s been a while since I posted on the blog, first because I couldn’t find something interesting to share and second because there wasn’t much spare time (It’s not that now there’s a lot of time to spare but well, one make some time to write a few lines).&lt;/p&gt;

&lt;p&gt;The truth is I recently got an iPad Pro 11” and among the things I tried was the possibility to use it as a light work equipment, that is, a computer that I can have on hand on my bedside table without it being a complete computer.&lt;/p&gt;

&lt;p&gt;While the iPad has many advantages and things that I really liked, it seems the term “Pro” is not enough to have a complete terminal as you can find in an operating system or to have a functional &lt;a href=&quot;https://youtu.be/LrLDKYFyLMM&quot; target=&quot;_blank&quot;&gt;virtual machine&lt;/a&gt;, so I decided to investigate if there is an option to use it as a client that connects somewhere else where I can have access to a complete operating system.&lt;/p&gt;

&lt;p&gt;In fact, I read an &lt;a href=&quot;https://arslan.io/2019/01/07/using-the-ipad-pro-as-my-development-machine/&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt; that suggested using a Digital Ocean Droplet to have a virtual machine in the cloud and from there be able to work. This option is not bad, but having a workstation at home I didn’t see the need to go to the cloud.&lt;/p&gt;

&lt;p&gt;Following some of these suggestions I ended up installing &lt;strong&gt;Blink Shell&lt;/strong&gt; that comes with &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; support, and using &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; on my remote Linux laptop I was able to achieve this. Below I explain the details of this configuration.&lt;/p&gt;

&lt;h1 id=&quot;blink-shell-ssh--mosh&quot;&gt;Blink Shell (ssh / mosh)&lt;/h1&gt;

&lt;p&gt;The first thing I had to look for was a decent &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; client for iPad. &lt;strong&gt;&lt;a href=&quot;https://blink.sh&quot; target=&quot;_blank&quot;&gt;Blink Shell&lt;/a&gt;&lt;/strong&gt; appeared as recurring recommendation on Internet articles. At first, I didn’t like the fact you have to buy it without a trial but since there were several recommendations I gave it a try (USD 19.99 at the date of publication of this post).&lt;/p&gt;

&lt;p&gt;I have to admit  &lt;strong&gt;Blink Shell&lt;/strong&gt; is very, very good, it’s  designed for mobile devices and has support for &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;mosh&quot;&gt;Mosh&lt;/h2&gt;
&lt;p&gt;Maybe you are wondering as I did, What is &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt;?  The definition from the &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; page says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Remote terminal application that allows roaming, supports intermittent connectivity, and provides intelligent local echo and line editing of user keystrokes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do you still not understand what &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; is for as it happened to me? It’s like &lt;code class=&quot;highlighter-rouge&quot;&gt;screen&lt;/code&gt; but without having to learn commands to create and manage sessions, it also uses &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; under the hood. In other words, you will have the possibility to continue working on your session where you left it off, or if for example your connection was cut and you manage to connect again to another network.&lt;/p&gt;

&lt;p&gt;As under the hood  it uses &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt;, in order to use &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; the syntax is practically the same. Therefore if you used to connect to a server using &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh lgallard@192.168.1.65
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now with &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; you can connect to the server as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mosh lgallard@192.168.1.65
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The change seems simple and with this we now are able to close our iPad or the computer where we are using the &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; client and be able to magically recover the work session when we reconnect.&lt;/p&gt;

&lt;p&gt;You can configure  &lt;strong&gt;Blink Shell&lt;/strong&gt; options by accessing a configuration wizard to have different hosts and ease the connection with a name instead of an IP address. To access this wizard simply type &lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt; from the terminal:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Blink_config.png&quot; alt=&quot;Blink config&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In my case now I can connect to my workstation as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mosh dauntless
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mosh-the-bad&quot;&gt;Mosh, the bad&lt;/h2&gt;

&lt;p&gt;As a con &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; can’t scroll the terminal, that is, if you need to check the output of commands that you have previously executed and are no longer on the screen, you won’t be able to see them. For me, this was a big problem because when using &lt;code class=&quot;highlighter-rouge&quot;&gt;terraform&lt;/code&gt; I lost the plans with the changes to be applied.&lt;/p&gt;

&lt;p&gt;This is the way &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; works, to have optimal performance they render the text. There’s an &lt;a href=&quot;https://github.com/mobile-shell/mosh/issues/122&quot; target=&quot;_blank&quot;&gt;open issue&lt;/a&gt; since several years where the developers commented they left it opened as a reference but  they have no intention of implementing it. So, is there  no solution? Yes, &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;what-is-tmux&quot;&gt;What is tmux?&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; is a tool that allows you to have several terminals open (or windows) to be accessed and controlled from a single terminal as we would do with &lt;code class=&quot;highlighter-rouge&quot;&gt;screen&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You have to install &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; on the computer where we want to log in and once installed it’s enough to run this from the &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; client (the iPad Pro in my case):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mosh danuntless -- tmux new  -s terminal-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way we can create a new session whose name is &lt;strong&gt;terminal-1&lt;/strong&gt;. Then to access this session later you have to run the following:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mosh danuntless -- tmux a  -t terminal-1&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;enabling--scrolling-on-tmux&quot;&gt;Enabling  scrolling on tmux&lt;/h2&gt;

&lt;p&gt;On the remote workstation you must configure &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; to have scrolling enabled using &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt;, to achieve this edit the  &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.tmux.conf&lt;/code&gt; file with this content:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;new-session
set -g history-limit 30000
set -g mouse on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;blink--ssh---mosh--tmux--eh&quot;&gt;Blink + ssh  + mosh + tmux … eh?&lt;/h2&gt;

&lt;p&gt;“Wait a moment … &lt;strong&gt;Blink + ssh + mosh + tmux&lt;/strong&gt;, Are all these too complicated? Isn’t it better to use &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;screen&lt;/code&gt;? “. Yes, it’s an alternative, but with &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; you would not be able to reconnect automatically and you will have to log in again if you close the iPad or if your IP address changes for some reason (for example,  if you change  your connection from WiFI to cell phone) or if the &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; session expires.&lt;/p&gt;

&lt;p&gt;I have to admit there’s a learning curve to cover with &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; but once passed you will love it and wonder why you didn’t use &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; before.&lt;/p&gt;

&lt;h2 id=&quot;more-about-tmux&quot;&gt;More about tmux&lt;/h2&gt;

&lt;p&gt;If you want to learn how to use &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; I leave you a &lt;a href=&quot;https://tmuxcheatsheet.com&quot; target=&quot;_blank&quot;&gt;cheat sheet&lt;/a&gt; with the commands you can use. In my case, I found the panels division and the use of zooming between them very useful, but I must admit that copying text between panels is somewhat complicated on the iPad and sometimes I prefer to use &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt; for this, but I will surely find a workaround.&lt;/p&gt;

&lt;h1 id=&quot;final-words&quot;&gt;Final words&lt;/h1&gt;

&lt;p&gt;Here I comment my experiences with the iPad Pro, but all these can be replicated on an iPad Air and even use &lt;code class=&quot;highlighter-rouge&quot;&gt;mosh&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; from other workstations with Linux or Windows.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/LrLDKYFyLMM&quot; target=&quot;_blank&quot;&gt;Run ANY OS on iPad or iPhone! - YouTube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arslan.io/2019/01/07/using-the-ipad-pro-as-my-development-machine/&quot; target=&quot;_blank&quot;&gt;Using the iPad Pro as my development machine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blink.sh&quot; target=&quot;_blank&quot;&gt;Blink Shell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blink.sh&quot; target=&quot;_blank&quot;&gt;Mosh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tmuxcheatsheet.com&quot;&gt;Tmux cheat sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mobile-shell/mosh/issues/122&quot; target=&quot;_blank&quot;&gt;mosh prevents the use of scrollback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Management" /><category term="Mac" /><summary type="html">It’s been a while since I posted on the blog, first because I couldn’t find something interesting to share and second because there wasn’t much spare time (It’s not that now there’s a lot of time to spare but well, one make some time to write a few lines).</summary></entry><entry><title type="html">Helm 3 local repo</title><link href="https://lgallardo.com/2021/06/15/helm-local-repo/" rel="alternate" type="text/html" title="Helm 3 local repo" /><published>2021-06-14T19:00:00-05:00</published><updated>2021-06-14T19:00:00-05:00</updated><id>https://lgallardo.com/2021/06/15/helm3-local-repo</id><content type="html" xml:base="https://lgallardo.com/2021/06/15/helm-local-repo/">&lt;p&gt;&lt;img src=&quot;/assets/images/helm.jpg&quot; alt=&quot;Helm 3 local repo&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; /&gt;
In Helm 3 the support of &lt;strong&gt;helm serve&lt;/strong&gt; command was removed due to some design issues, therefore if you need a similar tool you have to install  &lt;strong&gt;helm servecm&lt;/strong&gt;  plugin, which uses &lt;strong&gt;ChartMuseum&lt;/strong&gt; for publishing the charts to your local storage (other storages are also supported, like S3 buckets).&lt;/p&gt;

&lt;p&gt;In this post you will learn how to install and publish a local repo in Helm 3.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install &lt;strong&gt;ChartMuseum&lt;/strong&gt;&lt;br /&gt;
First off, you need to install &lt;strong&gt;ChartMuseum&lt;/strong&gt;. At the project page you will find different ways  of installing it, but I install as a Go app as follows:&lt;br /&gt;&lt;br /&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;GO111MODULE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt; go get github.com/helm/chartmuseum@v0.13.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install &lt;strong&gt;helm servecm plugin&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;Then you need to install &lt;strong&gt;servecm&lt;/strong&gt; as a helm plugin:&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm plugin install https://github.com/jdolitsky/helm-servecm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install &lt;strong&gt;helm push plugin&lt;/strong&gt;&lt;br /&gt;
In order to host your charts, you will be using &lt;strong&gt;ChartMuseum&lt;/strong&gt; and &lt;strong&gt;helm servecm&lt;/strong&gt; pluing, but you will still need to publish them into &lt;strong&gt;ChartMuseum&lt;/strong&gt;. You can do it manually or use another plugin called &lt;strong&gt;helm push&lt;/strong&gt; which does it for you:&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm plugin install https://github.com/chartmuseum/helm-push.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add the local repo in helm:&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm repo add local http://127.0.0.1:8879/charts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run &lt;strong&gt;helm servecm plugin&lt;/strong&gt;:&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;Next step is to run &lt;strong&gt;helm servecm&lt;/strong&gt; plugin:&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm servecm &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8879 &lt;span class=&quot;nt&quot;&gt;--storage&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--storage-local-rootdir&lt;/span&gt; ./local &lt;span class=&quot;nt&quot;&gt;--context-path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/charts 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Now you can publish your charts at http://127.0.0.1:8879/charts&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Publish your chart to your local repo:&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm push your-chart &lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point you will be able to use you local charts in your cluster by executing:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm install  your-chart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://helm.sh/docs/faq/#removal-of-helm-serve&quot; target=&quot;_blank&quot;&gt;Removal of helm serve&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jdolitsky/helm-servecm&quot; target=&quot;_blank&quot;&gt;helm servecm plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/helm/chartmuseum&quot; target=&quot;_blank&quot;&gt;ChartMuseum&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chartmuseum/helm-push&quot; target=&quot;_blank&quot;&gt;helm push plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Kubernetes" /><category term="k8s" /><category term="EKS" /><summary type="html">In Helm 3 the support of helm serve command was removed due to some design issues, therefore if you need a similar tool you have to install helm servecm plugin, which uses ChartMuseum for publishing the charts to your local storage (other storages are also supported, like S3 buckets).</summary></entry><entry><title type="html">Terraform module for AWS ECR</title><link href="https://lgallardo.com/2021/04/15/terraform-module-for-aws-ecr" rel="alternate" type="text/html" title="Terraform module for AWS ECR" /><published>2021-04-15T00:00:00-05:00</published><updated>2021-04-15T00:00:00-05:00</updated><id>https://lgallardo.com/2021/04/15/terraform-module-for-aws-ecr</id><content type="html" xml:base="https://lgallardo.com/2021/04/15/terraform-module-for-aws-ecr">&lt;center&gt;&lt;img src=&quot;/images/terraform-aws-ecr.jpg&quot; alt=&quot;Terraform&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
I share here another Terraform module I published as open source code, which allows you to create registries in AWS ECR.&lt;/p&gt;

&lt;p&gt;You can check my module &lt;strong&gt;terraform-aws-ecr&lt;/strong&gt; at the &lt;a href=&quot;https://registry.terraform.io/modules/lgallard/ecr/aws&quot; target=&quot;_blank&quot;&gt;Terraform Registry&lt;/a&gt; or clone it from &lt;a href=&quot;https://github.com/lgallard/terraform-aws-ecr.git&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to take a sneak of the module, I also left the README in this post:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lgallardo.com/images/terraform.jpg&quot; alt=&quot;Terraform&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;terraform-aws-ecr&quot;&gt;terraform-aws-ecr&lt;/h1&gt;
&lt;p&gt;Terraform module to create &lt;a href=&quot;https://aws.amazon.com/ecr/&quot; target=&quot;_blank&quot;&gt;AWS ECR&lt;/a&gt; (Elastic Container Registry) which is a fully-managed Docker container registry.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;You can use this module to create an ECR registry using few parameters (simple example) or define in detail every aspect of the registry (complete example).&lt;/p&gt;

&lt;p&gt;Check the &lt;a href=&quot;https://github.com/lgallard/terraform-aws-ecr/tree/master/examples&quot; target=&quot;_blank&quot;&gt;examples&lt;/a&gt; for the  &lt;strong&gt;simple&lt;/strong&gt; and the &lt;strong&gt;complete&lt;/strong&gt; snippets.&lt;/p&gt;

&lt;h3 id=&quot;simple-example&quot;&gt;Simple example&lt;/h3&gt;
&lt;p&gt;This example creates an ECR registry using few parameters&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;ecr&quot; {

  source = &quot;lgallard/ecr/aws&quot;

  name         = &quot;ecr-repo-dev&quot;

  # Tags
  tags = {
    Owner       = &quot;DevOps team&quot;
    Environment = &quot;dev&quot;
    Terraform   = true
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;complete-example&quot;&gt;Complete example&lt;/h3&gt;
&lt;p&gt;In this example the register is defined in detailed.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;ecr&quot; {

  source = &quot;lgallard/ecr/aws&quot;

  name                 = &quot;ecr-repo-dev&quot;
  scan_on_push         = true
  timeouts_delete      = &quot;60m&quot;
  image_tag_mutability = &quot;MUTABLE&quot;


  # Note that currently only one policy may be applied to a repository.
  policy = &amp;lt;&amp;lt;EOF
{
    &quot;Version&quot;: &quot;2008-10-17&quot;,
    &quot;Statement&quot;: [
        {
            &quot;Sid&quot;: &quot;repo policy&quot;,
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Principal&quot;: &quot;*&quot;,
            &quot;Action&quot;: [
                &quot;ecr:GetDownloadUrlForLayer&quot;,
                &quot;ecr:BatchGetImage&quot;,
                &quot;ecr:BatchCheckLayerAvailability&quot;,
                &quot;ecr:PutImage&quot;,
                &quot;ecr:InitiateLayerUpload&quot;,
                &quot;ecr:UploadLayerPart&quot;,
                &quot;ecr:CompleteLayerUpload&quot;,
                &quot;ecr:DescribeRepositories&quot;,
                &quot;ecr:GetRepositoryPolicy&quot;,
                &quot;ecr:ListImages&quot;,
                &quot;ecr:DeleteRepository&quot;,
                &quot;ecr:BatchDeleteImage&quot;,
                &quot;ecr:SetRepositoryPolicy&quot;,
                &quot;ecr:DeleteRepositoryPolicy&quot;
            ]
        }
    ]
}
EOF

  # Only one lifecycle policy can be used per repository.
  # To apply multiple rules, combined them in one policy JSON.
  lifecycle_policy = &amp;lt;&amp;lt;EOF
{
    &quot;rules&quot;: [
        {
            &quot;rulePriority&quot;: 1,
            &quot;description&quot;: &quot;Expire untagged images older than 14 days&quot;,
            &quot;selection&quot;: {
                &quot;tagStatus&quot;: &quot;untagged&quot;,
                &quot;countType&quot;: &quot;sinceImagePushed&quot;,
                &quot;countUnit&quot;: &quot;days&quot;,
                &quot;countNumber&quot;: 14
            },
            &quot;action&quot;: {
                &quot;type&quot;: &quot;expire&quot;
            }
        },
        {
            &quot;rulePriority&quot;: 2,
            &quot;description&quot;: &quot;Keep last 30 dev images&quot;,
            &quot;selection&quot;: {
                &quot;tagStatus&quot;: &quot;tagged&quot;,
                &quot;tagPrefixList&quot;: [&quot;dev&quot;],
                &quot;countType&quot;: &quot;imageCountMoreThan&quot;,
                &quot;countNumber&quot;: 30
            },
            &quot;action&quot;: {
                &quot;type&quot;: &quot;expire&quot;
            }
        }
    ]
}
EOF

  # Tags
  tags = {
    Owner       = &quot;DevOps team&quot;
    Environment = &quot;dev&quot;
    Terraform   = true
  }

}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;providers&quot;&gt;Providers&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Version&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;aws&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;inputs&quot;&gt;Inputs&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Default&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Required&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;encryption_type&lt;/td&gt;
      &lt;td&gt;The encryption type to use for the repository. Valid values are &lt;code class=&quot;highlighter-rouge&quot;&gt;AES256&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;KMS&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;AES256&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;image_scanning_configuration&lt;/td&gt;
      &lt;td&gt;Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the ECR User Guide for more information about image scanning.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;image_tag_mutability&lt;/td&gt;
      &lt;td&gt;The tag mutability setting for the repository. Must be one of: &lt;code class=&quot;highlighter-rouge&quot;&gt;MUTABLE&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;IMMUTABLE&lt;/code&gt;.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;MUTABLE&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;kms_key&lt;/td&gt;
      &lt;td&gt;The ARN of the KMS key to use when encryption_type is &lt;code class=&quot;highlighter-rouge&quot;&gt;KMS&lt;/code&gt;. If not specified when encryption_type is &lt;code class=&quot;highlighter-rouge&quot;&gt;KMS&lt;/code&gt;, uses a new KMS key. Otherwise, uses the default AWS managed key for ECR.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lifecycle_policy&lt;/td&gt;
      &lt;td&gt;Manages the ECR repository lifecycle policy&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;name&lt;/td&gt;
      &lt;td&gt;Name of the repository.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;policy&lt;/td&gt;
      &lt;td&gt;Manages the ECR repository policy&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;scan_on_push&lt;/td&gt;
      &lt;td&gt;Indicates whether images are scanned after being pushed to the repository (true) or not scanned (false).&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bool&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tags&lt;/td&gt;
      &lt;td&gt;A mapping of tags to assign to the resource.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map(string)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;timeouts&lt;/td&gt;
      &lt;td&gt;Timeouts map.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;timeouts_delete&lt;/td&gt;
      &lt;td&gt;How long to wait for a repository to be deleted.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;outputs&quot;&gt;Outputs&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;arn&lt;/td&gt;
      &lt;td&gt;Full ARN of the repository&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;name&lt;/td&gt;
      &lt;td&gt;The name of the repository.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;registry_id&lt;/td&gt;
      &lt;td&gt;The registry ID where the repository was created.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;repository_url&lt;/td&gt;
      &lt;td&gt;The URL of the repository (in the form &lt;code class=&quot;highlighter-rouge&quot;&gt;aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName&lt;/code&gt;)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lgallard/terraform-aws-ecr.git&quot; target=&quot;_blank&quot;&gt;terraform-aws-ecr module at Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.terraform.io/modules/lgallard/ecr/aws&quot; target=&quot;_blank&quot;&gt;terraform-aws-ecr module at Terraform Registry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Terraform" /><summary type="html">I share here another Terraform module I published as open source code, which allows you to create registries in AWS ECR.</summary></entry><entry><title type="html">Mouse Logitech MX Anywhere 2s Flounder on Linux</title><link href="https://lgallardo.com/2020/08/06/2020-08-06-logitech-mx-anywhere-2s-flounder-on-linux/" rel="alternate" type="text/html" title="Mouse Logitech MX Anywhere 2s Flounder on Linux" /><published>2020-08-05T19:00:00-05:00</published><updated>2020-08-05T19:00:00-05:00</updated><id>https://lgallardo.com/2020/08/06/logitech-mx-anywhere-2s-flounder-on-linux</id><content type="html" xml:base="https://lgallardo.com/2020/08/06/2020-08-06-logitech-mx-anywhere-2s-flounder-on-linux/">&lt;center&gt;&lt;img src=&quot;/images/logitech-mouse.jpg&quot; alt=&quot;Logitech Mx Anywhere 2s Flounder on Linux&quot; width=&quot;340&quot; height=&quot;340&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
I bought a Logitech Mx Anywhere 2s Flounder mouse too free up a USB port, and be able to configure more buttons compared to the mouse I had.&lt;/p&gt;

&lt;p&gt;When you connect it on Linux, the mouse works the first time without doing any magic. The two buttons on the right side of the mouse are configured for Forward and Back in the browser and any application in general.&lt;/p&gt;

&lt;p&gt;For Windows and for Mac there’s a mouse software that allows you to customize these buttons (with gesture support as well), but for Linux that software is not available.&lt;/p&gt;

&lt;p&gt;If you want to map these buttons in Linux you should use something like &lt;strong&gt;xbindkeys&lt;/strong&gt; or &lt;strong&gt;xmodmap&lt;/strong&gt;. Here I explain what I had to do to get it working the way I wanted.&lt;/p&gt;

&lt;h2 id=&quot;1-install-the-necessary-software&quot;&gt;1. Install the necessary software&lt;/h2&gt;

&lt;p&gt;You will need &lt;strong&gt;xbindkeys&lt;/strong&gt; for maping the  keys, and &lt;strong&gt;xdotool&lt;/strong&gt; to execute keyboard actions.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;apt install xbindkeys xdotool&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-detecting-the-button-keys&quot;&gt;2. Detecting the button keys&lt;/h2&gt;

&lt;p&gt;You can find out what keys are associated to your mouse using &lt;strong&gt;xev&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xev | grep button&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will open a small white window which is where you should place the mouse pointer and press the buttons to obtain the values associated with each key:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/xev.jpg&quot; alt=&quot;xev&quot; width=&quot;340&quot; height=&quot;340&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I tried all the buttons and their corresponding values are shown above, in the first image of this post above. In total there are 9 possible buttons / keys.&lt;/p&gt;

&lt;h2 id=&quot;3-buttons-mapping&quot;&gt;3. Buttons mapping&lt;/h2&gt;

&lt;p&gt;You need to create a file for &lt;strong&gt;xbindkeys&lt;/strong&gt; with the default options, which in fact is a file with some commented examples:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xbindkeys --defaults &amp;gt; ~/.xbindkeysrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And then add the mapping you want. In my case I added the following in the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.xbindkeysrc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;guake&quot;
  b:9

&quot;xdotool key Super_L&quot;
  b:8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally you must run the command &lt;code class=&quot;highlighter-rouge&quot;&gt;xbindkeys&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ xbindkeys&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now pressing button 9 (Forward) will run &lt;strong&gt;Guake&lt;/strong&gt;, while if I press button 8 (Back) it strokes the &lt;code class=&quot;highlighter-rouge&quot;&gt;Super_L&lt;/code&gt; key (Start key or also badly known as the Windows key).&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.logitech.com/en-roeu/product/mx-anywhere-2s-flow.910-005153.html#specs&quot; target=&quot;_blank&quot;&gt;Logitech MX Anywhere 2S  &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/101105/how-to-assign-back-and-forward-actions-to-logitech-anywhere-mouse-mx-horizo&quot; target=&quot;_blank&quot;&gt;How to assign “back” and “forward” actions to Logitech Anywhere Mouse MX’ horizontal scroll wheel?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Xbindkeys#Identifying_keycodes&quot; target=&quot;_blank&quot;&gt;Xbindkeys (ArchLinux)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Linux" /><category term="Debian" /><summary type="html">I bought a Logitech Mx Anywhere 2s Flounder mouse too free up a USB port, and be able to configure more buttons compared to the mouse I had.</summary></entry><entry><title type="html">Certified Kubernetes Administrator (CKA)</title><link href="https://lgallardo.com/2020/11/23/2020-11-23-certified-kubernetes-administrator-cka/" rel="alternate" type="text/html" title="Certified Kubernetes Administrator (CKA)" /><published>2020-07-25T19:00:00-05:00</published><updated>2020-07-25T19:00:00-05:00</updated><id>https://lgallardo.com/2020/11/23/certified-kubernetes-administrator-cka</id><content type="html" xml:base="https://lgallardo.com/2020/11/23/2020-11-23-certified-kubernetes-administrator-cka/">&lt;center&gt;&lt;img src=&quot;/images/ckad.jpg&quot; alt=&quot;Certified Kubernetes Application Developer&quot; width=&quot;340&quot; height=&quot;340&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
This post describes my experience and recommendations for tackling the &lt;strong&gt;Certified Kubernetes Administrator (CKA)&lt;/strong&gt; exam by The Linux Foundation.&lt;/p&gt;

&lt;h1 id=&quot;the-exam&quot;&gt;The exam&lt;/h1&gt;

&lt;p&gt;The exam is 100% practical with about 20 questions that must be solved in 2 hours, supervised by a proctor who verifies that you are alone during the exam, and that you comply with &lt;a href=&quot;https://docs.linuxfoundation.org/tc-docs/certification/lf-candidate-handbook/exam-rules-and-policies&quot; target=&quot;_blank&quot;&gt;all rules&lt;/a&gt;. In my case, for this exam the proctored asked me to show a 360° view of the room, and to show him below my desk. He also asked me from time to time to show him my hands.&lt;/p&gt;

&lt;p&gt;First off, this exam goes beyond the CKAD exam in terms of complexity. You will face more difficult challenges, like fixing a broken cluster or detecting why a service is not running properly and make it work again.&lt;/p&gt;

&lt;p&gt;In my case there were few easy questions and I’d say that most of them were medium to difficult, therefore be prepared! You  you must manage your time very well. Questions will be shown in a panel on the left side and you will have access to a terminal where you have to execute the commands to solve them.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/exam_ui.jpg&quot; alt=&quot;Exam UI&quot; width=&quot;340&quot; height=&quot;340&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;There will be questions to create resources, others to identify and solve problems (troubleshooting &amp;amp; fixing) . You can copy and paste from the instructions, in addition to having access to a place for notes, for example to keep track of pending questions.&lt;/p&gt;

&lt;p&gt;You will be able to consult the Kubernetes documentation from these sites &lt;a href=&quot;https://kubernetes.io/docs/&quot; target=&quot;_blank&quot;&gt;https://kubernetes.io/docs/&lt;/a&gt;, &lt;a href=&quot;https://github.com/kubernetes/&quot; target=&quot;_blank&quot;&gt;https://github.com/kubernetes/&lt;/a&gt;, &lt;a href=&quot;https://kubernetes.io/blog/&quot; target=&quot;_blank&quot;&gt;https://kubernetes.io/blog/&lt;/a&gt;, opening one and only one additional tab to the exam.&lt;/p&gt;

&lt;p&gt;You can take the exam with Chrome, so yo can access the sites mentioned above from your bookmarks (yes, it’s allowed)&lt;/p&gt;

&lt;h1 id=&quot;my-experience&quot;&gt;My experience&lt;/h1&gt;

&lt;p&gt;With this exam I didn’t face any trouble at all (check my experience with CKAD exam). I didn’t have a clock or progress bar to keep track of the time in the examination interface, but this time I was conscious about timing. The proctor only interrupted me 15 minutes before the end of the exam to let me know it was almost over.&lt;/p&gt;

&lt;p&gt;I went with a lot of expectations, but this time regarding the exam’s difficulty.&lt;/p&gt;

&lt;h1 id=&quot;how-to-prepare&quot;&gt;How to prepare?&lt;/h1&gt;
&lt;p&gt;There are several free and other paid resources, all valid to prepare, but practical experience is essential. I list some of them:&lt;/p&gt;

&lt;h2 id=&quot;books&quot;&gt;Books&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/B072TS9ZQZ/ref=ppx_yo_dt_b_d_asin_title_o06?ie=UTF8&amp;amp;psc=1&quot; target=&quot;_blank&quot;&gt;The Kubernetes Book: Updated Feb 2020&lt;/a&gt;  by Nigel Poulton: This book is good for an overview of Kubernetes, and is an extension of Nigel’s course (see below).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Kubernetes-Running-Dive-Future-Infrastructure-ebook/dp/B07YP1XSZ9/ref=sr_1_1?dchild=1&amp;amp;keywords=kubernetes+up+and+running&amp;amp;qid=1595782565&amp;amp;s=digital-text&amp;amp;sr=1-1&quot; target=&quot;_blank&quot;&gt;Kubernetes up and running&lt;/a&gt;: This is an excellent book to learn Kubernetes, it covers various topics of CKAD and also of CKA.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;online-courses&quot;&gt;Online courses&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/certified-kubernetes-application-developer/&quot; target=&quot;_blank&quot;&gt;Kubernetes Certified Application Developer (CKAD) with Tests (Mumshad Mannambeth)&lt;/a&gt;: This course is very well designed and explains in detail and with many animations the concepts necessary to learn how to deploy applications in a Kubernetes cluster. Additionally, it gives access to a platform named &lt;em&gt;&lt;strong&gt;Kloud Kode&lt;/strong&gt;&lt;/em&gt; created with &lt;em&gt;&lt;strong&gt;Teachable&lt;/strong&gt;&lt;/em&gt; and with &lt;em&gt;&lt;strong&gt;Katacoda&lt;/strong&gt;&lt;/em&gt; environments designed for each topic covered, two exam-type labs (with a high degree of difficulty) and two exams to practice and prepare to work under the pressure of the real exam. .&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linuxacademy.com/course/certified-kubernetes-application-developer-ckad/&quot; target=&quot;_blank&quot;&gt;Certified Kubernetes Application Developer (CKAD) - Linux Academy&lt;/a&gt;: If you have a LinuxAcademy subscription you can follow this course. Keep two things in mind: 1) It focuses on editing yamls and little on how to generate them. 2) The exam mocks they have to practice are not so difficult and they may be insufficient to pass without having practiced beyond them. It’s recommended to do the labs, exams and other questions to exercise (see below)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/kubernetes-deep-dive&quot; target=&quot;_blank&quot;&gt;Kubernetes Deep Dive - A Cloud Guru&lt;/a&gt;: This course is to have an overview of Kubernetes, for example of its architecture (API Server, Kubelet, etc.) as well as to take the first steps in application deployments. No practical labs included.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/kubernetes-fundamental/&quot; target=&quot;_blank&quot;&gt;Kubernetes Fundamentals - A Cloud Guru&lt;/a&gt;: This course is to start with Kubernetes, to have the fundamental concepts. Ideal for those who have not had contact with Kubernetes. No practical labs included.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;practice-environments&quot;&gt;Practice environments&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/&quot; target=&quot;_blank&quot;&gt;Katacoda&lt;/a&gt;: This platform allows you to interact with a cluster with just one node, from a web console, similar to what we would get in the exam. The interesting thing is that there are scenarios created by other users that can be used to learn basic concepts, such as secrets, configmaps, volumes, etc. Please note that each scneario lasts a maximum of one hour.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/tools/install-minikube/&quot; target=&quot;_blank&quot;&gt;Minikube&lt;/a&gt;: With this option you can install a virtual machine to have your own cluster with a node.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;exercises-to-practice&quot;&gt;Exercises to practice&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dgkanatsios/CKAD-exercises&quot; target=&quot;_blank&quot;&gt;CKAD Exercises&lt;/a&gt;:
A set of exercises that will help you prepare for the exam and can also help you learn and practice with Kubernetes.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/bb-tutorials-and-thoughts/practice-enough-with-these-questions-for-the-ckad-exam-2f42d1228552&quot; target=&quot;_blank&quot;&gt;Practice Enough With These 150 Questions for the CKAD Exam&lt;/a&gt;:This is another set of exercises that serve to prepare you and have all the concepts fresh before going to the exam..&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeburst.io/kubernetes-ckad-weekly-challenges-overview-and-tips-7282b36a2681&quot; target=&quot;_blank&quot;&gt;Kubernetes CKAD Example Exam Questions Practical Challenge Series&lt;/a&gt;: This page presents some challenges to complete and some tips for the exam. They also offer an exam simulator at a cost of €30 (I didn’t subscribe, so I don’t know exactly what the simulator is like or if it really has similar exam questions).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;endnotes&quot;&gt;Endnotes&lt;/h1&gt;
&lt;p&gt;Again I recommend you to practice enough before taking the exam, even if you have experience with Kubernetes. Time management is important, so you must be prepared to use the Kubernetes documentation quickly (from the documentation page or from the console with kubectl), be prepared to generate yamls (not edit them), and handle nerves and pressure.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.linuxfoundation.org/tc-docs/certification/lf-candidate-handbook/exam-rules-and-policies&quot; target=&quot;_blank&quot;&gt;Exam Rules and Policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/B072TS9ZQZ/ref=ppx_yo_dt_b_d_asin_title_o06?ie=UTF8&amp;amp;psc=1&quot; target=&quot;_blank&quot;&gt;The Kubernetes Book: Updated Feb 2020&lt;/a&gt;  by Nigel Poulton.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Kubernetes-Running-Dive-Future-Infrastructure-ebook/dp/B07YP1XSZ9/ref=sr_1_1?dchild=1&amp;amp;keywords=kubernetes+up+and+running&amp;amp;qid=1595782565&amp;amp;s=digital-text&amp;amp;sr=1-1&quot; target=&quot;_blank&quot;&gt;Kubernetes up and running&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/certified-kubernetes-application-developer/&quot; target=&quot;_blank&quot;&gt;Kubernetes Certified Application Developer (CKAD) with Tests (Mumshad Mannambeth)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linuxacademy.com/course/certified-kubernetes-application-developer-ckad/&quot; target=&quot;_blank&quot;&gt;Certified Kubernetes Application Developer (CKAD) - Linux Academy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/kubernetes-deep-dive&quot; target=&quot;_blank&quot;&gt;Kubernetes Deep Dive - A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/kubernetes-fundamental/&quot; target=&quot;_blank&quot;&gt;Kubernetes Fundamentals - A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/&quot; target=&quot;_blank&quot;&gt;Katacoda&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/tools/install-minikube/&quot; target=&quot;_blank&quot;&gt;Minikube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dgkanatsios/CKAD-exercises&quot; target=&quot;_blank&quot;&gt;CKAD Exercises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/bb-tutorials-and-thoughts/practice-enough-with-these-questions-for-the-ckad-exam-2f42d1228552&quot; target=&quot;_blank&quot;&gt;Practice Enough With These 150 Questions for the CKAD Exam&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeburst.io/kubernetes-ckad-weekly-challenges-overview-and-tips-7282b36a2681&quot; target=&quot;_blank&quot;&gt;Kubernetes CKAD Example Exam Questions Practical Challenge Series&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Kubernetes" /><category term="k8s" /><category term="EKS" /><summary type="html">This post describes my experience and recommendations for tackling the Certified Kubernetes Administrator (CKA) exam by The Linux Foundation.</summary></entry><entry><title type="html">Certified Kubernetes Application Developer (CKAD)</title><link href="https://lgallardo.com/2020/07/26/2020-07-26-certified-kubernetes-application-developer-ckad/" rel="alternate" type="text/html" title="Certified Kubernetes Application Developer (CKAD)" /><published>2020-07-25T19:00:00-05:00</published><updated>2020-07-25T19:00:00-05:00</updated><id>https://lgallardo.com/2020/07/26/certified-kubernetes-application-developer-ckad</id><content type="html" xml:base="https://lgallardo.com/2020/07/26/2020-07-26-certified-kubernetes-application-developer-ckad/">&lt;center&gt;&lt;img src=&quot;/images/ckad.jpg&quot; alt=&quot;Certified Kubernetes Application Developer&quot; width=&quot;340&quot; height=&quot;340&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
I recently approved the &lt;strong&gt;Certified Kubernetes Application Developer (CKAD)&lt;/strong&gt; exam by The Linux Foundation, so I decided to share my experience and some recommendations to prepare for the exam.&lt;/p&gt;

&lt;h1 id=&quot;the-exam&quot;&gt;The exam&lt;/h1&gt;

&lt;p&gt;The exam is 100% practical with 19 questions that must be solved in 2 hours, supervised by a proctor who verifies that you are alone during the exam, and that you comply with &lt;a href=&quot;https://docs.linuxfoundation.org/tc-docs/certification/lf-candidate-handbook/exam-rules-and-policies&quot; target=&quot;_blank&quot;&gt;all rules&lt;/a&gt; (for example in my case he asked me to close all doors that gave access to my dining room, where I took the exam).&lt;/p&gt;

&lt;p&gt;Some questions will be easy, others will have several steps to follow, so you must manage your time very well. Questions will be shown in a panel on the left side and you will have access to a terminal where you must execute the commands to solve them.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/exam_ui.jpg&quot; alt=&quot;Exam UI&quot; width=&quot;340&quot; height=&quot;340&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;There will be questions to create resources and others to identify and solve problems (troubleshooting). You can copy and paste from the instructions, in addition to having access to a place for notes, for example to keep track of pending questions.&lt;/p&gt;

&lt;p&gt;You will be able to consult the Kubernetes documentation from these sites &lt;a href=&quot;https://kubernetes.io/docs/&quot; target=&quot;_blank&quot;&gt;https://kubernetes.io/docs/&lt;/a&gt;, &lt;a href=&quot;https://github.com/kubernetes/&quot; target=&quot;_blank&quot;&gt;https://github.com/kubernetes/&lt;/a&gt;, &lt;a href=&quot;https://kubernetes.io/blog/&quot; target=&quot;_blank&quot;&gt;https://kubernetes.io/blog/&lt;/a&gt;, opening one and only one additional tab to the exam.&lt;/p&gt;

&lt;p&gt;You can take the exam with Chrome, so yo can access the sites mentioned above from your bookmarks (yes, it’s allowed)&lt;/p&gt;

&lt;h1 id=&quot;my-experience&quot;&gt;My experience&lt;/h1&gt;
&lt;p&gt;I had some expectation because it’s a practical exam, and since it was the first of this style that I took, I didn’t know what to expect or how I was going to be able to handle time.&lt;/p&gt;

&lt;p&gt;During the exam, several things happened to me that delayed me, for example, when I used a Vim’s key combination to move between windows, I accidentally closed the exam, so I had to reconnect and contact the proctor.&lt;/p&gt;

&lt;p&gt;On the other hand, that day my Internet provider had problems and made my connection very slow, so changes in the yaml files were seen with delays of approximately 5 seconds.&lt;/p&gt;

&lt;p&gt;At some point the connection was completely lost, and the exam was closed, so I had to log in again and coordinate with the proctor.&lt;/p&gt;

&lt;p&gt;Another thing that happened was that the alarm on my nearby cell phone went off (I took the exam at 5:00 AM) so I asked the proctor for permission to turn it off, therefore he had to pause the exam.&lt;/p&gt;

&lt;p&gt;All these disconnections and pauses don’t stop the time, when the exam begins you have exactly 2 hours.
 exactas.&lt;/p&gt;

&lt;p&gt;Another drawback I had was that I did not have a clock to keep track of the time in the examination interface, but rather a progress bar that was sometimes missing, so the proctor reminded me of the remaining time every so often, interrupting my concentration.&lt;/p&gt;

&lt;h1 id=&quot;how-to-prepare&quot;&gt;How to prepare?&lt;/h1&gt;
&lt;p&gt;There are several free and other paid resources, all valid to prepare, but practical experience is essential. I list some of them:&lt;/p&gt;

&lt;h2 id=&quot;books&quot;&gt;Books&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/B072TS9ZQZ/ref=ppx_yo_dt_b_d_asin_title_o06?ie=UTF8&amp;amp;psc=1&quot; target=&quot;_blank&quot;&gt;The Kubernetes Book: Updated Feb 2020&lt;/a&gt;  by Nigel Poulton: This book is good for an overview of Kubernetes, and is an extension of Nigel’s course (see below).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Kubernetes-Running-Dive-Future-Infrastructure-ebook/dp/B07YP1XSZ9/ref=sr_1_1?dchild=1&amp;amp;keywords=kubernetes+up+and+running&amp;amp;qid=1595782565&amp;amp;s=digital-text&amp;amp;sr=1-1&quot; target=&quot;_blank&quot;&gt;Kubernetes up and running&lt;/a&gt;: This is an excellent book to learn Kubernetes, it covers various topics of CKAD and also of CKA.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;online-courses&quot;&gt;Online courses&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/certified-kubernetes-application-developer/&quot; target=&quot;_blank&quot;&gt;Kubernetes Certified Application Developer (CKAD) with Tests (Mumshad Mannambeth)&lt;/a&gt;: This course is very well designed and explains in detail and with many animations the concepts necessary to learn how to deploy applications in a Kubernetes cluster. Additionally, it gives access to a platform named &lt;em&gt;&lt;strong&gt;Kloud Kode&lt;/strong&gt;&lt;/em&gt; created with &lt;em&gt;&lt;strong&gt;Teachable&lt;/strong&gt;&lt;/em&gt; and with &lt;em&gt;&lt;strong&gt;Katacoda&lt;/strong&gt;&lt;/em&gt; environments designed for each topic covered, two exam-type labs (with a high degree of difficulty) and two exams to practice and prepare to work under the pressure of the real exam. .&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linuxacademy.com/course/certified-kubernetes-application-developer-ckad/&quot; target=&quot;_blank&quot;&gt;Certified Kubernetes Application Developer (CKAD) - Linux Academy&lt;/a&gt;: If you have a LinuxAcademy subscription you can follow this course. Keep two things in mind: 1) It focuses on editing yamls and little on how to generate them. 2) The exam mocks they have to practice are not so difficult and they may be insufficient to pass without having practiced beyond them. It’s recommended to do the labs, exams and other questions to exercise (see below)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/kubernetes-deep-dive&quot; target=&quot;_blank&quot;&gt;Kubernetes Deep Dive - A Cloud Guru&lt;/a&gt;: This course is to have an overview of Kubernetes, for example of its architecture (API Server, Kubelet, etc.) as well as to take the first steps in application deployments. No practical labs included.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/kubernetes-fundamental/&quot; target=&quot;_blank&quot;&gt;Kubernetes Fundamentals - A Cloud Guru&lt;/a&gt;: This course is to start with Kubernetes, to have the fundamental concepts. Ideal for those who have not had contact with Kubernetes. No practical labs included.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;practice-environments&quot;&gt;Practice environments&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/&quot; target=&quot;_blank&quot;&gt;Katacoda&lt;/a&gt;: This platform allows you to interact with a cluster with just one node, from a web console, similar to what we would get in the exam. The interesting thing is that there are scenarios created by other users that can be used to learn basic concepts, such as secrets, configmaps, volumes, etc. Please note that each scneario lasts a maximum of one hour.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/tools/install-minikube/&quot; target=&quot;_blank&quot;&gt;Minikube&lt;/a&gt;: With this option you can install a virtual machine to have your own cluster with a node.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;exercises-to-practice&quot;&gt;Exercises to practice&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dgkanatsios/CKAD-exercises&quot; target=&quot;_blank&quot;&gt;CKAD Exercises&lt;/a&gt;:
A set of exercises that will help you prepare for the exam and can also help you learn and practice with Kubernetes.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/bb-tutorials-and-thoughts/practice-enough-with-these-questions-for-the-ckad-exam-2f42d1228552&quot; target=&quot;_blank&quot;&gt;Practice Enough With These 150 Questions for the CKAD Exam&lt;/a&gt;:This is another set of exercises that serve to prepare you and have all the concepts fresh before going to the exam..&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeburst.io/kubernetes-ckad-weekly-challenges-overview-and-tips-7282b36a2681&quot; target=&quot;_blank&quot;&gt;Kubernetes CKAD Example Exam Questions Practical Challenge Series&lt;/a&gt;: This page presents some challenges to complete and some tips for the exam. They also offer an exam simulator at a cost of €30 (I didn’t subscribe, so I don’t know exactly what the simulator is like or if it really has similar exam questions).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;endnotes&quot;&gt;Endnotes&lt;/h1&gt;
&lt;p&gt;Again I recommend you to practice enough before taking the exam, even if you have experience with Kubernetes. Time management is important, so you must be prepared to use the Kubernetes documentation quickly (from the documentation page or from the console with kubectl), be prepared to generate yamls (not edit them), and handle nerves and pressure.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.linuxfoundation.org/tc-docs/certification/lf-candidate-handbook/exam-rules-and-policies&quot; target=&quot;_blank&quot;&gt;Exam Rules and Policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/B072TS9ZQZ/ref=ppx_yo_dt_b_d_asin_title_o06?ie=UTF8&amp;amp;psc=1&quot; target=&quot;_blank&quot;&gt;The Kubernetes Book: Updated Feb 2020&lt;/a&gt;  by Nigel Poulton.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Kubernetes-Running-Dive-Future-Infrastructure-ebook/dp/B07YP1XSZ9/ref=sr_1_1?dchild=1&amp;amp;keywords=kubernetes+up+and+running&amp;amp;qid=1595782565&amp;amp;s=digital-text&amp;amp;sr=1-1&quot; target=&quot;_blank&quot;&gt;Kubernetes up and running&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/certified-kubernetes-application-developer/&quot; target=&quot;_blank&quot;&gt;Kubernetes Certified Application Developer (CKAD) with Tests (Mumshad Mannambeth)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linuxacademy.com/course/certified-kubernetes-application-developer-ckad/&quot; target=&quot;_blank&quot;&gt;Certified Kubernetes Application Developer (CKAD) - Linux Academy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/kubernetes-deep-dive&quot; target=&quot;_blank&quot;&gt;Kubernetes Deep Dive - A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/kubernetes-fundamental/&quot; target=&quot;_blank&quot;&gt;Kubernetes Fundamentals - A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/&quot; target=&quot;_blank&quot;&gt;Katacoda&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/tools/install-minikube/&quot; target=&quot;_blank&quot;&gt;Minikube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dgkanatsios/CKAD-exercises&quot; target=&quot;_blank&quot;&gt;CKAD Exercises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/bb-tutorials-and-thoughts/practice-enough-with-these-questions-for-the-ckad-exam-2f42d1228552&quot; target=&quot;_blank&quot;&gt;Practice Enough With These 150 Questions for the CKAD Exam&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeburst.io/kubernetes-ckad-weekly-challenges-overview-and-tips-7282b36a2681&quot; target=&quot;_blank&quot;&gt;Kubernetes CKAD Example Exam Questions Practical Challenge Series&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Kubernetes" /><category term="k8s" /><category term="EKS" /><summary type="html">I recently approved the Certified Kubernetes Application Developer (CKAD) exam by The Linux Foundation, so I decided to share my experience and some recommendations to prepare for the exam.</summary></entry><entry><title type="html">Terraform module for Secrets Manager</title><link href="https://lgallardo.com/2020/06/26/terraform-module-for-amazon-secrets-manager" rel="alternate" type="text/html" title="Terraform module for Secrets Manager" /><published>2020-06-25T19:00:00-05:00</published><updated>2020-06-25T19:00:00-05:00</updated><id>https://lgallardo.com/2020/06/26/terraform-module-for-amazon-secrets-manager</id><content type="html" xml:base="https://lgallardo.com/2020/06/26/terraform-module-for-amazon-secrets-manager">&lt;center&gt;&lt;img src=&quot;/images/terraform-aws-secrets-manager.jpg&quot; alt=&quot;AWS Secrets Manager&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
I just published a Terraform module called &lt;strong&gt;terraform-aws-secrets-manager&lt;/strong&gt; at Github, so I decided to share it as well in the public Terraform Registry.&lt;/p&gt;

&lt;p&gt;You can check the module &lt;strong&gt;terraform-aws-secrets-manager&lt;/strong&gt; at the &lt;a href=&quot;https://registry.terraform.io/modules/lgallard/secrets-manager/aws/&quot; target=&quot;_blank&quot;&gt;Terraform Registry&lt;/a&gt; or clone it from &lt;a href=&quot;https://github.com/lgallard/terraform-aws-secrets-manager&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to take a sneak of the module, I also left the README in this post:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lgallardo.com/images/terraform.jpg&quot; alt=&quot;Terraform&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;terraform-aws-secrets-manager&quot;&gt;terraform-aws-secrets-manager&lt;/h1&gt;

&lt;p&gt;Terraform module to create &lt;a href=&quot;https://aws.amazon.com/secrets-manager/&quot; target=&quot;_blank&quot;&gt;Amazon Secrets Manager&lt;/a&gt; resources.&lt;/p&gt;

&lt;p&gt;AWS Secrets Manager helps you protect secrets needed to access your applications, services, and IT resources. The service enables you to easily rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle.&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Check the &lt;a href=&quot;https://github.com/lgallard/terraform-aws-secrets-manager/tree/master/examples/&quot; target=&quot;_blank&quot;&gt;examples&lt;/a&gt; folder where you can see the complete compilation of snippets.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;You can create secrets for plain texts, keys/values and binary data:&lt;/p&gt;

&lt;h3 id=&quot;plain-text-secrets&quot;&gt;Plain text secrets&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;secrets-manager-1&quot; {

  source = &quot;lgallard/secrets-manager/aws&quot;

  secrets = [
    {
      name                    = &quot;secret-1&quot;
      description             = &quot;My secret 1&quot;
      recovery_window_in_days = 7
      secret_string           = &quot;This is an example&quot;
    },
    {
      name                    = &quot;secret-2&quot;
      description             = &quot;My secret 2&quot;
      recovery_window_in_days = 7
      secret_string           = &quot;This is another example&quot;
    }
  ]

  tags = {
    Owner       = &quot;DevOps team&quot;
    Environment = &quot;dev&quot;
    Terraform   = true

  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;keyvalue-secrets&quot;&gt;Key/Value secrets&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;secrets-manager-2&quot; {

  source = &quot;lgallard/secrets-manager/aws&quot;

  secrets = [
   {
      name        = &quot;secret-kv-1&quot;
      description = &quot;This is a key/value secret&quot;
      secret_key_value = {
        key1 = &quot;value1&quot;
        key2 = &quot;value2&quot;
      }
      recovery_window_in_days = 7
    },
   {
      name        = &quot;secret-kv-2&quot;
      description = &quot;Another key/value secret&quot;
      secret_key_value = {
        username = &quot;user&quot;
        password = &quot;topsecret&quot;
      }
      tags = {
        app = &quot;web&quot;
      }
      recovery_window_in_days = 7
    },
 ]

  tags = {
    Owner       = &quot;DevOps team&quot;
    Environment = &quot;dev&quot;
    Terraform   = true
  }

}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;binary-secrets&quot;&gt;Binary secrets&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;secrets-manager-3&quot; {

  source = &quot;lgallard/secrets-manager/aws&quot;

  secrets = [
    {
      name                    = &quot;secret-binary-1&quot;
      description             = &quot;This is a binary secret&quot;
      secret_binary           = &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDt4TcI58h4G0wR+GcDY+0VJR10JNvG92jEKGaKxeMaOkfsXflVGsYXbfVBBCG/n3uHtTse7baYLB6LWQAuYWL1SHJVhhTQ7pPiocFWibAvJlVo1l7qJEDu2OxKpWEleCE+p3ufNXAy7v5UFO7EOnj0Zg6R3F/MiAWbQnaEHcYzNtogyC24YBecBLrBXZNi1g0AN1hM9k+3XvWUYTf9vPv8LIWnqo7y4Q2iEGWWurf37YFl1LzX4mG/Co+Vfe5TlZSe2YPMYWlw0ZKaKvwzInRR6dPMAflo3ABzlduiIbSdp110uGqB8i2M8eGXNDxR7Ni4nnLWnT9r1cpWhXWP6pAG4Xg8+x7+PIg/pgjgJNmsURw+jPD6+hkCw2Vz16EIgkC2b7lj0V6J4LncUoRzU/1sAzCQ4tspy3SKBUinYoxbDvXleF66FHEjfparnvNwfslBx0IJjG2uRwuX6zrsNIsGF1stEjz+eyAOtFV4/wRjRcCNDZvl1ODzIvwf8pAWddE= lgallard@server1&quot;
    },
    {
      name                    = &quot;secret-binary-2&quot;
      description             = &quot;Another binary secret&quot;
      secret_binary           = &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzc818NSC6oJYnNjVWoF43+IuQpqc3WyS8BWZ50uawK5lY/aObweX2YiXPv2CoVvHUM0vG7U7BDBvNi2xwsT9n9uT27lcVQsTa8iDtpyoeBhcj3vJ60Jd04UfoMP7Og6UbD+KGiaqQ0LEtMXq6d3i619t7V0UkaJ4MXh2xl5y3bV4zNzTXdSScJnvMFfjLW0pJOOqltLma3NQ9ILVdMSK2Vzxc87T+h/jp0VuUAX4Rx9DqmxEU/4JadXmow/BKy69KVwAk/AQ8jL7OwD2YAxlMKqKnOsBJQF27YjmMD240UjkmnPlxkV8+g9b2hA0iM5GL+5MWg6pPUE0BYdarCmwyuaWYhv/426LnfHTz9UVC3y9Hg5c4X4I6AdJJUmarZXqxnMe9jJiqiQ+CAuxW3m0gIGsEbUul6raG73xFuozlaXq3J+kMCVW24eG2i5fezgmtiysIf/dpcUo+YLkX+U8jdMQg9IwCY0bf8XL39kwJ7u8uWU8+7nMcS9VQ5llVVMk= lgallard@server2&quot;
      recovery_window_in_days = 7
      tags = {
        app = &quot;web&quot;
      }
    }

 ]

  tags = {
    Owner       = &quot;DevOps team&quot;
    Environment = &quot;dev&quot;
    Terraform   = true
  }

}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;secrets-rotation&quot;&gt;Secrets Rotation&lt;/h2&gt;

&lt;p&gt;If yo need to rotate your secrets, use &lt;code class=&quot;highlighter-rouge&quot;&gt;rotate_secrets&lt;/code&gt; list to define them. Take into account that the lambda function must exist and it must have the right permissions to rotate the secrets in AWS Secret manager:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;secrets-manager-4&quot; {

  source = &quot;lgallard/secrets-manager/aws&quot;

    rotate_secrets = [
    {
      name                    = &quot;secret-rotate-1&quot;
      description             = &quot;This is a secret to be rotated by a lambda&quot;
      secret_string           = &quot;This is an example&quot;
      rotation_lambda_arn     = &quot;arn:aws:lambda:us-east-1:123455678910:function:lambda-rotate-secret&quot;
      recovery_window_in_days = 15
    },
    {
      name                    = &quot;secret-rotate-2&quot;
      description             = &quot;This is another secret to be rotated by a lambda&quot;
      secret_string           = &quot;This is another example&quot;
      rotation_lambda_arn     = &quot;arn:aws:lambda:us-east-1:123455678910:function:lambda-rotate-secret&quot;
      recovery_window_in_days = 7
    },
  ]

  tags = {
    Owner       = &quot;DevOps team&quot;
    Environment = &quot;dev&quot;
    Terraform   = true
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;several-secret-definitions&quot;&gt;Several secret definitions&lt;/h2&gt;

&lt;p&gt;You can define different type of secrets (string, key/balue or binary) in the same &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;rotate_secrets&lt;/code&gt; list:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;secrets-manager-5&quot; {

  source = &quot;lgallard/secrets-manager/aws&quot;

  secrets = [
    {
      name                    = &quot;secret-plain&quot;
      description             = &quot;My plain text secret&quot;
      recovery_window_in_days = 7
      secret_string           = &quot;This is an example&quot;
    },
   {
      name        = &quot;secret-key-value&quot;
      description = &quot;This is a key/value secret&quot;
      secret_key_value = {
        username = &quot;user&quot;
        password = &quot;topsecret&quot;
      }
      tags = {
        app = &quot;web&quot;
      }
      recovery_window_in_days = 7
    },
 ]

  tags = {
    Owner       = &quot;DevOps team&quot;
    Environment = &quot;dev&quot;
    Terraform   = true
  }

}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;providers&quot;&gt;Providers&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Version&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;aws&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;inputs&quot;&gt;Inputs&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Default&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Required&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;automatically_after_days&lt;/td&gt;
      &lt;td&gt;Specifies the number of days between automatic scheduled rotations of the secret.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;number&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;30&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;recovery_window_in_days&lt;/td&gt;
      &lt;td&gt;Specifies the number of days that AWS Secrets Manager waits before it can delete the secret. This value can be 0 to force deletion without recovery or range from 7 to 30 days.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;number&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;30&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rotate_secrets&lt;/td&gt;
      &lt;td&gt;List of secrets to keep and rotate in AWS Secrets Manager&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;any&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;secrets&lt;/td&gt;
      &lt;td&gt;List of secrets to keep in AWS Secrets Manager&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;any&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tags&lt;/td&gt;
      &lt;td&gt;Specifies a key-value map of user-defined tags that are attached to the secret.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;any&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;outputs&quot;&gt;Outputs&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;rotate_secret_arns&lt;/td&gt;
      &lt;td&gt;Rotate secret arn list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rotate_secret_ids&lt;/td&gt;
      &lt;td&gt;Rotate secret id list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;secret_arns&lt;/td&gt;
      &lt;td&gt;Secret arn list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;secret_ids&lt;/td&gt;
      &lt;td&gt;Secret id list&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lgallard/terraform-aws-secrets-manager.git&quot; target=&quot;_blank&quot;&gt;terraform-aws-secrets-manager module at github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.terraform.io/modules/lgallard/secrets-manager/aws/&quot; target=&quot;_blank&quot;&gt;terraform-aws-secrets-manager module at Terraform registry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Terraform" /><summary type="html">I just published a Terraform module called terraform-aws-secrets-manager at Github, so I decided to share it as well in the public Terraform Registry.</summary></entry><entry><title type="html">HashiCorp Certified: Terraform Associate</title><link href="https://lgallardo.com/2020/04/28/2020-04-28-hashicorp-certified-terraform-associate/" rel="alternate" type="text/html" title="HashiCorp Certified: Terraform Associate" /><published>2020-04-27T19:00:00-05:00</published><updated>2020-04-27T19:00:00-05:00</updated><id>https://lgallardo.com/2020/04/28/hashicorp-certified-terraform-associate</id><content type="html" xml:base="https://lgallardo.com/2020/04/28/2020-04-28-hashicorp-certified-terraform-associate/">&lt;center&gt;&lt;img src=&quot;/images/terraform-associate-badge.jpg&quot; alt=&quot;HasiCorp Certified: Terraform Associate&quot; width=&quot;340&quot; height=&quot;340&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt; 
HashiCorp recently announced the general availability of some of their &lt;a href=&quot;https://www.hashicorp.com/blog/announcing-hashicorp-cloud-engineering-certifications/&quot; target=&quot;_blank&quot;&gt;Cloud Certifications&lt;/a&gt; like Terraform and Vault (and others to come like Consul). As I’ve been working with Terraform for a while and due to the fact I’ve published modules at the &lt;a href=&quot;https://registry.terraform.io/search?q=lgallard&quot; target=&quot;_blank&quot;&gt;Terraform Registry&lt;/a&gt; I decided to take the exam.&lt;/p&gt;

&lt;p&gt;You can verify the validity of the certifications using &lt;strong&gt;&lt;em&gt;Acclaim&lt;/em&gt;&lt;/strong&gt; platform. For example for my certification visit my badge &lt;a href=&quot;https://www.youracclaim.com/badges/d82312de-3f83-430b-8136-78c18e757463/public_url&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;the-exam&quot;&gt;The exam&lt;/h1&gt;

&lt;p&gt;There were 57 questions to answer in 60 minutes, with a proctor which verifies your are alone during the exam.&lt;/p&gt;

&lt;h2 id=&quot;how-did-i-prepare&quot;&gt;How did I prepare?&lt;/h2&gt;

&lt;p&gt;Unlike other exams that I had already taken the preparation for this was different. Since the general availability was announced just few days ago and there weren’t many resources online like courses at &lt;strong&gt;A Cloud Guru&lt;/strong&gt; or &lt;strong&gt;Linux Academy&lt;/strong&gt; I had to follow HashiCorp’s recommendations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.hashicorp.com/terraform/certification/terraform-associate-study-guide&quot; target=&quot;_blank&quot;&gt;Study Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.hashicorp.com/terraform/certification/terraform-associate-review&quot; target=&quot;_blank&quot;&gt;Exam Review&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.hashicorp.com/terraform/certification/terraform-associate-sample-questions&quot; target=&quot;_blank&quot;&gt;Sample Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I found more useful the &lt;strong&gt;&lt;em&gt;Exam Review&lt;/em&gt;&lt;/strong&gt;, which leds you to other resources you can check to complete any gap you may have. In the case you are starting to use Terraform the &lt;strong&gt;&lt;em&gt;Study Guide&lt;/em&gt;&lt;/strong&gt; would suit you better, and then follow the &lt;strong&gt;&lt;em&gt;Exam Review&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;em&gt;Sample questions&lt;/em&gt;&lt;/strong&gt; are just a guide on how the exam format is with some questions alike. Don’t assume these question will be asked in the real exam.&lt;/p&gt;

&lt;h2 id=&quot;but-what-to-study&quot;&gt;But what to study?&lt;/h2&gt;

&lt;p&gt;First take into account the contents of the blueprint HashiCorp provides for the exam:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Understand infrastructure as code (IaC) concepts&lt;/li&gt;
  &lt;li&gt;Understand Terraform’s purpose (vs other IaC)&lt;/li&gt;
  &lt;li&gt;Understand Terraform basics&lt;/li&gt;
  &lt;li&gt;Use the Terraform CLI (outside of core workflow)&lt;/li&gt;
  &lt;li&gt;Interact with Terraform modules&lt;/li&gt;
  &lt;li&gt;Navigate Terraform workflow&lt;/li&gt;
  &lt;li&gt;Implement and maintain state&lt;/li&gt;
  &lt;li&gt;Read, generate, and modify configuration&lt;/li&gt;
  &lt;li&gt;Understand Terraform Cloud and Enterprise capabilities&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This blue print is detailed in the &lt;a href=&quot;https://www.hashicorp.com/certification/terraform-associate/&quot; target=&quot;_blank&quot;&gt;Terrraform Certification Exam&lt;/a&gt; page and the &lt;strong&gt;&lt;em&gt;Exam review&lt;/em&gt;&lt;/strong&gt; is a match with this.&lt;/p&gt;

&lt;p&gt;On the other hand I also recommend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Learn the basic commands (init, plan, apply, destroy) and their possible extra options. Use each command help to get used to their extra options.&lt;/li&gt;
  &lt;li&gt;Learn the Terraform workflow.&lt;/li&gt;
  &lt;li&gt;Know the tfstate file and the possible backends to handle it.&lt;/li&gt;
  &lt;li&gt;Understand what a Workspace is (both for the Open Source and the Cloud / Enterprise versions).&lt;/li&gt;
  &lt;li&gt;Know the difference between the Open Source, Cloud and Enterprise versions of Terraform.&lt;/li&gt;
  &lt;li&gt;Practice before the exam (really, don’t overlook this!).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-resources-for-learning-terraform&quot;&gt;Other resources for learning Terraform&lt;/h2&gt;

&lt;p&gt;There are other resources you can use to learn Terraform:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.terraformupandrunning.com&quot; target=&quot;_blank&quot;&gt;Terraform Up &amp;amp; Running&lt;/a&gt;. This book was written from a series of posts available at &lt;a href=&quot;https://blog.gruntwork.io/a-comprehensive-guide-to-terraform-b3d32832baca&quot; target=&quot;_blank&quot;&gt;A Comprehensive Guide to Terraform&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.hashicorp.com/terraform#getting-started&quot; target=&quot;_blank&quot;&gt;Learn to provision infrastructure with HashiCorp Terraform&lt;/a&gt;. This a series of videos and resources provided by HashiCorp you can follow to getting starting with Terraform (AWS, Azure, Google Cloud, Terraform Cloud)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/hashicorp&quot; target=&quot;_blank&quot;&gt;Katacoda scenarios&lt;/a&gt; by HashiCorp. In particular the &lt;a href=&quot;https://www.katacoda.com/hashicorp/scenarios/terraform-cloud&quot; target=&quot;_blank&quot;&gt;Terraform Cloud scenario&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;my-recommendations-for-saving-time-on-this-exam-are&quot;&gt;My recommendations for saving time on this exam are:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Answer the easy question quick, don’t stay long thinking whether is right answer because probably it is.&lt;/li&gt;
  &lt;li&gt;Only mark for review those question where you really have a doubt, so you can check them later and if there’s time left be able to review them all.&lt;/li&gt;
  &lt;li&gt;If you have a doubt, for example in how terraform works just remember what have you done in practice or real life. Simple!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hashicorp.com/certification/terraform-associate/&quot; target=&quot;_blank&quot;&gt;Terrraform Certification Exam page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.hashicorp.com/terraform/certification/terraform-associate-study-guide&quot; target=&quot;_blank&quot;&gt;Study Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.hashicorp.com/terraform/certification/terraform-associate-review&quot; target=&quot;_blank&quot;&gt;Exam Review&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.hashicorp.com/terraform/certification/terraform-associate-sample-questions&quot; target=&quot;_blank&quot;&gt;Sample Questions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.gruntwork.io/a-comprehensive-guide-to-terraform-b3d32832baca&quot; target=&quot;_blank&quot;&gt;A Comprehensive Guide to Terraform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.terraformupandrunning.com&quot; target=&quot;_blank&quot;&gt;Terraform Up &amp;amp; Running&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.hashicorp.com/terraform#getting-started&quot; target=&quot;_blank&quot;&gt;Learn to provision infrastructure with HashiCorp Terraform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/hashicorp&quot; target=&quot;_blank&quot;&gt;Katacoda scenarios&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/hashicorp/scenarios/terraform-cloud&quot; target=&quot;_blank&quot;&gt;Terraform Cloud scenario&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Terraform" /><category term="HashiCorp" /><summary type="html">HashiCorp recently announced the general availability of some of their Cloud Certifications like Terraform and Vault (and others to come like Consul). As I’ve been working with Terraform for a while and due to the fact I’ve published modules at the Terraform Registry I decided to take the exam.</summary></entry></feed>
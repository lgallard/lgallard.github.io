<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.6.0">Jekyll</generator><link href="https://lgallardo.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lgallardo.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2019-10-28T16:15:48-05:00</updated><id>https://lgallardo.com/</id><title type="html">lgallardo.com</title><subtitle></subtitle><author><name>Luis M. Gallardo D.</name></author><entry><title type="html">Terraform module for Amazon Elasticsearch Service</title><link href="https://lgallardo.com/2019/10/28/terraform-module-for-amazon-elasticsearch" rel="alternate" type="text/html" title="Terraform module for Amazon Elasticsearch Service" /><published>2019-10-27T19:00:00-05:00</published><updated>2019-10-27T19:00:00-05:00</updated><id>https://lgallardo.com/2019/10/28/terraform-module-for-amazon-elasticsearch</id><content type="html" xml:base="https://lgallardo.com/2019/10/28/terraform-module-for-amazon-elasticsearch">&lt;center&gt;&lt;img src=&quot;/images/terraform-aws-elasticsearch.jpg&quot; alt=&quot;terraform-aws-elasticsearch&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I share here another Terraform module that I just published as open source, which allows you to create Amazon Elasticsearch Service clusters. The module is designed following the best practices and principles of the AWS Well-Architected Framework.&lt;/p&gt;

&lt;p&gt;You can check the module &lt;strong&gt;terraform-aws-elasticsearch&lt;/strong&gt; at the &lt;a href=&quot;https://registry.terraform.io/modules/lgallard/elasticsearch/aws/0.1.0&quot; target=&quot;_blank&quot;&gt;Terraform Registry&lt;/a&gt; or clone it from &lt;a href=&quot;https://github.com/lgallard/terraform-aws-elasticsearch&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to take a sneak of the module, I also left the README in this post:&lt;/p&gt;

&lt;h1 id=&quot;terraform-aws-elasticsearch&quot;&gt;terraform-aws-elasticsearch&lt;/h1&gt;

&lt;p&gt;Terraform module to create &lt;a href=&quot;https://aws.amazon.com/elasticsearch-service/&quot;&gt;Amazon Elasticsearch Service&lt;/a&gt; clusters, following the Well-Architected Framework and best AWS practices.&lt;/p&gt;

&lt;p&gt;Amazon Elasticsearch Service is a fully managed service that makes it easy to deploy, operate, and scale Elasticsearch clusters in the AWS Cloud. Elasticsearch is a popular open-source search and analytics engine for use cases such as log analytics, real-time application monitoring, and clickstream analysis. With Amazon ES, you get direct access to the Elasticsearch APIs; existing code and applications work seamlessly with the service.&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Check the &lt;a href=&quot;/examples/&quot;&gt;examples&lt;/a&gt; folder where you can see how to configure a public ES cluster, and another example showing how to set it with VPC options.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;You can use this module to create your Amazon ES cluster by defining each parameters blocks as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;aws_es&quot; {

  source = &quot;git::https://github.com/lgallard/terraform-aws-elasticsearch.git&quot;

  domain_name           = &quot;elasticsearch_public&quot;
  elasticsearch_version = &quot;7.1&quot;

  cluster_config = {
    dedicated_master_enabled = &quot;true&quot;
    instance_count           = &quot;3&quot;
    instance_type            = &quot;r5.large.elasticsearch&quot;
    zone_awareness_enabled   = &quot;true&quot;
    availability_zone_count  = &quot;3&quot;
  }

  ebs_options = {
    ebs_enabled = &quot;true&quot;
    volume_size = &quot;25&quot;
  }

  encrypt_at_rest = {
    enabled    = &quot;true&quot;
    kms_key_id = &quot;alias/aws/es&quot;
  }

  log_publishing_options = {
    enabled                  = &quot;true&quot;
    log_type                 = &quot;INDEX_SLOW_LOGS&quot;
  }

  advanced_options = {
    &quot;rest.action.multi.allow_explicit_index&quot; = &quot;true&quot;
  }

  node_to_node_encryption_enabled                = &quot;true&quot;
  snapshot_options_automated_snapshot_start_hour = &quot;23&quot;

  tags = {
    Owner = &quot;sysops&quot;
    env   = &quot;dev&quot;
  }

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can also define the above ElasticSearch cluster using just the module variables. Instead of defining a &lt;code class=&quot;highlighter-rouge&quot;&gt;cluster_config&lt;/code&gt; block (list of map), you can set each of the &lt;code class=&quot;highlighter-rouge&quot;&gt;cluster_config_*&lt;/code&gt; variables, as shown below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;aws_es&quot; {

  source = &quot;git::https://github.com/lgallard/terraform-aws-elasticsearch.git&quot;

  domain_name           = &quot;elasticsearch_public&quot;
  elasticsearch_version = &quot;7.1&quot;

  cluster_config_dedicated_master_enabled = true
  cluster_config_instance_count           = &quot;3&quot;
  cluster_config_instance_type            = &quot;r5.large.elasticsearch&quot;
  cluster_config_zone_awareness_enabled   = &quot;true&quot;
  cluster_config_availability_zone_count  = &quot;3&quot;

  ebs_options_ebs_enabled = true
  ebs_options_volume_size = &quot;25&quot;

  encrypt_at_rest_enabled    = true
  encrypt_at_rest_kms_key_id = &quot;alias/aws/es&quot;

  log_publishing_options_enabled  = true
  log_publishing_options_log_type = &quot;INDEX_SLOW_LOGS&quot;

  advanced_options = {
    &quot;rest.action.multi.allow_explicit_index&quot; = &quot;true&quot;
  }

  node_to_node_encryption_enabled                = &quot;true&quot;
  snapshot_options_automated_snapshot_start_hour = &quot;23&quot;

  tags = {
    Owner = &quot;sysops&quot;
    env   = &quot;dev&quot;
  }

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;inputs&quot;&gt;Inputs&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Default&lt;/th&gt;
      &lt;th&gt;Required&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;access_policies&lt;/td&gt;
      &lt;td&gt;IAM policy document specifying the access policies for the domain&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;advanced_options&lt;/td&gt;
      &lt;td&gt;Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing Terraform to want to recreate your Elasticsearch domain on every apply&lt;/td&gt;
      &lt;td&gt;map(string)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster_config&lt;/td&gt;
      &lt;td&gt;Cluster configuration of the domain&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster_config_availability_zone_count&lt;/td&gt;
      &lt;td&gt;Number of Availability Zones for the domain to use with&lt;/td&gt;
      &lt;td&gt;number&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster_config_dedicated_master_count&lt;/td&gt;
      &lt;td&gt;Number of dedicated master nodes in the cluster&lt;/td&gt;
      &lt;td&gt;number&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster_config_dedicated_master_enabled&lt;/td&gt;
      &lt;td&gt;Indicates whether dedicated master nodes are enabled for the cluster&lt;/td&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster_config_dedicated_master_type&lt;/td&gt;
      &lt;td&gt;Instance type of the dedicated master nodes in the cluster&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;r5.large.elasticsearch&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster_config_instance_count&lt;/td&gt;
      &lt;td&gt;Number of instances in the cluster&lt;/td&gt;
      &lt;td&gt;number&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster_config_instance_type&lt;/td&gt;
      &lt;td&gt;Instance type of data nodes in the cluster&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;r5.large.elasticsearch&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster_config_zone_awareness_enabled&lt;/td&gt;
      &lt;td&gt;Indicates whether zone awareness is enabled. To enable awareness with three Availability Zones&lt;/td&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cognito_options&lt;/td&gt;
      &lt;td&gt;Options for Amazon Cognito Authentication for Kibana&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cognito_options_enabled&lt;/td&gt;
      &lt;td&gt;Specifies whether Amazon Cognito authentication with Kibana is enabled or not&lt;/td&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cognito_options_identity_pool_id&lt;/td&gt;
      &lt;td&gt;ID of the Cognito Identity Pool to use&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cognito_options_role_arn&lt;/td&gt;
      &lt;td&gt;ARN of the IAM role that has the AmazonESCognitoAccess policy attached&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cognito_options_user_pool_id&lt;/td&gt;
      &lt;td&gt;ID of the Cognito User Pool to use&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;domain_name&lt;/td&gt;
      &lt;td&gt;Name of the domain&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ebs_enabled&lt;/td&gt;
      &lt;td&gt;Whether EBS volumes are attached to data nodes in the domain&lt;/td&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ebs_options&lt;/td&gt;
      &lt;td&gt;EBS related options, may be required based on chosen instance size&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ebs_options_iops&lt;/td&gt;
      &lt;td&gt;The baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the Provisioned IOPS EBS volume type&lt;/td&gt;
      &lt;td&gt;number&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ebs_options_volume_size&lt;/td&gt;
      &lt;td&gt;The size of EBS volumes attached to data nodes (in GB). Required if ebs_enabled is set to true&lt;/td&gt;
      &lt;td&gt;number&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;10&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ebs_options_volume_type&lt;/td&gt;
      &lt;td&gt;The type of EBS volumes attached to data nodes&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;gp2&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;elasticsearch_version&lt;/td&gt;
      &lt;td&gt;The version of Elasticsearch to deploy.&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;7.1&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;encrypt_at_rest&lt;/td&gt;
      &lt;td&gt;Encrypt at rest options. Only available for certain instance types&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;encrypt_at_rest_enabled&lt;/td&gt;
      &lt;td&gt;Whether to enable encryption at rest&lt;/td&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;encrypt_at_rest_kms_key_id&lt;/td&gt;
      &lt;td&gt;The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the aws/es service KMS key&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;alias/aws/es&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;log_publishing_options&lt;/td&gt;
      &lt;td&gt;Options for publishing slow logs to CloudWatch Logs&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;log_publishing_options_cloudwatch_log_group_arn&lt;/td&gt;
      &lt;td&gt;iARN of the Cloudwatch log group to which log needs to be published&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;log_publishing_options_enabled&lt;/td&gt;
      &lt;td&gt;Specifies whether given log publishing option is enabled or not&lt;/td&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;log_publishing_options_log_type&lt;/td&gt;
      &lt;td&gt;A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;INDEX\_SLOW\_LOGS&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;node_to_node_encryption&lt;/td&gt;
      &lt;td&gt;Node-to-node encryption options&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;node_to_node_encryption_enabled&lt;/td&gt;
      &lt;td&gt;Whether to enable node-to-node encryption&lt;/td&gt;
      &lt;td&gt;bool&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;snapshot_options&lt;/td&gt;
      &lt;td&gt;Snapshot related options&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;snapshot_options_automated_snapshot_start_hour&lt;/td&gt;
      &lt;td&gt;Hour during which the service takes an automated daily snapshot of the indices in the domain&lt;/td&gt;
      &lt;td&gt;number&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tags&lt;/td&gt;
      &lt;td&gt;A mapping of tags to assign to the resource&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vpc_options&lt;/td&gt;
      &lt;td&gt;VPC related options, see below. Adding or removing this configuration forces a new resource&lt;/td&gt;
      &lt;td&gt;map&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vpc_options_security_group_ids&lt;/td&gt;
      &lt;td&gt;List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used&lt;/td&gt;
      &lt;td&gt;list&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vpc_options_subnet_ids&lt;/td&gt;
      &lt;td&gt;List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in&lt;/td&gt;
      &lt;td&gt;list&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;outputs&quot;&gt;Outputs&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;arn&lt;/td&gt;
      &lt;td&gt;Amazon Resource Name (ARN) of the domain&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;domain_id&lt;/td&gt;
      &lt;td&gt;Unique identifier for the domain&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;endpoint&lt;/td&gt;
      &lt;td&gt;Domain-specific endpoint used to submit index, search, and data upload requests&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;kibana_endpoint&lt;/td&gt;
      &lt;td&gt;Domain-specific endpoint for kibana without https scheme&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vpc_options_availability_zones&lt;/td&gt;
      &lt;td&gt;If the domain was created inside a VPC, the names of the availability zones the configured subnet_ids were created inside&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vpc_options_vpc_id&lt;/td&gt;
      &lt;td&gt;If the domain was created inside a VPC, the ID of the VPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lgallard/terraform-aws-elasticsearch&quot; target=&quot;_blank&quot;&gt;terraform-aws-elastichsearch module at github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.terraform.io/modules/lgallard/elasticsearch/aws/&quot; target=&quot;_blank&quot;&gt;terraform-aws-elasticsearch module at Terraform registry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Terraform" /><summary type="html"></summary></entry><entry><title type="html">Terraform module for AWS Backup</title><link href="https://lgallardo.com/2019/10/18/terraform-module-for-aws-backup" rel="alternate" type="text/html" title="Terraform module for AWS Backup" /><published>2019-10-17T19:00:00-05:00</published><updated>2019-10-17T19:00:00-05:00</updated><id>https://lgallardo.com/2019/10/18/terraform-module-for-aws-backup</id><content type="html" xml:base="https://lgallardo.com/2019/10/18/terraform-module-for-aws-backup">&lt;center&gt;&lt;img src=&quot;/images/terraform-aws-backup-terraform-registry.jpg&quot; alt=&quot;Terraform&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I just published my first open-sourced Terraform module called &lt;strong&gt;terraform-aws-backup&lt;/strong&gt; at github, so I decided to share it as well in the public Terraform Registry.&lt;/p&gt;

&lt;p&gt;You can check my module &lt;strong&gt;terraform-aws-backup&lt;/strong&gt; at the &lt;a href=&quot;https://registry.terraform.io/modules/lgallard/backup/aws&quot; target=&quot;_blank&quot;&gt;Terraform Registry&lt;/a&gt; or clone it from &lt;a href=&quot;https://github.com/lgallard/terraform-aws-backup.git&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to take a sneak of the module, I also left the README in this post:&lt;/p&gt;

&lt;h1 id=&quot;terraform-aws-backup&quot;&gt;terraform-aws-backup&lt;/h1&gt;

&lt;p&gt;Terraform module to create &lt;a href=&quot;https://aws.amazon.com/backup/&quot; target=&quot;_blank&quot;&gt;AWS Backup&lt;/a&gt; plans.  AWS Backup is a fully managed backup service that makes it easy to centralize and automate the back up of data across AWS services (EBS volumes, RDS databases, DynamoDB tables, EFS file systems, and Storage Gateway volumes).&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;You can use this module to create a simple plan using the module’s &lt;code class=&quot;highlighter-rouge&quot;&gt;rule_*&lt;/code&gt; variables. You can also  use the &lt;code class=&quot;highlighter-rouge&quot;&gt;rules&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;selections&lt;/code&gt; list of maps variables to build a more complete plan by defining several rules and selections at once.&lt;/p&gt;

&lt;p&gt;Check the &lt;a href=&quot;https://github.com/lgallard/terraform-aws-backup/tree/master/examples&quot; target=&quot;_blank&quot;&gt;examples&lt;/a&gt; for the  &lt;strong&gt;simple plan&lt;/strong&gt;, the &lt;strong&gt;simple plan with list&lt;/strong&gt; and the &lt;strong&gt;complete plan&lt;/strong&gt; snippets.&lt;/p&gt;

&lt;h3 id=&quot;example-complete-plan&quot;&gt;Example (complete plan)&lt;/h3&gt;

&lt;p&gt;This example creates a plan with two rules and two selections at once. It also defines a vault key which is used by the first rule because no &lt;code class=&quot;highlighter-rouge&quot;&gt;target_vault_name&lt;/code&gt; was given (null). Whereas the second rule is using the “Default” vault key.&lt;/p&gt;

&lt;p&gt;The first selection has two assignments, the first defined by a resource ARN and the second one defined by a tag condition. The second selection has just one assignment defined by a resource ARN.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &quot;aws_backup_example&quot; {

  source = &quot;../modules/terraform-aws-backup&quot;

  # Vault
  vault_name = &quot;vault-3&quot;

  # Plan
  plan_name = &quot;complete-plan&quot;

  # Multiple rules using a list of maps
  rules = [
    {
      name              = &quot;rule-1&quot;
      schedule          = &quot;cron(0 12 * * ? *)&quot;
      target_vault_name = null
      start_window      = 120
      completion_window = 360
      lifecycle = {
        cold_storage_after = 0
        delete_after       = 90
      },
      recovery_point_tags = {
        Environment = &quot;production&quot;
      }
    },
    {
      name                = &quot;rule-2&quot;
      target_vault_name   = &quot;Default&quot;
      schedule            = null
      start_window        = 120
      completion_window   = 360
      lifecycle           = {}
      recovery_point_tags = {}
    },
  ]

  # Multiple selections
  #  - Selection-1: By resources and tag
  #  - Selection-2: Only by resources
  selections = [
    {
      name      = &quot;selection-1&quot;
      resources = [&quot;arn:aws:dynamodb:us-east-1:123456789101:table/mydynamodb-table1&quot;]
      selection_tag = {
        type  = &quot;STRINGEQUALS&quot;
        key   = &quot;Environment&quot;
        value = &quot;production&quot;
      }
    },
    {
      name          = &quot;selection-2&quot;
      resources     = [&quot;arn:aws:dynamodb:us-east-1:123456789101:table/mydynamodb-table2&quot;]
      selection_tag = {}
    },
  ]

  tags = {
    Owner       = &quot;backup team&quot;
    Environment = &quot;production&quot;
    Terraform   = true
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;inputs&quot;&gt;Inputs&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Default&lt;/th&gt;
      &lt;th&gt;Required&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;plan_name&lt;/td&gt;
      &lt;td&gt;The display name of a backup plan&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rule_completion_window&lt;/td&gt;
      &lt;td&gt;The amount of time AWS Backup attempts a backup before canceling the job and returning an error&lt;/td&gt;
      &lt;td&gt;`number`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rule_lifecycle_cold_storage_after&lt;/td&gt;
      &lt;td&gt;Specifies the number of days after creation that a recovery point is moved to cold storage&lt;/td&gt;
      &lt;td&gt;`number`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rule_lifecycle_delete_after&lt;/td&gt;
      &lt;td&gt;Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `cold_storage_after`&lt;/td&gt;
      &lt;td&gt;`number`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rule_name&lt;/td&gt;
      &lt;td&gt;An display name for a backup rule&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rule_recovery_point_tags&lt;/td&gt;
      &lt;td&gt;Metadata that you can assign to help organize the resources that you create&lt;/td&gt;
      &lt;td&gt;`map(string)`&lt;/td&gt;
      &lt;td&gt;`{}`&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rule_schedule&lt;/td&gt;
      &lt;td&gt;A CRON expression specifying when AWS Backup initiates a backup job&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rule_start_window&lt;/td&gt;
      &lt;td&gt;The amount of time in minutes before beginning a backup&lt;/td&gt;
      &lt;td&gt;`number`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rules&lt;/td&gt;
      &lt;td&gt;A list of rule maps&lt;/td&gt;
      &lt;td&gt;`list`&lt;/td&gt;
      &lt;td&gt;`[]`&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;selection_name&lt;/td&gt;
      &lt;td&gt;The display name of a resource selection document&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;selection_resources&lt;/td&gt;
      &lt;td&gt;An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan&lt;/td&gt;
      &lt;td&gt;`list`&lt;/td&gt;
      &lt;td&gt;`[]`&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;selection_tag_key&lt;/td&gt;
      &lt;td&gt;The key in a key-value pair&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;selection_tag_type&lt;/td&gt;
      &lt;td&gt;An operation, such as StringEquals, that is applied to a key-value pair used to filter resources in a selection&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;selection_tag_value&lt;/td&gt;
      &lt;td&gt;The value in a key-value pair&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;selections&lt;/td&gt;
      &lt;td&gt;A list of selction maps&lt;/td&gt;
      &lt;td&gt;`list`&lt;/td&gt;
      &lt;td&gt;`[]`&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tags&lt;/td&gt;
      &lt;td&gt;A mapping of tags to assign to the resource&lt;/td&gt;
      &lt;td&gt;`map(string)`&lt;/td&gt;
      &lt;td&gt;`{}`&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vault_kms_key_arn&lt;/td&gt;
      &lt;td&gt;The server-side encryption key that is used to protect your backups&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vault_name&lt;/td&gt;
      &lt;td&gt;Name of the backup vault to create. If not given, AWS use default&lt;/td&gt;
      &lt;td&gt;`string`&lt;/td&gt;
      &lt;td&gt;n/a&lt;/td&gt;
      &lt;td&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;outputs&quot;&gt;Outputs&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;plan_arn&lt;/td&gt;
      &lt;td&gt;The ARN of the backup plan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;plan_id&lt;/td&gt;
      &lt;td&gt;The id of the backup plan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;plan_version&lt;/td&gt;
      &lt;td&gt;Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vault_arn&lt;/td&gt;
      &lt;td&gt;The ARN of the vault&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vault_id&lt;/td&gt;
      &lt;td&gt;The name of the vault&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;known-issues&quot;&gt;Known issues&lt;/h2&gt;

&lt;p&gt;During the developing of the module I found some issues reported to the The AWS provider:&lt;/p&gt;

&lt;h3 id=&quot;related-backup-plan-selections-must-be-deleted-prior-to-backup-plan-deletion&quot;&gt;Related backup plan selections must be deleted prior to backup plan deletion&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ terraform destroy
...
module.aws_backup_example.aws_iam_policy.ab_tag_policy: Destruction complete after 2s
module.aws_backup_example.aws_iam_role.ab_role: Destruction complete after 1s

Error: error deleting Backup Plan: InvalidRequestException: Related backup plan selections must be deleted prior to backup plan deletion
	status code: 400, request id: 4a6637c8-2d46-4714-9929-4df3f694979b

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When trying to destroy a plan, terraform complains about deleting the selections first, even though terraform tries to delete them in the right order:&lt;/p&gt;

&lt;p&gt;This issue was reported as &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-aws/issues/10414&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Backup Plan deletion fails randomly&lt;/em&gt;&lt;/a&gt; for the AWS Provider.&lt;/p&gt;

&lt;p&gt;This happens because thee AWS provider tries to delete the plan without waiting for the selections destroyal confirmation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Workaround:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I included and script in the examples that destroys the selections first and then destroys the plan:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cat terraform_destroy_aws_backup.sh

 #!/bin/sh
targets=&quot;&quot;
for i in `terraform state list | grep &quot;selection&quot;`; do targets=&quot;${targets} --target=${i}&quot;; done

# Destroy selections
terraform destroy ${targets}

# Destroy all
terraform destroy

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;error-creating-backup-selection-iam-role-is-not-authorized-to-call-taggetresources&quot;&gt;Error creating Backup Selection: IAM Role is not authorized to call tag:GetResources&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: error creating Backup Selection: InvalidParameterValueException: IAM Role arn:aws:iam::111111111111:role/aws-backup-plan-complete-plan-role is not authorized to call tag:GetResources
	status code: 400, request id: 07ab775d-8885-4240-bb99-41305df969e0

  on .terraform/modules/aws_backup_example/selection.tf line 1, in resource &quot;aws_backup_selection&quot; &quot;ab_selection&quot;:
   1: resource &quot;aws_backup_selection&quot; &quot;ab_selection&quot; {
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This issue was reported as &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-aws/issues/10511&quot; target=&quot;_blank&quot;&gt;aws_backup_selection.selection: error creating Backup Selection: InvalidParameterValueException&lt;/a&gt; for the AWS Provider.&lt;/p&gt;

&lt;p&gt;I faced this when applying and destroying the same plan several times, for instance when I ws developing the module.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Workaround:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I couldn’t find any workaround for this. Just destroy all wait some time and apply again.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lgallard/terraform-aws-backup.git&quot; target=&quot;_blank&quot;&gt;terraform-aws-backup module at github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://registry.terraform.io/modules/lgallard/backup/aws&quot; target=&quot;_blank&quot;&gt;terraform-aws-backup module at Terraform registry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Terraform" /><summary type="html"></summary></entry><entry><title type="html">Alexa skill: Días Festivos</title><link href="https://lgallardo.com/2019/07/05/holidays-alexa-skill" rel="alternate" type="text/html" title="Alexa skill: Días Festivos" /><published>2019-07-04T19:00:00-05:00</published><updated>2019-07-04T19:00:00-05:00</updated><id>https://lgallardo.com/2019/07/05/holidays-alexa-skill</id><content type="html" xml:base="https://lgallardo.com/2019/07/05/holidays-alexa-skill">&lt;center&gt;&lt;img src=&quot;/images/first_skill.jpg&quot; alt=&quot;Skill - Días Festivos&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Today I received the approval of the publication of my first Alexa skill in Spanish. The name of the skill is &lt;strong&gt;&lt;em&gt;Días Festivos&lt;/em&gt;&lt;/strong&gt;, and lets you know when is the next holiday of a particular month, ask for some holidays such as when Christmas falls, or how many holidays have a month.&lt;/p&gt;

&lt;p&gt;The countries where you can check the holidays are &lt;strong&gt;Argentina&lt;/strong&gt;,Australia, Austria, Belarus, Belgium, Brazil, Bulgaria, Canada, &lt;strong&gt;Colombia&lt;/strong&gt;, Croatia, Czech, Denmark, Finland, France, Germany, Hungary, India, Ireland, Isle Of Man, Italy, Japan, Lithuania, Luxembourg, &lt;strong&gt;México&lt;/strong&gt;, Netherlands, New Zealand,, Norway, Poland, Portugal, Russia, Scotland, Slovenia, Slovakia, South Africa, &lt;strong&gt;Spain&lt;/strong&gt;, Sweden, Switzerland, Ukraine, &lt;strong&gt;United Kingdom&lt;/strong&gt;, &lt;strong&gt;United States&lt;/strong&gt;, Wales.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If your country is not listed, the skill will use &lt;strong&gt;Spain&lt;/strong&gt; as the default country.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install the skill go to the Alexa app and enable the skill &lt;strong&gt;&lt;em&gt;Días festivos&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h2&gt;

&lt;p&gt;Like any skill, ask Alexa to open the skill:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Alexa, open the skill Días festivos&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After the welcome message you can ask:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;¿Cuándo es el próximo feriado?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can also ask Alexa directly in this way:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Alexa, pregúntale a días festivos cuando cae navidad
Alexa, pregúntale a días festivos cuántos días feriados tiene febrero
Alexa, cuándo es el próximo feriado&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-else-does-the-skill-do&quot;&gt;What else does the skill do?&lt;/h2&gt;

&lt;p&gt;I hope to add more features, and in the future expand the list of countries.&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Alexa" /><summary type="html"></summary></entry><entry><title type="html">How to migrate Terraform remote tfstates</title><link href="https://lgallardo.com/2019/06/25/how-to-migrate-terraform-remote-tfstates/" rel="alternate" type="text/html" title="How to migrate Terraform remote tfstates" /><published>2019-06-24T19:00:00-05:00</published><updated>2019-06-24T19:00:00-05:00</updated><id>https://lgallardo.com/2019/06/25/how-to-migrate-terraform-remote-tfstates</id><content type="html" xml:base="https://lgallardo.com/2019/06/25/how-to-migrate-terraform-remote-tfstates/">&lt;center&gt;&lt;img src=&quot;/images/terraform-remote-states.jpg&quot; alt=&quot;Terraform&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In Terraform you can rename and move resources and modules in the same state, whether it is local or remote. But when you want to migrate resources or modules between remote states, you have to take other considerations.&lt;/p&gt;

&lt;p&gt;To solve this, you have to bring the remote configuration, then move the resource locally, and once it has been moved, upload the change to the remote tftstate.&lt;/p&gt;

&lt;p&gt;Let’s see how to do this:&lt;/p&gt;

&lt;p&gt;1) Pull the destination remote tfstate:
  &lt;/p&gt;

&lt;p&gt;To move the resources from one tstate to another, you need to have the tfstate destination locally&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ terraform state pull &amp;gt; dev.tfstate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) Move the resource or module to this local tfstate&lt;/p&gt;

&lt;p&gt;In this example we want to move the &lt;code class=&quot;highlighter-rouge&quot;&gt;module.lambda.module.your_funtion&lt;/code&gt; resource to &lt;code class=&quot;highlighter-rouge&quot;&gt;module.your_function&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ terraform state mv -state-out=dev.tfstate module.lambda.module.your_function module.your_function
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3) Upload the change to the remote tftstate&lt;/p&gt;

&lt;p&gt;The resource was moved from one state to another, but it was done locally. To persist in the destination remote tftstate it must be uploadedr:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ terraform state push dev.tfstate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In some cases the use of the &lt;code class=&quot;highlighter-rouge&quot;&gt;-force&lt;/code&gt; option may be required, for example when there were problems with the initialization of the module, so the previous command would be as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ terraform state push -force dev.tfstate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, and once you have verified that everything is correct, you can delete the local tftstate :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rm dev.tfstate*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@lynnlin827/moving-terraform-resources-states-from-one-remote-state-to-another-c76f8b76a996&quot; target=&quot;_blank&quot;&gt;Moving Terraform Resources’ States from One Remote State to Another&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50400007/terraform-how-to-migrate-state-between-projects&quot; target=&quot;_blank&quot;&gt;Terraform: How to migrate state between projects?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Terraform" /><summary type="html"></summary></entry><entry><title type="html">Dynamic blocks in Terraform 0.12.x</title><link href="https://lgallardo.com/2019/06/14/dynamic-blocks-in-terraform-0.12.x/" rel="alternate" type="text/html" title="Dynamic blocks in Terraform 0.12.x" /><published>2019-06-13T19:00:00-05:00</published><updated>2019-06-13T19:00:00-05:00</updated><id>https://lgallardo.com/2019/06/14/dynamic-blocks-in-terraform-0.12.x</id><content type="html" xml:base="https://lgallardo.com/2019/06/14/dynamic-blocks-in-terraform-0.12.x/">&lt;center&gt;&lt;img src=&quot;/images/terraform.jpg&quot; alt=&quot;Terraform&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Some time ago I wrote about &lt;a href=&quot;https://lgallardo.com/en/2018/07/30/dynamic-configuration-blocks-in-terraform&quot; target=&quot;_blank&quot;&gt;how to make dynamic blocks in Terraform 0.11.x&lt;/a&gt;, that although it solved the problem, it generated others because it wasn’t an official solution and the interpretation by Terraform was not consistent.&lt;/p&gt;

&lt;p&gt;The workaround essentially consisted of defining the blocks dynamically using an assignment to a map list. That is, instead of doing this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
resource &quot;aws_codebuild_project&quot; &quot;codebuild&quot; {

  artifacts{
      type           = &quot;${var.codebuild_artifacts_type}&quot;
      location       = &quot;${var.codebuild_artifacts_location}&quot;
      name           = &quot;${var.codebuild_artifacts_name}&quot;
      namespace_type = &quot;${var.codebuild_artifacts_namespace_type}&quot;
      packaging      = &quot;${var.codebuild_artifacts_packaging}&quot;
      path           = &quot;${var.codebuild_artifacts_path}&quot;

  }

  ...

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It was replaced by this other:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resource &quot;aws_codebuild_project&quot; &quot;codebuild&quot; {

  artifacts = [&quot;${local.codebuild_artifacts}&quot;]

  ...

}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;local.codebuild_artifacts&lt;/code&gt; built the block from a map list, which depending on the type defined in the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;codebuild_artifacts_type&lt;/code&gt; it created a different block:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
locals {
  codebuild_artifacts_def = {
    &quot;S3&quot; = [{
      type                = &quot;${var.codebuild_artifacts_type}&quot;
      location            = &quot;${var.codebuild_artifacts_location}&quot;
      name                = &quot;${var.codebuild_artifacts_name}&quot;
      namespace_type      = &quot;${var.codebuild_artifacts_namespace_type}&quot;
      packaging           = &quot;${var.codebuild_artifacts_packaging}&quot;
      path                = &quot;${var.codebuild_artifacts_path}&quot;
      encryption_disabled = var.codebuild_artifacts_encryption_disabled
    }]

    &quot;CODEPIPELINE&quot; = [{
      type        Some time ago I wrote about [how to make dynamic blocks in Terraform 0.11.x] (https://lgallardo.com/en/2018/07/30/dynamic-configuration-blocks-in-terraform/) {: target = &quot;_blank &quot;}, that although it solved the problem generated others because it was not an official solution and the interpretation by Terraform was not consistent.        = &quot;${var.codebuild_artifacts_type}&quot;
      name                = &quot;${var.codebuild_artifacts_name}&quot;
      encryption_disabled = var.codebuild_artifacts_encryption_disabled
    }]

    &quot;NO_ARTIFACTS&quot; = [{
      type = &quot;${var.codebuild_artifacts_type}&quot;
    }]
  }

  # Retuned map
  codebuild_artifacts = &quot;${local.codebuild_artifacts_def[var.codebuild_artifacts_type]}&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;dynamic-blocks-in-terraform-012x&quot;&gt;Dynamic blocks in Terraform 0.12.x&lt;/h1&gt;

&lt;p&gt;Terraform 0.12.x proposes &lt;a href=&quot;https://www.hashicorp.com/blog/hashicorp-terraform-0-12-preview-for-and-for-each&quot; target=&quot;_blank&quot;&gt;dynamic blocks&lt;/a&gt; to solve this and other cases related to blocks. To use dynamic blocks you have to use &lt;code class=&quot;highlighter-rouge&quot;&gt;dynamic&lt;/code&gt; and&lt;code class=&quot;highlighter-rouge&quot;&gt; for-each&lt;/code&gt;. For example, for the above definition:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  dynamic &quot;artifacts&quot; {
    for_each = [local.codebuild_artifacts]
    content {
      type                = artifacts.value.type
      encryption_disabled = lookup(artifacts.value, &quot;encryption_disabled&quot;, null)
      location            = lookup(artifacts.value, &quot;location&quot;, null)
      name                = lookup(artifacts.value, &quot;name&quot;, null)
      namespace_type      = lookup(artifacts.value, &quot;namespace_type&quot;, null)
      packaging           = lookup(artifacts.value, &quot;packaging&quot;, null)
      path                = lookup(artifacts.value, &quot;path&quot;, null)
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way the &lt;code class=&quot;highlighter-rouge&quot;&gt;local.codebuild_artifacts&lt;/code&gt; definition is simplify:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;locals {
  codebuild_artifacts = {
    type                = var.codebuild_artifacts_type
    location            = var.codebuild_artifacts_location
    name                = var.codebuild_artifacts_name
    namespace_type      = var.codebuild_artifacts_namespace_type
    packaging           = var.codebuild_artifacts_packaging
    path                = var.codebuild_artifacts_path
    encryption_disabled = var.codebuild_artifacts_encryption_disabled
  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Where is the magic?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, in the &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; data type, which tells Terraform to ignore the attribute if the&lt;code class=&quot;highlighter-rouge&quot;&gt; lookup&lt;/code&gt; function doesn’t find the index on the map. Let’s take a look at the the first lines in the &lt;code class=&quot;highlighter-rouge&quot;&gt;content&lt;/code&gt; block, which is what is replaced in the &lt;code class=&quot;highlighter-rouge&quot;&gt;artifacts&lt;/code&gt; block in each iteration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    content {
      type                = artifacts.value.type
      encryption_disabled = lookup(artifacts.value, &quot;encryption_disabled&quot;, null)
      location            = lookup(artifacts.value, &quot;location&quot;, null)
      ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here you can see that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; is always defined according to the value of&lt;code class=&quot;highlighter-rouge&quot;&gt; artifacts.value.type&lt;/code&gt;, so it’s not taken from the map.&lt;/li&gt;
  &lt;li&gt;The attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;encryption_disabled&lt;/code&gt; is assigned if something like&lt;code class=&quot;highlighter-rouge&quot;&gt; artifacts.value ['encryption_disabled'] &lt;/code&gt;is found in the map. If the index doesn’t exist, it’s assigned to &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; and therefore it won’t be taken into account by Terraform.&lt;/li&gt;
  &lt;li&gt;And so on for the rest of the attributes, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;location&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This allows having definitions of dynamic blocks, but you have to take into account that some values must be defined together. For example, for the &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt; type you must define the following variables:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;codebuild_artifacts_type
codebuild_artifacts_location
codebuild_artifacts_name
codebuild_artifacts_namespace_type
codebuild_artifacts_packaging
codebuild_artifacts_path
codebuild_artifacts_encryption_disabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;While for &lt;code class=&quot;highlighter-rouge&quot;&gt;NO_ARTIFACTS&lt;/code&gt; just define this one:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;codebuild_artifacts_type
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On the other hand, the magic is completed by the fact that we are not using an assignment for the a &lt;code class=&quot;highlighter-rouge&quot;&gt;artifacs&lt;/code&gt; block but rather the dynamic block definition. In other words, instead of this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; artifacts = [&quot;${local.codebuild_artifacts}&quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The dynamic block definition is used:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  dynamic &quot;artifacts&quot; {
    for_each = [local.codebuild_artifacts]
    content {
      ...
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://lgallardo.com/2018/07/30/dynamic-configuration-blocks-in-terraform&quot; target=&quot;_blank&quot;&gt;Dynamic blocks in Terraform 0.11.x&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hashicorp.com/blog/hashicorp-terraform-0-12-preview-for-and-for-each&quot; target=&quot;_blank&quot;&gt;HashiCorp Terraform 0.12 Preview: For and For-Each&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Terraform" /><summary type="html"></summary></entry><entry><title type="html">Guru of the week</title><link href="https://lgallardo.com/2019/05/13/2019-05-13-guru-of-the-week" rel="alternate" type="text/html" title="Guru of the week" /><published>2019-05-12T19:00:00-05:00</published><updated>2019-05-12T19:00:00-05:00</updated><id>https://lgallardo.com/2019/05/13/a-cloud-guru-of-the-week</id><content type="html" xml:base="https://lgallardo.com/2019/05/13/2019-05-13-guru-of-the-week">&lt;center&gt;&lt;img src=&quot;/images/guru-of-the-week-1.jpg&quot; alt=&quot;Guru of the week&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Last week I answered &lt;a href=&quot;https://acloud.guru/forums/guru-of-the-week/discussion/-Ldw3i4mdiMIpJGY6tem/%5Baws%5D_-_guru_of_the_week_quest&quot; target=&quot;_blank&quot;&gt;this Guru of the Week question&lt;/a&gt; and I won!. Some questions can be tricky, but the key is to think what service or technology solves the problem better.&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/images/guru-of-the-week-2.jpg&quot; alt=&quot;Guru of the week - Luis Gallardo&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Every week a new question is asked and winners are mention in the &lt;a href=&quot;https://acloud.guru/series/aws-this-week&quot; target=&quot;_blank&quot;&gt;AWS This Week&lt;/a&gt; series at &lt;a href=&quot;https://acloud.guru/&quot; target=&quot;_blank&quot;&gt;A Cloud Guru&lt;/a&gt;.They also win an A Cloud Guru T-shirt, sticker and the opportunity to win a free ticket to &lt;strong&gt;re:Invent 2019&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Watching the &lt;a href=&quot;https://acloud.guru/series/aws-this-week&quot; target=&quot;_blank&quot;&gt;AWS This Week&lt;/a&gt; summary is an excellent way to keep informed of changes in AWS and to learn about new services and technologies.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/series/aws-this-week&quot; target=&quot;_blank&quot;&gt;AWS This Week&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/forums/guru-of-the-week/&quot; target=&quot;_blank&quot;&gt;Guru of the Week questions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook/acloudgutu&quot; target=&quot;_blank&quot;&gt;Guru of the Week questions - Facebook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru&quot; target=&quot;_blank&quot;&gt;A Cloud Guru&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">AWS Certified Alexa Skill Builder - Specialty</title><link href="https://lgallardo.com/2019/04/19/2019-04-19-aws-certified-alexa-skill-builder-specialty/" rel="alternate" type="text/html" title="AWS Certified Alexa Skill Builder - Specialty" /><published>2019-04-18T19:00:00-05:00</published><updated>2019-04-18T19:00:00-05:00</updated><id>https://lgallardo.com/2019/04/19/aws-certified-alexa-skill-builder-specialty</id><content type="html" xml:base="https://lgallardo.com/2019/04/19/2019-04-19-aws-certified-alexa-skill-builder-specialty/">&lt;center&gt;&lt;img src=&quot;/images/AWS_Certified_Alexa_Skill_Builder_Specialty.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In January I took the beta test for &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certified Alexa Skill Builder Specialty&lt;/code&gt; and yesterday I got the results. I had been programming Alexa Skills and when I saw the blueprint of the exam it caught my attention that a lot of the content I already knew in one way or another.&lt;/p&gt;

&lt;p&gt;There were 80 questions to answer in 170 minutes, similar to a Professional exam.&lt;/p&gt;

&lt;h2 id=&quot;how-did-i-prepare&quot;&gt;How did I prepare?&lt;/h2&gt;

&lt;p&gt;Unlike other exams that I had already taken, the preparation for this was different, since being a beta test there was no course or didactic material focused this certification.&lt;/p&gt;

&lt;p&gt;Before knowing the existence of the beta test I was already experimenting with Alexa, and in fact I checked some videos from &lt;code class=&quot;highlighter-rouge&quot;&gt;A Cloud Guru&lt;/code&gt; , like &lt;a href=&quot;https://acloud.guru/learn/intro-alexa-free&quot; target=&quot;_blank&quot;&gt;Introduction to Alexa&lt;/a&gt;, that although it is good to start is very basic since they only take the examples that are obtained in the git repositories of AWS, modifying only a couple of things in the code.&lt;/p&gt;

&lt;p&gt;I had also followed the series of videos &lt;a href=&quot;https://acloud.guru/series/alexa-devs&quot; target=&quot;_blank&quot;&gt;Alexa Devs&lt;/a&gt;, which has more content than the introductory course, here is more specific information such as the management of videos and screens.&lt;/p&gt;

&lt;h2 id=&quot;but-what-to-study&quot;&gt;But what to study?&lt;/h2&gt;

&lt;p&gt;You have to be very familiar with the contents of the blueprint they provide when registering for the exam:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Domain&lt;/th&gt;
      &lt;th&gt;% of Examination&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 1: Voice-First Design Practices and Capabilities&lt;/td&gt;
      &lt;td&gt;14%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 2: Skill Design&lt;/td&gt;
      &lt;td&gt;24%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 3: Skill Architecture&lt;/td&gt;
      &lt;td&gt;14%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 4: Skill Development&lt;/td&gt;
      &lt;td&gt;20%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 5: Test, Validate, and Troubleshoot&lt;/td&gt;
      &lt;td&gt;%18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 6: Publishing, Operations, and Lifecycle Management&lt;/td&gt;
      &lt;td&gt;10%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;100%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;On the other hand I also recommend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Know the request / response JSON well.&lt;/li&gt;
  &lt;li&gt;Understand how the Beta tester program works&lt;/li&gt;
  &lt;li&gt;Know how to persist data in a session and among sessions&lt;/li&gt;
  &lt;li&gt;Know the different interaction models and what intents are provided by default&lt;/li&gt;
  &lt;li&gt;Understand the Standard Built-in Intents&lt;/li&gt;
  &lt;li&gt;Know the AWS backend services, i.e., Lambda, DynamoDB, S3&lt;/li&gt;
  &lt;li&gt;Know how to grant permission to Lambda functions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;extra-tip&quot;&gt;Extra tip&lt;/h2&gt;

&lt;p&gt;Being a specialization, many of the questions are long and confusing, so I recommend that when you read the question &lt;code class=&quot;highlighter-rouge&quot;&gt;Alexa Skill Builder&lt;/code&gt; you replace it in your mind with&lt;code class=&quot;highlighter-rouge&quot;&gt; Developer&lt;/code&gt;, since it sounds very strange when you read something like “An Alexa Skill Builder builds a skill … “&lt;/p&gt;

&lt;h2 id=&quot;my-recommendations-for-saving-time-on-this-exam-are&quot;&gt;My recommendations for saving time on this exam are:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Answer the easy question quick, don’t stay long thing whether is right answer because probably it is.&lt;/li&gt;
  &lt;li&gt;Only mark for review those question where you really have a doubt, so you can check them later and if there’s time left be able to review them all.&lt;/li&gt;
  &lt;li&gt;Think it is a Amazon certification and in that matter always wonder what Amazon service to use.&lt;/li&gt;
  &lt;li&gt;Take into account that it’s a Amazon certification and in that matter always think what Amazon service to use.&lt;/li&gt;
  &lt;li&gt;Discard things that can be done at the OS level if an Amazon service provides it, and only consider it when there is no other option.&lt;/li&gt;
  &lt;li&gt;Whenever you read scalable think of SQS / DynamoDB, cost-saving = S3 / S3 RRS, and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are interested in this certification I recommend some links:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Online curse&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/intro-alexa-free&quot; target=&quot;_blank&quot;&gt;Introduction to Alexa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/series/alexa-devs&quot; target=&quot;_blank&quot;&gt;Alexa Devs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;AWS Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/whitepapers/&quot; target=&quot;_blank&quot;&gt;Whitepapers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/documentation/&quot; target=&quot;_blank&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/faqs/&quot; target=&quot;_blank&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">Pyenv to the rescue</title><link href="https://lgallardo.com/2019/02/26/pyenv-to-the-rescue" rel="alternate" type="text/html" title="Pyenv to the rescue" /><published>2019-02-25T18:00:00-06:00</published><updated>2019-02-25T18:00:00-06:00</updated><id>https://lgallardo.com/2019/02/26/pyenv-to-the-rescue</id><content type="html" xml:base="https://lgallardo.com/2019/02/26/pyenv-to-the-rescue">&lt;center&gt;&lt;img src=&quot;/images/Python-logo-150.jpg&quot; alt=&quot;Python&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-problem&quot;&gt;The problem&lt;/h1&gt;

&lt;p&gt;I recently switched to &lt;em&gt;Debian testing&lt;/em&gt; again so as to be able to use Python 3.6 among other things. I started working with this version, creating my Lambda Layers and everything was fine until &lt;em&gt;Debian testing&lt;/em&gt; switched to Python 3.7. Well, I told myself, there is no drama, using &lt;code class=&quot;highlighter-rouge&quot;&gt;alternative&lt;/code&gt; I can switch versions of Python smoothly or set  &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; to use one interpreter or another.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:~# update-alternatives --config python
There are 3 choices for the alternative python (providing /usr/bin/python).

  Selection    Path                Priority   Status
------------------------------------------------------------
  0            /usr/bin/python3.6   3         auto mode
  1            /usr/bin/python2     1         manual mode
  2            /usr/bin/python3     2         manual mode
* 3            /usr/bin/python3.6   3         manual mode

Press &amp;lt;enter&amp;gt; to keep the current choice[*], or type selection number: 3

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But even using &lt;code class=&quot;highlighter-rouge&quot;&gt;alternative&lt;/code&gt; or forcing the interpreter to use Python 3.6 it seems there is always something pointing to Python 3.7:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ virtualenv -p /usr/bin/python3.6 test
Running virtualenv with interpreter /usr/bin/python3.6
Traceback (most recent call last):
  File &quot;/home/lgallard/.local/lib/python3.7/site-packages/virtualenv.py&quot;, line 22, in &amp;lt;module&amp;gt;
    import distutils.spawn
ModuleNotFoundError: No module named 'distutils.spawn'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;pyenv-to-the-rescue&quot;&gt;pyenv to the rescue&lt;/h1&gt;

&lt;p&gt;There is a version manager of Python called &lt;a href=&quot;https://github.com/pyenv/pyenv#choosing-the-python-version&quot; target=&quot;_blank&quot;&gt;pyenv&lt;/a&gt; which allows you to configure the environment to use both locally and globally.&lt;/p&gt;

&lt;p&gt;For example, to install Python version 3.6.8 just do&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv install 3.6.8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can verify the versions as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv versions
  system
* 3.6.8 (set by /home/lgallard/.pyenv/version)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then to use the version installed with pyenv, just pass the path:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ virtualenv -p ~/.pyenv/versions/3.6.8/bin/python test
Running virtualenv with interpreter /home/lgallard/.pyenv/versions/3.6.8/bin/python
Using base prefix '/home/lgallard/.pyenv/versions/3.6.8'
New python executable in /home/lgallard/test/bin/python
Installing setuptools, pip, wheel...
done.

./test/bin/python --version
Python 3.6.8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way I was able to keep using the specific Python version I needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pyenv/pyenv#choosing-the-python-version&quot; target=&quot;_blank&quot;&gt;pyenv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/23842713/using-python-3-in-virtualenv&quot; target=&quot;_blank&quot;&gt;Using Python 3 in virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Python" /><summary type="html"></summary></entry><entry><title type="html">Using Alexa ASK SDK from Lambda Layers</title><link href="https://lgallardo.com/2018/12/04/using-alexa-ask-from-lambda-layers" rel="alternate" type="text/html" title="Using Alexa ASK SDK from Lambda Layers" /><published>2018-12-03T18:00:00-06:00</published><updated>2018-12-03T18:00:00-06:00</updated><id>https://lgallardo.com/2018/12/04/using-alexa-ask-from-lambda-layers</id><content type="html" xml:base="https://lgallardo.com/2018/12/04/using-alexa-ask-from-lambda-layers">&lt;center&gt;&lt;img src=&quot;/images/alexa_lambda_layers.jpg&quot; alt=&quot;Alexa + lambda + Layers&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;lambda-layers&quot;&gt;Lambda Layers&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html&quot; target=&quot;_blank&quot;&gt;Lambda Layers&lt;/a&gt; was recently incorporated into AWS, which basically allows you to share libraries and codes between Lambda functions. This makes it possible to speed up development since now it is not necessary to pack all libraries with the Lambda function, as we used to do with Alexa’s ASK, but now these libraries can be uploaded independently in Lambda Layers and used directly in our functions.&lt;/p&gt;

&lt;h1 id=&quot;alexas-ask-sdk&quot;&gt;Alexa’s ASK SDK&lt;/h1&gt;
&lt;p&gt;To prepare Alexa’s ASK for Lambda Layers we can follow the following steps:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virtualenv python
source python/bin/activate
pip install ask-sdk
zip -r ask-sdk.zip python/lib/python3.6/site-packages/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can use the Alexa’s ASK SDK from your lambda functions without having to upload it in each deployment.&lt;/p&gt;

&lt;h1 id=&quot;uploading-the-ask-sdk-to-lambda-layers&quot;&gt;Uploading the ASK SDK to Lambda Layers&lt;/h1&gt;

&lt;p&gt;The first thing we must do is to create the Lambda Layers from the console:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/create_layer.jpg&quot; alt=&quot;Create Layer&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Then you must fill out the form and select the .zip that you created to upload it, and finally you must indicate the runtime with which it is compatible.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/ask_sdk_lambda_layer.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Once created, we can see the description and the version:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/ask_sdk_lambda_layer2.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-include-the-ask-sdk-from-lambda-layers&quot;&gt;How to include the ASK SDK from Lambda Layers?&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Got to your Lambda function and right under yout function name you can click on &lt;strong&gt;&lt;em&gt;Layers&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;From the below section &lt;strong&gt;&lt;em&gt;Referenced layers&lt;/em&gt;&lt;/strong&gt; click on the &lt;strong&gt;&lt;em&gt;Add a layer&lt;/em&gt;&lt;/strong&gt; button&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer1.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Select the &lt;strong&gt;&lt;em&gt;ask-sdk&lt;/em&gt;&lt;/strong&gt; layer from the drop-down menu, and click on &lt;strong&gt;&lt;em&gt;Add&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer2.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;As you can see below, the Lambda Layer with the Alexa’s ASK SDK can now be used in this Lambda function:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer3.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can select this same Layer for other Lambda functions that use the same ASK SDK and runtime without having to be uploading it in each deployment.&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Alexa" /><category term="Lambda" /><category term="Layers" /><summary type="html"></summary></entry><entry><title type="html">AWS CodePipeline with Bitbucket</title><link href="https://lgallardo.com/2018/09/07/codepipeline-bitbucket" rel="alternate" type="text/html" title="AWS CodePipeline with Bitbucket" /><published>2018-09-06T19:00:00-05:00</published><updated>2018-09-06T19:00:00-05:00</updated><id>https://lgallardo.com/2018/09/07/codepipeline-bitbucket</id><content type="html" xml:base="https://lgallardo.com/2018/09/07/codepipeline-bitbucket">&lt;center&gt;&lt;img src=&quot;/images/CodePipeline_bitbucket.jpg&quot; alt=&quot;AWS CodePipeline and Bitbucket&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;At work I needed to deploy an application using AWS CodePipeline but the repository where the code is located is in Bitbucket. This was an inconvenient task because AWS Pipeline does not support Bitbucket, as does AWS Codebuild.&lt;/p&gt;

&lt;p&gt;If you do some research on the internet, you can find alternative solutions to this problem, such as having a webhook in the repository that calls a lambda function and generates a file in a bucket and this is the trigger for AWS CodePipeline [1]. Another possible solution is to use Bitbucket Pipelines to create the object to be placed in the bucket, or even mirror the contents of the Bitbucket repository in AWS CodeCommit.&lt;/p&gt;

&lt;p&gt;Because these workarounds didn’t convince me, I was thinking about a solution where everything was left on AWS and that I didn’t have to configure repositories, and the key was the support that if AWS CodeBuild has Bitbucket. So instead of using the Bitbucket’s pipelines to generate the source of AWS CodePipeline, with AWS CodeBuild I generate a zip file with the source code of the application which is then used as input.&lt;/p&gt;

&lt;p&gt;In particular this application is a Docker image that is generated with AWS CodeBuild and then saved in AWS ECR. This CodeBuild generates as output artifact the definition of the ECS task, which is taken as input in the ECS deployment face, updating the service and therefore the application:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/aws_codepipeline_succeded.jpg&quot; alt=&quot;AWS Codebuild trigger&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;not-everything-is-perfect&quot;&gt;Not everything is perfect.&lt;/h1&gt;

&lt;p&gt;I list a few things to consider with this solution:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;For CodeBuild to access private Bitbucket repositories, you must authenticate with a user from the AWS web console. If you are considering how to create this release, consider using a service account that has read-only access to the repository.&lt;/li&gt;
  &lt;li&gt;The AWS CodeBuild project trigger will not run automatically when you update the repository, so you need to start the project. If you want this to be automatic or as close as possible, you can set up a scheduled task in your project:&lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/aws_codebuild_trigger.jpg&quot; alt=&quot;AWS Codebuild trigger&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&quot;https://aws.amazon.com/blogs/devops/integrating-git-with-aws-codepipeline/&quot; target=&quot;_blank&quot;&gt;Integrating Git with AWS CodePipeline&lt;/a&gt;&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Codebuild" /><category term="CodePipeline" /><category term="Bitbucket" /><summary type="html"></summary></entry></feed>
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es"><generator uri="https://jekyllrb.com/" version="3.6.0">Jekyll</generator><link href="https://lgallardo.com/es/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lgallardo.com/es/" rel="alternate" type="text/html" hreflang="es" /><updated>2019-02-15T13:09:09-06:00</updated><id>https://lgallardo.com/es/</id><title type="html">lgallardo.com</title><subtitle></subtitle><author><name>Luis M. Gallardo D.</name></author><entry><title type="html">Usando el ASK SDK de Alexa desde Lambda Layers</title><link href="https://lgallardo.com/es/2018/12/04/using-alexa-ask-from-lambda-layers" rel="alternate" type="text/html" title="Usando el ASK SDK de Alexa desde Lambda Layers" /><published>2018-12-03T18:00:00-06:00</published><updated>2018-12-03T18:00:00-06:00</updated><id>https://lgallardo.com/es/2018/12/04/using-alexa-ask-from-lambda-layers</id><content type="html" xml:base="https://lgallardo.com/es/2018/12/04/using-alexa-ask-from-lambda-layers">&lt;center&gt;&lt;img src=&quot;/images/alexa_lambda_layers.jpg&quot; alt=&quot;Alexa + lambda + Layers&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;lambda-layers&quot;&gt;Lambda Layers&lt;/h1&gt;
&lt;p&gt;Recientemente se incorporó &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html&quot; target=&quot;_blank&quot;&gt;Lambda Layers&lt;/a&gt; en AWS, que básicamente permite compartir librerías y códigos entre funciones Lambda. Esto permite agilizar el desarrollo ya que ahora no es necesario empaquetar todas las librerías con la función Lambda, como hacíamos con el ASK de Alexa, sino que ahora estás librerías se pueden subir de forma independiente en Lambda Layers y usarlas directamente en nuestras funciones.&lt;/p&gt;

&lt;h1 id=&quot;ask-sdk-de-alexa&quot;&gt;ASK SDK de Alexa&lt;/h1&gt;
&lt;p&gt;Para preparar el ASK de Alexa para Lambda Layers podemos seguir los siguientes pasos:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virtualenv python
source python/bin/activate
pip install ask-sdk
zip -r ask-sdk.zip python/lib/python3.6/site-packages/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora puedes usar el ASK SDK de Alexa desde tus funciones lambda sin necesidad de subirlo en cade despliegue.&lt;/p&gt;

&lt;h1 id=&quot;subiendo-el-ask-sdk-a-lambda-layer&quot;&gt;Subiendo el ASK SDK a Lambda Layer&lt;/h1&gt;

&lt;p&gt;Lo primero que debemos hacer es crear el Lambda Layers desde la consola:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/create_layer.jpg&quot; alt=&quot;Create Layer&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Luego completamos el formulario y seleccionamos el .zip que creamos para subirlo, y finalmente le indicamos el runtime con que es compatible.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/ask_sdk_lambda_layer.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez creada podremos ver la descripción y la versión:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/ask_sdk_lambda_layer2.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cómo-incluir-el-ask-sdk-desde-lambda-layers&quot;&gt;¿Cómo incluir el ASK SDK desde Lambda Layers?&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Ve a tu función Lambda y justo debajo del nombre de tu función haz clic en &lt;strong&gt;&lt;em&gt;Layers&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Desde el apartado &lt;strong&gt;&lt;em&gt;Referenced layers&lt;/em&gt;&lt;/strong&gt; en la parte inferior, haz clic en el botón &lt;strong&gt;&lt;em&gt;Add a layer&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer1.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Selecciona el layer &lt;strong&gt;&lt;em&gt;ask-sdk&lt;/em&gt;&lt;/strong&gt; desde el menú desplegable, y haz clic en &lt;strong&gt;&lt;em&gt;Add&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer2.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Como puedes ver, el Lambda Layer con el ASK SDK de Alexa ya puede ser usado en esta función Lambda:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer3.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Puedes seleccionar este mismo Layer para las otras funciones Lambda que usen el mismo ASK SDK y runtime sin tener que estar subiéndolo en cada despliegue.&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Alexa" /><category term="Lambda" /><category term="Layers" /><summary type="html"></summary></entry><entry><title type="html">AWS CodePipeline con Bitbucket</title><link href="https://lgallardo.com/es/2018/09/07/codepipeline-bitbucket" rel="alternate" type="text/html" title="AWS CodePipeline con Bitbucket" /><published>2018-09-06T19:00:00-05:00</published><updated>2018-09-06T19:00:00-05:00</updated><id>https://lgallardo.com/es/2018/09/07/codepipeline-bitbucket</id><content type="html" xml:base="https://lgallardo.com/es/2018/09/07/codepipeline-bitbucket">&lt;center&gt;&lt;img src=&quot;/images/CodePipeline_bitbucket.jpg&quot; alt=&quot;AWS CodePipeline and Bitbucket&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En el trabajo necesitaba desplegar una aplicación usando AWS CodePipeline pero el repositorio donde se encuentra el código está en Bitbucket. Esto representó un desafío interesante porque AWS Pipeline no soporta Bitbucket, a diferencia de AWS CodeBuild que si lo soporta.&lt;/p&gt;

&lt;p&gt;Si se investiga un poco en internet se pueden encontrar soluciones alternativas a este problema, como por ejemplo tener un webhook en el repositorio que llame a una función lambda y que genere un archivo en un bucket y que sea el disparador de AWS CodePipeline [1]. Otra posible solución es usar Bitbucket Pipelines para crear el objeto a colocar en el bucket, o incluso hacer un espejo del contenido del repositorio de Bitbucket en AWS CodeCommit.&lt;/p&gt;

&lt;p&gt;Como no me terminaron de convencer estas soluciones alternativas, estuve pensando una solución donde todo quedara en AWS y que no tuviese que configurar los repositorios, y la clave fue el soporte que si tiene AWS CodeBuild con Bitbucket. Entonces, en vez de usar el pipeline de Bitbucket para generar la fuente de AWS CodePipeline, con AWS CodeBuild genero un archivo zip con el código fuente de la aplicación la cual luego es usada como entrada.&lt;/p&gt;

&lt;p&gt;En particular esta aplicación es una imagen Docker que se genera con AWS CodeBuild y luego se guarda en AWS ECR, Este CodeBuild genera como artefacto de salida la definición de la tarea de ECS, la cual es tomada como entrada en la face de despliegue de ECS, actualizando el servicio y por ende la aplicación:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/aws_codepipeline_succeded.jpg&quot; alt=&quot;AWS Codebuild trigger&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;no-todo-es-perfecto&quot;&gt;No todo es perfecto&lt;/h1&gt;

&lt;p&gt;Enumero algunas cosas que se debe considerar con esta solución:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Para que CodeBuild acceda a los repositorios privados de Bitbucket se debe autenticar con un usuario desde la consola web de AWS. Si están pensando en automatizar la creación de este disparador consideren usar una cuenta de servicio que tenga acceso de solo lectura sobre el repositorio.&lt;/li&gt;
  &lt;li&gt;El proyecto de AWS CodeBuild que sirve de disparador no se ejecutará automáticamente al actualizar el repositorio, por lo que tienen que iniciar el proyecto. Si quieren que esto sea automático o lo más parecido posible, pueden configurar una tarea programada en el proyecto:&lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/aws_codebuild_trigger.jpg&quot; alt=&quot;AWS Codebuild trigger&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&quot;https://aws.amazon.com/blogs/devops/integrating-git-with-aws-codepipeline/&quot; target=&quot;_blank&quot;&gt;Integrating Git with AWS CodePipeline&lt;/a&gt;&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Codebuild" /><category term="CodePipeline" /><category term="Bitbucket" /><summary type="html"></summary></entry><entry><title type="html">AWS Certified DevOps Engineer - Professional</title><link href="https://lgallardo.com/es/2018/08/12/aws-certified-devops-engineer-professional" rel="alternate" type="text/html" title="AWS Certified DevOps Engineer - Professional" /><published>2018-08-11T19:00:00-05:00</published><updated>2018-08-11T19:00:00-05:00</updated><id>https://lgallardo.com/es/2018/08/12/aws-certified-devops-engineer-professional</id><content type="html" xml:base="https://lgallardo.com/es/2018/08/12/aws-certified-devops-engineer-professional">&lt;center&gt;&lt;img src=&quot;/images/AWS_Certified_DevOps_Engineer_Professional.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Recientemente aprobé la certificación &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certified DevOps Engineer - Professional&lt;/code&gt; y quería dejar mis comentarios respecto al examen:&lt;/p&gt;

&lt;p&gt;Fueron 80 preguntas para responder en 170 minutos. Este examen es el más difícil ya que debes saber sobre los contenidos anteriores de Developer y SysOps. En general debes saber las tecnología de AWS y cuándo usarlas desde la perspectiva de DevOps para el despliegue de aplicaciones sobre AWS. En particular los temas claves acá son CloudFormation, OpsWorks, Elastic Beanstalk y Auto Scaling Groups&lt;/p&gt;

&lt;h1 id=&quot;cloudformation&quot;&gt;CloudFormation&lt;/h1&gt;
&lt;p&gt;Como mínimo debes saber cómo se compone una plantilla de CloudFormation, cómo actualizar un stack, cómo evitar que se actualice, diferencia entre WaitCondition y Creation Policy, cómo hacer rolling update de los ASGs, tipos de recursos.&lt;/p&gt;

&lt;h1 id=&quot;opsworks&quot;&gt;OpsWorks&lt;/h1&gt;
&lt;p&gt;Aquí debes tener claro los conceptos de Stack, Layer, y Application. Saber qué son los Lyfecyles events y cómo o cuándo se ejecutan.Es de suma importancia saber el comando “deployment” y tener en cuenta que no solo sirve para hacer despliegue de aplicaciones. También es importante que recuerdes que con OpsWorks puedes agregar infraestructura existen a los stacks (cosa que no puedes hacer en CloudFormation o Elastic Beanstalk) y que solo puedes asociar una instancia RDS por stack.&lt;/p&gt;

&lt;h1 id=&quot;elastic-beanstalk&quot;&gt;Elastic Beanstalk&lt;/h1&gt;
&lt;p&gt;Entiende los casos de uso del servicio, recuerda que puede usar Docker en EB, por lo que prácticamente puedes ejecutar cualquier cosa en contenedores. Estudia cómo crear configuraciones desde el .ebextenstions, así como también cómo guardar configuraciones y la precedencia entre las distintas formas de hacerlo. Importante que sepas los tipos de despliegue que puedes realizar con EB, y en particular que es uno de los que permite hacer despliegues Blue/Green de forma integrada al servicio, pero que por el contrario debes usar Route 53 si quiere hacer un despliegue A/B.&lt;/p&gt;

&lt;h1 id=&quot;auto-scaling-groups&quot;&gt;Auto Scaling Groups&lt;/h1&gt;
&lt;p&gt;De los Auto Scaling Groups debes saber las Termination policies, y cuáles son útiles para hacer despliegues de aplicaciones. También estudia los Lifecycle Hooks y en particular todos los estados por el que pasa una instancia, y los casos de uso cuando está en &lt;code class=&quot;highlighter-rouge&quot;&gt;pending:wait&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;terminating:wait&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;lo-demás&quot;&gt;Lo demás&lt;/h1&gt;
&lt;p&gt;El resto del examen se enfoca en evaluarte tus conocimientos de los tipos de despliegue en AWS, así como temas de las certificaciones de Developer y SysOps, como pueden ser DynamoDB o CloudWatch.&lt;/p&gt;

&lt;h1 id=&quot;mis-recomendaciones-para-ganar-tiempo-en-este-examen-son&quot;&gt;Mis recomendaciones para ganar tiempo en este examen son:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Las preguntas fáciles respóndelas rápidamente, no te quedes mucho tiempo pensando en si es la respuesta correcta porque seguro lo es.&lt;/li&gt;
  &lt;li&gt;Solo marcar las preguntas en las que realmente tienes dudas, así al momento de revisarlas puedes enfocarte en solo esas y si queda tiempo empezar a revisar el resto&lt;/li&gt;
  &lt;li&gt;Piensen que es una certificación de Amazon, en ese sentido siempre preguntarse cuál servicio de Amazon corresponde.&lt;/li&gt;
  &lt;li&gt;Descartar cosas que se pueden hacer a nivel de S.O. si un servicio de Amazon lo provee, y solo considerarlo cuando no hay mas opción.&lt;/li&gt;
  &lt;li&gt;Siempre que lean scalable piensen en SQS/DynamoDB, cost-saving = S3/S3 RRS, y así.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si estás interesado en esta certificación te recomiendo algunos enlaces:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cursos en línea&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://linuxacademy.com&quot; target=&quot;_blank&quot;&gt;Linux Academy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/aws-certified-devops-engineer-professional&quot; target=&quot;_blank&quot;&gt;A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloudacademy.com/aws-certifications-training/&quot; target=&quot;_blank&quot;&gt;Cloud Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Documentación de AWS&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/whitepapers/&quot; target=&quot;_blank&quot;&gt;Whitepapers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/documentation/&quot; target=&quot;_blank&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/faqs/&quot; target=&quot;_blank&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">Bloques de configuración dinámicos en Terraform</title><link href="https://lgallardo.com/es/2018/07/30/dynamic-configuration-blocks-in-terraform/" rel="alternate" type="text/html" title="Bloques de configuración dinámicos en Terraform" /><published>2018-07-29T19:00:00-05:00</published><updated>2018-07-29T19:00:00-05:00</updated><id>https://lgallardo.com/es/2018/07/30/dynamic-configuration-blocks-in-terraform</id><content type="html" xml:base="https://lgallardo.com/es/2018/07/30/dynamic-configuration-blocks-in-terraform/">&lt;center&gt;&lt;img src=&quot;/images/terraform.jpg&quot; alt=&quot;Terraform&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una de las cosas que tenía pendiente por resolver era el hecho de que en Terraform hay bloques de configuración que dependiendo de las opciones puede que tengan parámetros distintos o que incluso no acepte los mismos parámetros.&lt;/p&gt;

&lt;p&gt;Para eso, y guiándome de un código de un &lt;a href=&quot;https://github.com/cloudposse/terraform-aws-codebuild&quot; target=&quot;_blank&quot;&gt;módulo de la  comunidad&lt;/a&gt;, logré sortear este problema usando &lt;a href=&quot;https://www.terraform.io/docs/configuration/locals.html&quot; target=&quot;_blank&quot;&gt;locals values de Terraform&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tomando un ejemplo de esto tenemos el bloque &lt;code class=&quot;highlighter-rouge&quot;&gt;artifacts&lt;/code&gt; del recurso &lt;a href=&quot;https://www.terraform.io/docs/providers/aws/r/codebuild_project.html&quot; target=&quot;_blank&quot;&gt;aws_codebuild_project de Terraform&lt;/a&gt;, el cual puede tener parámetros algunos parámetros si el tipo es &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;CODEPIPELINE&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;NO_ARTIFACTS&lt;/code&gt;. Por ejemplo, si definimos un bloque de la siguiente manera no será fácil la parametrización del mismo:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resource &quot;aws_codebuild_project&quot; &quot;codebuild&quot; {

[...]

  artifacts{
      type           = &quot;${var.codebuild_artifacts_type}&quot;
      location       = &quot;${var.codebuild_artifacts_location}&quot;
      name           = &quot;${var.codebuild_artifacts_name}&quot;
      namespace_type = &quot;${var.codebuild_artifacts_namespace_type}&quot;
      packaging      = &quot;${var.codebuild_artifacts_packaging}&quot;
      path           = &quot;${var.codebuild_artifacts_path}&quot;

  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si por ejemplo intentamos colocar el &lt;code class=&quot;highlighter-rouge&quot;&gt;NO_ARTIFACTS&lt;/code&gt; fallará porque aunque se coloquen valores “vacíos” para el resto de los parámetros, estos argumentos no están soportados. Para resolver esto hay que crear una definición del bloque con &lt;code class=&quot;highlighter-rouge&quot;&gt;locals&lt;/code&gt; según el tipo proporcionado por &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; y usar esto como un índice:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resource &quot;aws_codebuild_project&quot; &quot;codebuild&quot; {

[...]

  artifacts = [&quot;${local.codebuild_artifacts}&quot;]

}

locals {
  codebuild_artifacts_def = {
    &quot;S3&quot; = [{
      type           = &quot;${var.codebuild_artifacts_type}&quot;
      location       = &quot;${var.codebuild_artifacts_location}&quot;
      name           = &quot;${var.codebuild_artifacts_name}&quot;
      namespace_type = &quot;${var.codebuild_artifacts_namespace_type}&quot;
      packaging      = &quot;${var.codebuild_artifacts_packaging}&quot;
      path           = &quot;${var.codebuild_artifacts_path}&quot;
    }]

    &quot;CODEPIPELINE&quot; = [{
      type           = &quot;${var.codebuild_artifacts_type}&quot;
      location       = &quot;${var.codebuild_artifacts_location}&quot;
      name           = &quot;${var.codebuild_artifacts_name}&quot;
      namespace_type = &quot;${var.codebuild_artifacts_namespace_type}&quot;
      packaging      = &quot;${var.codebuild_artifacts_packaging}&quot;
      path           = &quot;${var.codebuild_artifacts_path}&quot;
    }]

    &quot;NO_ARTIFACTS&quot; = [{
      type = &quot;${var.codebuild_artifacts_type}&quot;
    }]
  }

  # Retuned map
  codebuild_artifacts = &quot;${local.codebuild_artifacts_def[var.codebuild_artifacts_type]}&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Esto crea un bloque diferente dependiendo del tipo definido en la variable &lt;code class=&quot;highlighter-rouge&quot;&gt;codebuild_artifacts_type&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;referencias&quot;&gt;Referencias:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.terraform.io/docs/configuration/locals.html&quot; target=&quot;_blank&quot;&gt;locals values de Terraform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cloudposse/terraform-aws-codebuild&quot; target=&quot;_blank&quot;&gt;módulo de la  comunidad de terraform-aws-codebuild&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Terraform" /><summary type="html"></summary></entry><entry><title type="html">Consultando AWS Logs desde la línea de órdenes</title><link href="https://lgallardo.com/es/2018/07/25/awslogs-cli/" rel="alternate" type="text/html" title="Consultando AWS Logs desde la línea de órdenes" /><published>2018-07-19T19:00:00-05:00</published><updated>2018-07-19T19:00:00-05:00</updated><id>https://lgallardo.com/es/2018/07/25/awslogs-from-cli</id><content type="html" xml:base="https://lgallardo.com/es/2018/07/25/awslogs-cli/">&lt;center&gt;&lt;img src=&quot;/images/lambda-logs.jpg&quot; alt=&quot;Lambda logs&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Uno de los desarrolladores de la empresa me preguntó si había forma de ver las bitácoras de las funciones Lambda desde la línea de órdenes, para no tener la necesidad de entrar a la consola de AWS y verlos en CloudWatch Logs.
Después de investigar un poco conseguí un proyecto en Github llamado &lt;a href=&quot;https://github.com/jorgebastida/awslogs&quot; target=&quot;_blank&quot;&gt;awslogs&lt;/a&gt; que hace justamente esto. A continuación veremos cómo instalarlo y usarlo desde un entorno virtual de Python:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virualenv awslogs
source awslogs/bin/activate

pip install awslogs
pip install awscli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lo primero que debemos saber son los grupos donde están definidos los logs de nuestras funciones Lambda, para ello usamos la CLI de AWS:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws logs describe-log-grups --region us-east-1
{
    &quot;logGroups&quot;: [
        {
            &quot;arn&quot;: &quot;arn:aws:logs:us-east-1:123456789123:log-group:/aws/lambda/get_transcription:*&quot;, 
            &quot;creationTime&quot;: 1531834572841, 
            &quot;metricFilterCount&quot;: 0, 
            &quot;logGroupName&quot;: &quot;/aws/lambda/get_transcription&quot;, 
            &quot;storedBytes&quot;: 0
        },
        {
            &quot;arn&quot;: &quot;arn:aws:logs:us-east-1:264349563434:log-group:/aws/lambda/validate_time:*&quot;, 
            &quot;creationTime&quot;: 1532118107128, 
            &quot;metricFilterCount&quot;: 0, 
            &quot;logGroupName&quot;: &quot;/aws/lambda/validate_time&quot;, 
            &quot;storedBytes&quot;: 0
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora para verlos las bitácoras de, por ejemplo, la función &lt;code class=&quot;highlighter-rouge&quot;&gt;get_transcription&lt;/code&gt; desde la línea de órdenes podemos ejecutar:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awslogs get  /aws/lambda/get_transcription --aws-region us-east-1  --watch  | cut -d &quot; &quot; -f 3-20

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y la salida sería algo como esto:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;START RequestId: a2124cb1-818e-11e8-acc8-5bd968ce3fe1 Version: $LATEST
[DEBUG]	2018-07-23T15:39:50.422Z	a2124cb1-818e-11e8-acc8-5bd968ce3fe1	Searching id: e321-eaefe4311ca1
tuple indices must be integers or slices, not str: TypeError
recent call last):
File &quot;/var/task/app/services/get_transcription.py&quot;, line 100, in lambda_handler
  date_text = field['transcription']
indices must be integers or slices, not str
END RequestId: a2124cb1-818e-11e8-acc8-5bd968ce3fe1
REPORT RequestId: a2124cb1-818e-11e8-acc8-5bd968ce3fe1	Duration: 265.66 ms	Billed Duration: 300 ms 	Memory Size: 128 MB	Max Memory Used: 33 MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;referencias&quot;&gt;Referencias:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jorgebastida/awslogs&quot; target=&quot;_blank&quot;&gt;jorgebastida/awslogs&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/apeckham/9bcb464096997c1b0d41&quot; target=&quot;_blank&quot;&gt;View aws lambda logs on the command line&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">echo dot</title><link href="https://lgallardo.com/es/2018/07/20/2018-07-20-echo-dot/" rel="alternate" type="text/html" title="echo dot" /><published>2018-07-19T19:00:00-05:00</published><updated>2018-07-19T19:00:00-05:00</updated><id>https://lgallardo.com/es/2018/07/20/echo-dot</id><content type="html" xml:base="https://lgallardo.com/es/2018/07/20/2018-07-20-echo-dot/">&lt;center&gt;&lt;img src=&quot;/images/echo-dot.jpg&quot; alt=&quot;echo dot&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Como estoy trabajando en algunos proyectos en la empresa con Alexa, me dieron un echo dot.&lt;/p&gt;

&lt;p&gt;Mi idea es revisar las posibilidades que puede proporcionar esta plataforma, y ahora con más razón ya que se anunció que &lt;a href=&quot;https://developer.amazon.com/blogs/alexa/post/843d8579-18a3-4344-8c85-4ae36c400eaa/alexa-skills-kit-and-alexa-voice-service-expand-to-italy-and-spain&quot; target=&quot;_blank&quot;&gt;viene el soporte para español a finales de este año&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Otra de las cosas que estoy revisando están relacionadas con el &lt;a href=&quot;https://developer.amazon.com/blogs/alexa/post/3a8f27f3-d724-4e0b-bc72-0dcddd0b2eab/announcing-an-easier-way-to-build-alexa-skills-using-python&quot; target=&quot;_blank&quot;&gt;SDK de Python&lt;/a&gt;, el cual sacaron recientemente en beta.&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Alexa" /><category term="echo" /><summary type="html"></summary></entry><entry><title type="html">A Cloud Guru Member</title><link href="https://lgallardo.com/es/2018/07/15/2018-07-15-acloudguru-member/" rel="alternate" type="text/html" title="A Cloud Guru Member" /><published>2018-07-14T19:00:00-05:00</published><updated>2018-07-14T19:00:00-05:00</updated><id>https://lgallardo.com/es/2018/07/15/acloud-guru-member</id><content type="html" xml:base="https://lgallardo.com/es/2018/07/15/2018-07-15-acloudguru-member/">&lt;center&gt;&lt;img src=&quot;/images/acloudguru-member.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;585&quot; height=&quot;807&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Esta semana me llegó mi camisa y etiquetas de la gente de A Cloud. ¿Cómo obtuve estos artículos? Me hice con la membresía anual y ahora tengo acceso a todo sus cursos, y ahora puedo disfrutar de estos regalos :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Referencia:&lt;/strong&gt; &lt;a href=&quot;https://acloud.guru/membership&quot; target=&quot;_blank&quot;&gt;A Cloud Guru - Become a member&lt;/a&gt;&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">AWS Certified Developer - Associate</title><link href="https://lgallardo.com/es/2018/07/13/2018-07-13-aws-certified-developer-associate/" rel="alternate" type="text/html" title="AWS Certified Developer - Associate" /><published>2018-07-12T19:00:00-05:00</published><updated>2018-07-12T19:00:00-05:00</updated><id>https://lgallardo.com/es/2018/07/13/aws-certified-developer-associate</id><content type="html" xml:base="https://lgallardo.com/es/2018/07/13/2018-07-13-aws-certified-developer-associate/">&lt;center&gt;&lt;img src=&quot;/images/AWS_Certified_Developer_Associate_certificate.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;El mes pasado aprobé la certificación &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certified  Developer- Associate&lt;/code&gt; quería dejar mis comentarios respecto al examen:&lt;/p&gt;

&lt;p&gt;Fueron 55 preguntas para responder en 80 minutos. Este es el examen más fácil de todos, pero debes estudiar y saber las tecnología de AWS y cuándo usarlas desde la perspectiva del programador. El examen tiene dos grandes tópicos: DynamoDB and SQS.&lt;/p&gt;

&lt;h1 id=&quot;dynamodb&quot;&gt;DynamoDB&lt;/h1&gt;
&lt;p&gt;Ve preparado para hacer los cálculos de Read y Write Throughput capacity casi con los ojos cerrados porque si o si va para el examen, también debes saber los límites del servicio como por ejemplo cuántos indices están permitidos por tabla, número de tablas por región, etc. También la diferencia entre Scan y Query, así como la mejor manera de agrupar los datos en las tablas para que no afecte el throughput. Diferencia entre LSI y GSI, así como saber los conceptos de primary, hash y sort keys. Seguro preguntan qué hacen los comandos GetItem, GetBatchItem, y cuáles comandos afectan el read o write throughput. Hay que saber la diferencia entre strong y eventually consistency.&lt;/p&gt;

&lt;h1 id=&quot;sqs&quot;&gt;SQS&lt;/h1&gt;
&lt;p&gt;Hay que saber la diferencia entre delay y visibility timeouts, y saber los valores límites y por omisión de long polling, retención, visibility y delay. También es importante saber la diferencia entre long y short polling. Otra cosa que debes saber son los comandos API para, por ejemplo, cambiar el valor de visibility.&lt;/p&gt;

&lt;h1 id=&quot;lo-demás&quot;&gt;Lo demás&lt;/h1&gt;
&lt;p&gt;El resto del examen se pasea por nociones básica de AWS, tales como VPC, NAT instances, SGs, NACL, ELBs, etc.&lt;/p&gt;

&lt;h1 id=&quot;mis-recomendaciones-para-ganar-tiempo-en-este-examen-son&quot;&gt;Mis recomendaciones para ganar tiempo en este examen son:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Las preguntas fáciles respóndelas rápidamente, no te quedes mucho tiempo pensando en si es la respuesta correcta porque seguro lo es.&lt;/li&gt;
  &lt;li&gt;Solo marcar las preguntas en las que realmente tienes dudas, así al momento de revisarlas puedes enfocarte en solo esas y si queda tiempo empezar a revisar el resto&lt;/li&gt;
  &lt;li&gt;Piensen que es una certificación de Amazon, en ese sentido siempre preguntarse cuál servicio de Amazon corresponde.&lt;/li&gt;
  &lt;li&gt;Descartar cosas que se pueden hacer a nivel de S.O. si un servicio de Amazon lo provee, y solo considerarlo cuando no hay mas opción.&lt;/li&gt;
  &lt;li&gt;Siempre que lean scalable piensen en SQS/DynamoDB, cost-saving = S3/S3 RRS, y así.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si estás interesado en esta certificación te recomiendo algunos enlaces:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cursos en línea&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://linuxacademy.com&quot; target=&quot;_blank&quot;&gt;Linux Academy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/aws-certified-sysops-administrator-associate&quot; target=&quot;_blank&quot;&gt;A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloudacademy.com/aws-certifications-training/&quot; target=&quot;_blank&quot;&gt;Cloud Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Documentación de AWS&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/whitepapers/&quot; target=&quot;_blank&quot;&gt;Whitepapers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/documentation/&quot; target=&quot;_blank&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/faqs/&quot; target=&quot;_blank&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">AWS Certified SysOps Administrator - Associate</title><link href="https://lgallardo.com/es/2018/05/25/2017-12-29-aws-certified-sysops-administrator-associate/" rel="alternate" type="text/html" title="AWS Certified SysOps Administrator - Associate" /><published>2018-05-24T19:00:00-05:00</published><updated>2018-05-24T19:00:00-05:00</updated><id>https://lgallardo.com/es/2018/05/25/aws-certified-sysops-administrator-associate</id><content type="html" xml:base="https://lgallardo.com/es/2018/05/25/2017-12-29-aws-certified-sysops-administrator-associate/">&lt;center&gt;&lt;img src=&quot;/images/AWS_Certified_SysOps_Administrator_Associate_certificate.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Recientemente aprobé la certificación &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certified SysOps Administrator - Associate&lt;/code&gt; y quería dejar mis comentarios respecto al examen:&lt;/p&gt;

&lt;p&gt;Fueron 55 preguntas para responder en 80 minutos. En general examen no es difícil si conoces las tecnologías de AWS y sabes cuándo aplicarlas. Al ser el nuevo modelo de examen no me apareció nada relacionado con SQS pero si de AWS Config, AWS Inspector y AWS System Manager por lo que es buena idea saber esos servicios.&lt;/p&gt;

&lt;p&gt;Mis recomendaciones para ganar tiempo en este examen son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Las preguntas fáciles respóndelas rápidamente, no te quedes mucho tiempo pensando en si es la respuesta correcta porque seguro lo es.&lt;/li&gt;
  &lt;li&gt;Solo marcar las preguntas en las que realmente tienes dudas, así al momento de revisarlas puedes enfocarte en solo esas y si queda tiempo empezar a revisar el resto&lt;/li&gt;
  &lt;li&gt;Piensen que es una certificación de Amazon, en ese sentido siempre preguntarse cuál servicio de Amazon corresponde.&lt;/li&gt;
  &lt;li&gt;Descartar cosas que se pueden hacer a nivel de S.O. si un servicio de Amazon lo provee, y solo considerarlo cuando no hay mas opción.&lt;/li&gt;
  &lt;li&gt;Siempre que lean scalable piensen en SQS/DynamoDB, cost-saving = S3/S3 RRS, y así.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si estás interesado en esta certificación te recomiendo algunos enlaces:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cursos en línea&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://linuxacademy.com&quot; target=&quot;_blank&quot;&gt;Linux Academy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/aws-certified-sysops-administrator-associate&quot; target=&quot;_blank&quot;&gt;A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloudacademy.com/aws-certifications-training/&quot; target=&quot;_blank&quot;&gt;Cloud Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Documentación de AWS&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/whitepapers/&quot; target=&quot;_blank&quot;&gt;Whitepapers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/documentation/&quot; target=&quot;_blank&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/faqs/&quot; target=&quot;_blank&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">Usando ASG Lifecycle hooks para disparar funciones Lambda</title><link href="https://lgallardo.com/es/2018/05/04/asg-lifcecyle-hooks/" rel="alternate" type="text/html" title="Usando ASG Lifecycle hooks para disparar funciones Lambda" /><published>2018-05-03T19:00:55-05:00</published><updated>2018-05-03T19:00:55-05:00</updated><id>https://lgallardo.com/es/2018/05/04/lifecycle-hooks-lambda</id><content type="html" xml:base="https://lgallardo.com/es/2018/05/04/asg-lifcecyle-hooks/">&lt;center&gt;
&lt;img alt=&quot;AWS ASG Lifecycle hooks&quot; src=&quot;/images/lifecycle_hooks.jpg&quot; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Recientemente necesitaba ejecutar algunas acciones después que una instancia EC2 fuese creada por una Auto Scaling Group. Al principio pensé en usar el userdata pero necesitaba crear unas alarmas en CloudWatch basadas en la misma instancia, y estas alarmas debían ser creadas dinámicamente como se hacían previamente con Terraform.&lt;/p&gt;

&lt;h1 id=&quot;lifecycle-hooks&quot;&gt;Lifecycle hooks&lt;/h1&gt;

&lt;p&gt;Los Auto Scaling Groups tienen &lt;em&gt;Lifecycle hooks&lt;/em&gt; que puedes usar para disparar funciones lambdas al momento de iniciar o terminar una instancia para ejecutar acciones basadas en los datos contenidos en estos Lifecycle hooks. Por ejemplo puedes crear una regla de CloudWatch para usar el mensaje del evento y obtener la identificación de la instancia o el campo metadata del lifecycle hook. Un ejemplo de cómo luce este mensaje se muestra a continuación:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;EC2InstanceId&quot;: &quot;i-0030f3ac294a5764a&quot;,
    &quot;AutoScalingGroupName&quot;: &quot;sync-service&quot;,
    &quot;LifecycleActionToken&quot;: &quot;802cc943-c45a-c8c8-b25d-111222333440&quot;,
    &quot;LifecycleHookName&quot;: &quot;sync-service-StatusCheckFailed-0-launching-hook&quot;,
    &quot;NotificationMetadata&quot;: {
        &quot;EvaluationPeriods&quot;: 5,
        &quot;Missing_data&quot;: &quot;breaching&quot;,
        &quot;AlarmActions&quot;: &quot;arn:aws:sns:us-east-1:111111111111:sns-topic&quot;,
        &quot;AlarmDescription&quot;: &quot;The instance has not passed both instance and system status checks&quot;,
        &quot;Namespace&quot;: &quot;AWS/EC2&quot;,
        &quot;Period&quot;: 60,
        &quot;ComparisonOperator&quot;: &quot;GreaterThanThreshold&quot;,
        &quot;AlarmName&quot;: &quot;sync-status-check&quot;,
        &quot;Statistic&quot;: &quot;Average&quot;,
        &quot;Threshold&quot;: 0,
        &quot;MetricName&quot;: &quot;StatusCheckFailed&quot;
    },
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Aquí &lt;em&gt;NotificationMetadata&lt;/em&gt; contiene un JSON con la definición de la alarma la cual será consumida por la función lambda para crearla.&lt;/p&gt;

&lt;h1 id=&quot;disparando-la-función-lambda-usando-un-evento-de-cloudwatch&quot;&gt;Disparando la función lambda usando un evento de CloudWatch&lt;/h1&gt;

&lt;p&gt;Puedes hacer que CloudWatch responda a eventos del Auto Scaling Group y disparar un función lambda para pasar el mensaje.&lt;/p&gt;

&lt;center&gt;
&lt;img alt=&quot;AWS Lambda console&quot; src=&quot;/images/asg_create_alarms_lambda_console.jpg&quot; /&gt;
&lt;/center&gt;

&lt;h1 id=&quot;función-lambda&quot;&gt;Función Lambda&lt;/h1&gt;

&lt;p&gt;Aquí coloco un ejemplo de la función lambda que obtiene el id de la instancia y el campo metadata del lifecycle:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;logging&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Create AWS clients&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cloudwatch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLevel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Retrieves instance id from CloudWatch event&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_instance_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'detail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'EC2InstanceId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'detail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'NotificationMetadata'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lambda_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;instanceid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_instance_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;instance-id: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instanceid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;metadata: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Create Metric&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put_metric_alarm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AlarmName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'AlarmName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instanceid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AlarmDescription&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'AlarmDescription'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ActionsEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AlarmActions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'AlarmActions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MetricName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MetricName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Namespace'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Statistic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Statistic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Dimensions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'InstanceId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'Value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instanceid&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Period&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Period'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EvaluationPeriods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'EvaluationPeriods'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Threshold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Threshold'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TreatMissingData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Missing_data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ComparisonOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ComparisonOperator'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;iam-roles-y-policies&quot;&gt;IAM Roles y Policies&lt;/h1&gt;
&lt;p&gt;Recuerda crear el ROLE y adjuntarle las policies necesarias a to función lambda.&lt;/p&gt;

&lt;h1 id=&quot;referencias&quot;&gt;Referencias:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/compute/using-aws-lambda-with-auto-scaling-lifecycle-hooks/&quot; target=&quot;_blank&quot;&gt;Using AWS Lambda with Auto Scaling Lifecycle Hooks&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/aws-samples/aws-lambda-lifecycle-hooks-function&quot; target=&quot;_blank&quot;&gt;aws-lambda-lifecycle-hooks-function&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/autoscaling/ec2/userguide/cloud-watch-events.html&quot; target=&quot;_blank&quot;&gt;Getting CloudWatch Events When Your Auto Scaling Group Scales&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/thigley986/Lambda-AWS-Automated-Alarm-Creation&quot; target=&quot;_blank&quot;&gt;Lambda-AWS-Automated-Alarm-Creation&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry></feed>
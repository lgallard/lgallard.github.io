<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.6.0">Jekyll</generator><link href="https://lgallardo.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lgallardo.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2019-04-19T01:04:23-05:00</updated><id>https://lgallardo.com/</id><title type="html">lgallardo.com</title><subtitle></subtitle><author><name>Luis M. Gallardo D.</name></author><entry><title type="html">AWS Certified Alexa Skill Builder - Specialty</title><link href="https://lgallardo.com/2019/04/19/2019-04-19-aws-certified-alexa-skill-builder-specialty/" rel="alternate" type="text/html" title="AWS Certified Alexa Skill Builder - Specialty" /><published>2019-04-18T19:00:00-05:00</published><updated>2019-04-18T19:00:00-05:00</updated><id>https://lgallardo.com/2019/04/19/aws-certified-alexa-skill-builder-specialty</id><content type="html" xml:base="https://lgallardo.com/2019/04/19/2019-04-19-aws-certified-alexa-skill-builder-specialty/">&lt;center&gt;&lt;img src=&quot;/images/AWS_Certified_Alexa_Skill_Builder_Specialty.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In January I took the beta test for &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certified Alexa Skill Builder Specialty&lt;/code&gt; and yesterday I got the results. I had been programming Alexa Skills and when I saw the blueprint of the exam it caught my attention that a lot of the content I already knew in one way or another.&lt;/p&gt;

&lt;p&gt;There were 80 questions to answer in 170 minutes, similar to a Professional exam.&lt;/p&gt;

&lt;h2 id=&quot;how-did-i-prepare&quot;&gt;How did I prepare?&lt;/h2&gt;

&lt;p&gt;Unlike other exams that I had already taken, the preparation for this was different, since being a beta test there was no course or didactic material focused this certification.&lt;/p&gt;

&lt;p&gt;Before knowing the existence of the beta test I was already experimenting with Alexa, and in fact I checked some videos from &lt;code class=&quot;highlighter-rouge&quot;&gt;A Cloud Guru&lt;/code&gt; , like &lt;a href=&quot;https://acloud.guru/learn/intro-alexa-free&quot; target=&quot;_blank&quot;&gt;Introduction to Alexa&lt;/a&gt;, that although it is good to start is very basic since they only take the examples that are obtained in the git repositories of AWS, modifying only a couple of things in the code.&lt;/p&gt;

&lt;p&gt;I had also followed the series of videos &lt;a href=&quot;https://acloud.guru/series/alexa-devs&quot; target=&quot;_blank&quot;&gt;Alexa Devs&lt;/a&gt;, which has more content than the introductory course, here is more specific information such as the management of videos and screens.&lt;/p&gt;

&lt;h2 id=&quot;but-what-to-study&quot;&gt;But what to study?&lt;/h2&gt;

&lt;p&gt;You have to be very familiar with the contents of the blueprint they provide when registering for the exam:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Domain&lt;/th&gt;
      &lt;th&gt;% of Examination&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 1: Voice-First Design Practices and Capabilities&lt;/td&gt;
      &lt;td&gt;14%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 2: Skill Design&lt;/td&gt;
      &lt;td&gt;24%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 3: Skill Architecture&lt;/td&gt;
      &lt;td&gt;14%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 4: Skill Development&lt;/td&gt;
      &lt;td&gt;20%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 5: Test, Validate, and Troubleshoot&lt;/td&gt;
      &lt;td&gt;%18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Domain 6: Publishing, Operations, and Lifecycle Management&lt;/td&gt;
      &lt;td&gt;10%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;100%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;On the other hand I also recommend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Know the request / response JSON well.&lt;/li&gt;
  &lt;li&gt;Understand how the Beta tester program works&lt;/li&gt;
  &lt;li&gt;Know how to persist data in a session and among sessions&lt;/li&gt;
  &lt;li&gt;Know the different interaction models and what intents are provided by default&lt;/li&gt;
  &lt;li&gt;Understand the Standard Built-in Intents&lt;/li&gt;
  &lt;li&gt;Know the AWS backend services, i.e., Lambda, DynamoDB, S3&lt;/li&gt;
  &lt;li&gt;Know how to grant permission to Lambda functions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;extra-tip&quot;&gt;Extra tip&lt;/h2&gt;

&lt;p&gt;Being a specialization, many of the questions are long and confusing, so I recommend that when you read the question &lt;code class=&quot;highlighter-rouge&quot;&gt;Alexa Skill Builder&lt;/code&gt; you replace it in your mind with&lt;code class=&quot;highlighter-rouge&quot;&gt; Developer&lt;/code&gt;, since it sounds very strange when you read something like “An Alexa Skill Builder builds a skill … “&lt;/p&gt;

&lt;h2 id=&quot;my-recommendations-for-saving-time-on-this-exam-are&quot;&gt;My recommendations for saving time on this exam are:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Answer the easy question quick, don’t stay long thing whether is right answer because probably it is.&lt;/li&gt;
  &lt;li&gt;Only mark for review those question where you really have a doubt, so you can check them later and if there’s time left be able to review them all.&lt;/li&gt;
  &lt;li&gt;Think it is a Amazon certification and in that matter always wonder what Amazon service to use.&lt;/li&gt;
  &lt;li&gt;Take into account that it’s a Amazon certification and in that matter always think what Amazon service to use.&lt;/li&gt;
  &lt;li&gt;Discard things that can be done at the OS level if an Amazon service provides it, and only consider it when there is no other option.&lt;/li&gt;
  &lt;li&gt;Whenever you read scalable think of SQS / DynamoDB, cost-saving = S3 / S3 RRS, and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are interested in this certification I recommend some links:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Online curse&lt;/strong&gt;
}&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/intro-alexa-free&quot; target=&quot;_blank&quot;&gt;Introduction to Alexa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/series/alexa-devs&quot; target=&quot;_blank&quot;&gt;Alexa Devs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;AWS Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/whitepapers/&quot; target=&quot;_blank&quot;&gt;Whitepapers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/documentation/&quot; target=&quot;_blank&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/faqs/&quot; target=&quot;_blank&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">Pyenv to the rescue</title><link href="https://lgallardo.com/2019/02/26/pyenv-to-the-rescue" rel="alternate" type="text/html" title="Pyenv to the rescue" /><published>2019-02-25T18:00:00-06:00</published><updated>2019-02-25T18:00:00-06:00</updated><id>https://lgallardo.com/2019/02/26/pyenv-to-the-rescue</id><content type="html" xml:base="https://lgallardo.com/2019/02/26/pyenv-to-the-rescue">&lt;center&gt;&lt;img src=&quot;/images/Python-logo-150.jpg&quot; alt=&quot;Python&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-problem&quot;&gt;The problem&lt;/h1&gt;

&lt;p&gt;I recently switched to &lt;em&gt;Debian testing&lt;/em&gt; again so as to be able to use Python 3.6 among other things. I started working with this version, creating my Lambda Layers and everything was fine until &lt;em&gt;Debian testing&lt;/em&gt; switched to Python 3.7. Well, I told myself, there is no drama, using &lt;code class=&quot;highlighter-rouge&quot;&gt;alternative&lt;/code&gt; I can switch versions of Python smoothly or set  &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv&lt;/code&gt; to use one interpreter or another.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:~# update-alternatives --config python
There are 3 choices for the alternative python (providing /usr/bin/python).

  Selection    Path                Priority   Status
------------------------------------------------------------
  0            /usr/bin/python3.6   3         auto mode
  1            /usr/bin/python2     1         manual mode
  2            /usr/bin/python3     2         manual mode
* 3            /usr/bin/python3.6   3         manual mode

Press &amp;lt;enter&amp;gt; to keep the current choice[*], or type selection number: 3

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But even using &lt;code class=&quot;highlighter-rouge&quot;&gt;alternative&lt;/code&gt; or forcing the interpreter to use Python 3.6 it seems there is always something pointing to Python 3.7:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ virtualenv -p /usr/bin/python3.6 test
Running virtualenv with interpreter /usr/bin/python3.6
Traceback (most recent call last):
  File &quot;/home/lgallard/.local/lib/python3.7/site-packages/virtualenv.py&quot;, line 22, in &amp;lt;module&amp;gt;
    import distutils.spawn
ModuleNotFoundError: No module named 'distutils.spawn'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;pyenv-to-the-rescue&quot;&gt;pyenv to the rescue&lt;/h1&gt;

&lt;p&gt;There is a version manager of Python called &lt;a href=&quot;https://github.com/pyenv/pyenv#choosing-the-python-version&quot; target=&quot;_blank&quot;&gt;pyenv&lt;/a&gt; which allows you to configure the environment to use both locally and globally.&lt;/p&gt;

&lt;p&gt;For example, to install Python version 3.6.8 just do&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv install 3.6.8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can verify the versions as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv versions
  system
* 3.6.8 (set by /home/lgallard/.pyenv/version)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then to use the version installed with pyenv, just pass the path:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ virtualenv -p ~/.pyenv/versions/3.6.8/bin/python test
Running virtualenv with interpreter /home/lgallard/.pyenv/versions/3.6.8/bin/python
Using base prefix '/home/lgallard/.pyenv/versions/3.6.8'
New python executable in /home/lgallard/test/bin/python
Installing setuptools, pip, wheel...
done.

./test/bin/python --version
Python 3.6.8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way I was able to keep using the specific Python version I needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pyenv/pyenv#choosing-the-python-version&quot; target=&quot;_blank&quot;&gt;pyenv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/23842713/using-python-3-in-virtualenv&quot; target=&quot;_blank&quot;&gt;Using Python 3 in virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="Python" /><summary type="html"></summary></entry><entry><title type="html">Using Alexa ASK SDK from Lambda Layers</title><link href="https://lgallardo.com/2018/12/04/using-alexa-ask-from-lambda-layers" rel="alternate" type="text/html" title="Using Alexa ASK SDK from Lambda Layers" /><published>2018-12-03T18:00:00-06:00</published><updated>2018-12-03T18:00:00-06:00</updated><id>https://lgallardo.com/2018/12/04/using-alexa-ask-from-lambda-layers</id><content type="html" xml:base="https://lgallardo.com/2018/12/04/using-alexa-ask-from-lambda-layers">&lt;center&gt;&lt;img src=&quot;/images/alexa_lambda_layers.jpg&quot; alt=&quot;Alexa + lambda + Layers&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;lambda-layers&quot;&gt;Lambda Layers&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html&quot; target=&quot;_blank&quot;&gt;Lambda Layers&lt;/a&gt; was recently incorporated into AWS, which basically allows you to share libraries and codes between Lambda functions. This makes it possible to speed up development since now it is not necessary to pack all libraries with the Lambda function, as we used to do with Alexa’s ASK, but now these libraries can be uploaded independently in Lambda Layers and used directly in our functions.&lt;/p&gt;

&lt;h1 id=&quot;alexas-ask-sdk&quot;&gt;Alexa’s ASK SDK&lt;/h1&gt;
&lt;p&gt;To prepare Alexa’s ASK for Lambda Layers we can follow the following steps:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virtualenv python
source python/bin/activate
pip install ask-sdk
zip -r ask-sdk.zip python/lib/python3.6/site-packages/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can use the Alexa’s ASK SDK from your lambda functions without having to upload it in each deployment.&lt;/p&gt;

&lt;h1 id=&quot;uploading-the-ask-sdk-to-lambda-layers&quot;&gt;Uploading the ASK SDK to Lambda Layers&lt;/h1&gt;

&lt;p&gt;The first thing we must do is to create the Lambda Layers from the console:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/create_layer.jpg&quot; alt=&quot;Create Layer&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Then you must fill out the form and select the .zip that you created to upload it, and finally you must indicate the runtime with which it is compatible.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/ask_sdk_lambda_layer.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Once created, we can see the description and the version:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/ask_sdk_lambda_layer2.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-include-the-ask-sdk-from-lambda-layers&quot;&gt;How to include the ASK SDK from Lambda Layers?&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Got to your Lambda function and right under yout function name you can click on &lt;strong&gt;&lt;em&gt;Layers&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;From the below section &lt;strong&gt;&lt;em&gt;Referenced layers&lt;/em&gt;&lt;/strong&gt; click on the &lt;strong&gt;&lt;em&gt;Add a layer&lt;/em&gt;&lt;/strong&gt; button&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer1.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Select the &lt;strong&gt;&lt;em&gt;ask-sdk&lt;/em&gt;&lt;/strong&gt; layer from the drop-down menu, and click on &lt;strong&gt;&lt;em&gt;Add&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer2.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;As you can see below, the Lambda Layer with the Alexa’s ASK SDK can now be used in this Lambda function:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/add_layer3.jpg&quot; alt=&quot;Add SDK&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can select this same Layer for other Lambda functions that use the same ASK SDK and runtime without having to be uploading it in each deployment.&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Alexa" /><category term="Lambda" /><category term="Layers" /><summary type="html"></summary></entry><entry><title type="html">AWS CodePipeline with Bitbucket</title><link href="https://lgallardo.com/2018/09/07/codepipeline-bitbucket" rel="alternate" type="text/html" title="AWS CodePipeline with Bitbucket" /><published>2018-09-06T19:00:00-05:00</published><updated>2018-09-06T19:00:00-05:00</updated><id>https://lgallardo.com/2018/09/07/codepipeline-bitbucket</id><content type="html" xml:base="https://lgallardo.com/2018/09/07/codepipeline-bitbucket">&lt;center&gt;&lt;img src=&quot;/images/CodePipeline_bitbucket.jpg&quot; alt=&quot;AWS CodePipeline and Bitbucket&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;At work I needed to deploy an application using AWS CodePipeline but the repository where the code is located is in Bitbucket. This was an inconvenient task because AWS Pipeline does not support Bitbucket, as does AWS Codebuild.&lt;/p&gt;

&lt;p&gt;If you do some research on the internet, you can find alternative solutions to this problem, such as having a webhook in the repository that calls a lambda function and generates a file in a bucket and this is the trigger for AWS CodePipeline [1]. Another possible solution is to use Bitbucket Pipelines to create the object to be placed in the bucket, or even mirror the contents of the Bitbucket repository in AWS CodeCommit.&lt;/p&gt;

&lt;p&gt;Because these workarounds didn’t convince me, I was thinking about a solution where everything was left on AWS and that I didn’t have to configure repositories, and the key was the support that if AWS CodeBuild has Bitbucket. So instead of using the Bitbucket’s pipelines to generate the source of AWS CodePipeline, with AWS CodeBuild I generate a zip file with the source code of the application which is then used as input.&lt;/p&gt;

&lt;p&gt;In particular this application is a Docker image that is generated with AWS CodeBuild and then saved in AWS ECR. This CodeBuild generates as output artifact the definition of the ECS task, which is taken as input in the ECS deployment face, updating the service and therefore the application:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/aws_codepipeline_succeded.jpg&quot; alt=&quot;AWS Codebuild trigger&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;not-everything-is-perfect&quot;&gt;Not everything is perfect.&lt;/h1&gt;

&lt;p&gt;I list a few things to consider with this solution:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;For CodeBuild to access private Bitbucket repositories, you must authenticate with a user from the AWS web console. If you are considering how to create this release, consider using a service account that has read-only access to the repository.&lt;/li&gt;
  &lt;li&gt;The AWS CodeBuild project trigger will not run automatically when you update the repository, so you need to start the project. If you want this to be automatic or as close as possible, you can set up a scheduled task in your project:&lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;img src=&quot;/images/aws_codebuild_trigger.jpg&quot; alt=&quot;AWS Codebuild trigger&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&quot;https://aws.amazon.com/blogs/devops/integrating-git-with-aws-codepipeline/&quot; target=&quot;_blank&quot;&gt;Integrating Git with AWS CodePipeline&lt;/a&gt;&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Codebuild" /><category term="CodePipeline" /><category term="Bitbucket" /><summary type="html"></summary></entry><entry><title type="html">AWS Certified DevOps Engineer - Professional</title><link href="https://lgallardo.com/2018/08/12/aws-certified-devops-engineer-professional" rel="alternate" type="text/html" title="AWS Certified DevOps Engineer - Professional" /><published>2018-08-11T19:00:00-05:00</published><updated>2018-08-11T19:00:00-05:00</updated><id>https://lgallardo.com/2018/08/12/aws-certified-devops-engineer-professional</id><content type="html" xml:base="https://lgallardo.com/2018/08/12/aws-certified-devops-engineer-professional">&lt;center&gt;&lt;img src=&quot;/images/AWS_Certified_DevOps_Engineer_Professional.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I recently approved the &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certified DevOps Engineer - Professional&lt;/code&gt; certification and wanted to leave my comments on the exam:&lt;/p&gt;

&lt;p&gt;It was 80 questions to answer in 170 minutes. This exam is the most difficult because you need to know about the previous contents of Developer and SysOps certifications. You generally need to know AWS technology and when to use it from the DevOps perspective for deploying applications on AWS. In particular, the key topics here are CloudFormation, OpsWorks, Elastic Beanstalk and Auto Scaling Groups.&lt;/p&gt;

&lt;h1 id=&quot;cloudformation&quot;&gt;CloudFormation&lt;/h1&gt;
&lt;p&gt;At a minimum, you should know how a CloudFormation template is composed, how to update a stack, how to prevent it from being updated, difference between WaitCondition and Creation Policy, how to rolling update ASGs, resource types.&lt;/p&gt;

&lt;h1 id=&quot;opsworks&quot;&gt;OpsWorks&lt;/h1&gt;
&lt;p&gt;Here you should be clear about the concepts of Stack, Layer, and Application. Knowing what Lyfecyles events are and how or when they run. It is of the utmost importance to know the “deployment” command and to note that it is not only useful for deploying applications. It’s also important to remember that with OpsWorks you can add existing infrastructure to stacks (which you can’t do in CloudFormation or Elastic Beanstalk) and that you can only associate one RDS instance per stack.&lt;/p&gt;

&lt;h1 id=&quot;elastic-beanstalk&quot;&gt;Elastic Beanstalk&lt;/h1&gt;
&lt;p&gt;Understand the use cases of the service, remember that you can use Docker in EB, so you can practically run anything in containers. Learn how to create settings from the .ebextenstions, as well as how to save settings and precedence between different ways to do so. Important that you know the types of deployment that you can perform with EB, and in particular that it is one of those that allows you to make Blue/Green deployments integrated into the service, but that on the contrary you must use Route 53 if you want to make an A/B deployment.&lt;/p&gt;

&lt;h1 id=&quot;auto-scaling-groups&quot;&gt;Auto Scaling Groups&lt;/h1&gt;
&lt;p&gt;Regarding Auto Scaling Groups you should know the Termination policies, and which ones are useful for deploying applications. Studies Lifecycle Hooks and in particular all states through which an instance passes, and use cases when it is in &lt;code class=&quot;highlighter-rouge&quot;&gt;pending: wait&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;terminating: wait&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;the-remaining&quot;&gt;The remaining&lt;/h1&gt;
&lt;p&gt;The rest of the exam focuses on evaluating your knowledge of deployment types on AWS, as well as topics for Developer and SysOps certifications, such as DynamoDB or CloudWatch.&lt;/p&gt;

&lt;h1 id=&quot;my-tips-for-saving-time-on-this-exam-are&quot;&gt;My tips for saving time on this exam are:&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Answer the easy question quick, don’t stay long thing whether is right answer because probably it is.&lt;/li&gt;
  &lt;li&gt;Only mark for review those question where you really have a doubt, so you can check them later and if there’s time left be able to review them all.&lt;/li&gt;
  &lt;li&gt;Think it is a Amazon certification and in that matter always wonder what Amazon service to use.&lt;/li&gt;
  &lt;li&gt;Take into account that it’s a Amazon certification and in that matter always think what Amazon service to use.&lt;/li&gt;
  &lt;li&gt;Discard things that can be done at the OS level if an Amazon service provides it, and only consider it when there is no other option.&lt;/li&gt;
  &lt;li&gt;Whenever you read scalable think of SQS / DynamoDB, cost-saving = S3 / S3 RRS, and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are interested in this certification and I recommend you some links:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Online courses&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://linuxacademy.com&quot; target=&quot;_blank&quot;&gt;Linux Academy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/aws-certified-devops-engineer-professional&quot; target=&quot;_blank&quot;&gt;A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloudacademy.com/aws-certifications-training/&quot; target=&quot;_blank&quot;&gt;Cloud Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Documentación de AWS&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/whitepapers/&quot; target=&quot;_blank&quot;&gt;Whitepapers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/documentation/&quot; target=&quot;_blank&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/faqs/&quot; target=&quot;_blank&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">Dynamic configuration blocks in Terraform</title><link href="https://lgallardo.com/2018/07/30/dynamic-configuration-blocks-in-terraform/" rel="alternate" type="text/html" title="Dynamic configuration blocks in Terraform" /><published>2018-07-29T19:00:00-05:00</published><updated>2018-07-29T19:00:00-05:00</updated><id>https://lgallardo.com/2018/07/30/dynamic-configuration-blocks-in-terraform</id><content type="html" xml:base="https://lgallardo.com/2018/07/30/dynamic-configuration-blocks-in-terraform/">&lt;center&gt;&lt;img src=&quot;/images/terraform.jpg&quot; alt=&quot;Terraform&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;One of the things I had to resolve was the fact that in Terraform there are configuration blocks that, depending on the options may have different parameters or may not even accept the same parameters.&lt;/p&gt;

&lt;p&gt;To do that, and by following a code from a &lt;a href=&quot;https://github.com/cloudposse/terraform-aws-codebuild&quot; target=&quot;_blank&quot;&gt;community module&lt;/a&gt;, I managed to overcome this problem using &lt;a href=&quot;https://www.terraform.io/docs/configuration/locals.html&quot; target=&quot;_blank&quot;&gt;Terraform’s locals values&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Taking an example of this we have the &lt;code class=&quot;highlighter-rouge&quot;&gt;artifacts&lt;/code&gt; block of the &lt;a href=&quot;https://www.terraform.io/docs/providers/aws/r/codebuild_project.html&quot;&gt;Terraform aws_codebuild_project resource&lt;/a&gt;, which may have some parameters if the type is &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;CODEPIPELINE&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;NO_ARTIFACTS&lt;/code&gt;. For example, if you define a block as follows, it will not be easy to parameterize it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resource &quot;aws_codebuild_project&quot; &quot;codebuild&quot; {

[...]

  artifacts{
      type           = &quot;${var.codebuild_artifacts_type}&quot;
      location       = &quot;${var.codebuild_artifacts_location}&quot;
      name           = &quot;${var.codebuild_artifacts_name}&quot;
      namespace_type = &quot;${var.codebuild_artifacts_namespace_type}&quot;
      packaging      = &quot;${var.codebuild_artifacts_packaging}&quot;
      path           = &quot;${var.codebuild_artifacts_path}&quot;

  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we try to place the &lt;code class=&quot;highlighter-rouge&quot;&gt;NO_ARTIFACTS&lt;/code&gt;, for example, it will fail because even if “empty” values are placed for the other parameters, these arguments are not supported. To resolve this you have to create a block definition with &lt;code class=&quot;highlighter-rouge&quot;&gt;locals&lt;/code&gt; according to the type provided by &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; and use this as an index:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resource &quot;aws_codebuild_project&quot; &quot;codebuild&quot; {

[...]

  artifacts = [&quot;${local.codebuild_artifacts}&quot;]

}

locals {
  codebuild_artifacts_def = {
    &quot;S3&quot; = [{
      type           = &quot;${var.codebuild_artifacts_type}&quot;
      location       = &quot;${var.codebuild_artifacts_location}&quot;
      name           = &quot;${var.codebuild_artifacts_name}&quot;
      namespace_type = &quot;${var.codebuild_artifacts_namespace_type}&quot;
      packaging      = &quot;${var.codebuild_artifacts_packaging}&quot;
      path           = &quot;${var.codebuild_artifacts_path}&quot;
    }]

    &quot;CODEPIPELINE&quot; = [{
      type           = &quot;${var.codebuild_artifacts_type}&quot;
      location       = &quot;${var.codebuild_artifacts_location}&quot;
      name           = &quot;${var.codebuild_artifacts_name}&quot;
      namespace_type = &quot;${var.codebuild_artifacts_namespace_type}&quot;
      packaging      = &quot;${var.codebuild_artifacts_packaging}&quot;
      path           = &quot;${var.codebuild_artifacts_path}&quot;
    }]

    &quot;NO_ARTIFACTS&quot; = [{
      type = &quot;${var.codebuild_artifacts_type}&quot;
    }]
  }

  # Retuned map
  codebuild_artifacts = &quot;${local.codebuild_artifacts_def[var.codebuild_artifacts_type]}&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This creates a different block depending on the type defined in the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;codebuild_artifacts_type&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.terraform.io/docs/configuration/locals.html&quot; target=&quot;_blank&quot;&gt;locals values de Terraform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cloudposse/terraform-aws-codebuild&quot; target=&quot;_blank&quot;&gt;terraform-aws-codebuild community module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Terraform" /><summary type="html"></summary></entry><entry><title type="html">Getting AWS Logs from the CLI</title><link href="https://lgallardo.com/2018/07/25/awslogs-cli/" rel="alternate" type="text/html" title="Getting AWS Logs from the CLI" /><published>2018-07-19T19:00:00-05:00</published><updated>2018-07-19T19:00:00-05:00</updated><id>https://lgallardo.com/2018/07/25/awslogs-from-cli</id><content type="html" xml:base="https://lgallardo.com/2018/07/25/awslogs-cli/">&lt;center&gt;&lt;img src=&quot;/images/lambda-logs.jpg&quot; alt=&quot;Lambda logs&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;One of the company’s developers asked me if there was any way to view the Lambda function logs from the command line, so I wouldn’t have to go into the AWS console and see them in CloudWatch Logs. After some research I got a project in Github called &lt;a href=&quot;https://github.com/jorgebastida/awslogs&quot; target=&quot;_blank&quot;&gt;awslogs&lt;/a&gt; that does just this. Here’s how to install and use it from a Python virtual environment:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virualenv awslogs
source awslogs/bin/activate

pip install awslogs
pip install awscli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first thing we need to know are the groups where the logs of our Lambda functions are defined, for this we use the AWS CLI:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws logs describe-log-grups --region us-east-1
{
    &quot;logGroups&quot;: [
        {
            &quot;arn&quot;: &quot;arn:aws:logs:us-east-1:123456789123:log-group:/aws/lambda/get_transcription:*&quot;, 
            &quot;creationTime&quot;: 1531834572841, 
            &quot;metricFilterCount&quot;: 0, 
            &quot;logGroupName&quot;: &quot;/aws/lambda/get_transcription&quot;, 
            &quot;storedBytes&quot;: 0
        },
        {
            &quot;arn&quot;: &quot;arn:aws:logs:us-east-1:264349563434:log-group:/aws/lambda/validate_time:*&quot;, 
            &quot;creationTime&quot;: 1532118107128, 
            &quot;metricFilterCount&quot;: 0, 
            &quot;logGroupName&quot;: &quot;/aws/lambda/validate_time&quot;, 
            &quot;storedBytes&quot;: 0
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now to view the logs of, for example, the function &lt;code class=&quot;highlighter-rouge&quot;&gt;get_transcription&lt;/code&gt; from the command line we can execute:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awslogs get  /aws/lambda/get_transcription --aws-region us-east-1  --watch  | cut -d &quot; &quot; -f 3-20

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the result would be something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;START RequestId: a2124cb1-818e-11e8-acc8-5bd968ce3fe1 Version: $LATEST
[DEBUG]	2018-07-23T15:39:50.422Z	a2124cb1-818e-11e8-acc8-5bd968ce3fe1	Searching id: e321-eaefe4311ca1
tuple indices must be integers or slices, not str: TypeError
recent call last):
File &quot;/var/task/app/services/get_transcription.py&quot;, line 100, in lambda_handler
  date_text = field['transcription']
indices must be integers or slices, not str
END RequestId: a2124cb1-818e-11e8-acc8-5bd968ce3fe1
REPORT RequestId: a2124cb1-818e-11e8-acc8-5bd968ce3fe1	Duration: 265.66 ms	Billed Duration: 300 ms 	Memory Size: 128 MB	Max Memory Used: 33 MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jorgebastida/awslogs&quot; target=&quot;_blank&quot;&gt;jorgebastida/awslogs&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/apeckham/9bcb464096997c1b0d41&quot; target=&quot;_blank&quot;&gt;View aws lambda logs on the command line&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">echo dot</title><link href="https://lgallardo.com/2018/07/20/2018-07-20-echo-dot/" rel="alternate" type="text/html" title="echo dot" /><published>2018-07-19T19:00:00-05:00</published><updated>2018-07-19T19:00:00-05:00</updated><id>https://lgallardo.com/2018/07/20/echo-dot</id><content type="html" xml:base="https://lgallardo.com/2018/07/20/2018-07-20-echo-dot/">&lt;center&gt;&lt;img src=&quot;/images/echo-dot.jpg&quot; alt=&quot;echo dot&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Since I’m working on some projects in the company with Alexa, I got a echo dot.&lt;/p&gt;

&lt;p&gt;My idea is to review the possibilities that this platform can provide, and now with more reason as it was announced that &lt;a href=&quot;https://developer.amazon.com/blogs/alexa/post/843d8579-18a3-4344-8c85-4ae36c400eaa/alexa-skills-kit-and-alexa-voice-service-expand-to-italy-and-spain&quot; target=&quot;_blank&quot;&gt;support for Spanish will come at the end of this year&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another thing I’m reviewing is related to the &lt;a href=&quot;https://developer.amazon.com/blogs/alexa/post/3a8f27f3-d724-4e0b-bc72-0dcddd0b2eab/announcing-an-easier-way-to-build-alexa-skills-using-python&quot; target=&quot;_blank&quot;&gt;Python SDK&lt;/a&gt;, which was recently released in beta.&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><category term="Alexa" /><category term="echo" /><summary type="html"></summary></entry><entry><title type="html">A Cloud Guru Member</title><link href="https://lgallardo.com/2018/07/15/2018-07-15-acloudguru-member/" rel="alternate" type="text/html" title="A Cloud Guru Member" /><published>2018-07-14T19:00:00-05:00</published><updated>2018-07-14T19:00:00-05:00</updated><id>https://lgallardo.com/2018/07/15/acloud-guru-member</id><content type="html" xml:base="https://lgallardo.com/2018/07/15/2018-07-15-acloudguru-member/">&lt;center&gt;&lt;img src=&quot;/images/acloudguru-member.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;585&quot; height=&quot;807&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I received my swag: t-shirt and sticker pack from A Cloud Guru this week. How I got these items? I became a member and now I have access to all courses and materias, and can enjoy these gifts :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt; &lt;a href=&quot;https://acloud.guru/membership&quot; target=&quot;_blank&quot;&gt;A Cloud Guru - Become a member&lt;/a&gt;&lt;/p&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry><entry><title type="html">AWS Certified Developer - Associate</title><link href="https://lgallardo.com/2018/07/13/2018-07-13-aws-certified-developer-associate/" rel="alternate" type="text/html" title="AWS Certified Developer - Associate" /><published>2018-07-12T19:00:00-05:00</published><updated>2018-07-12T19:00:00-05:00</updated><id>https://lgallardo.com/2018/07/13/aws-certified-developer-associate</id><content type="html" xml:base="https://lgallardo.com/2018/07/13/2018-07-13-aws-certified-developer-associate/">&lt;center&gt;&lt;img src=&quot;/images/AWS_Certified_Developer_Associate_certificate.jpg&quot; alt=&quot;AWS CSA&quot; width=&quot;500&quot; height=&quot;386&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Last month I approved the &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certified  Developer- Associate&lt;/code&gt; certification  and want to leave my comments regarding the exam:&lt;/p&gt;

&lt;p&gt;It had 55 questions to be answered in 80 minutes. This is the easiest exam of all, but you must study and know the AWS technologies and when to use them from a developer perspective. The exam has two big topics:  DynamoDB and SQS.&lt;/p&gt;

&lt;h1 id=&quot;dynamodb&quot;&gt;DynamoDB&lt;/h1&gt;
&lt;p&gt;Be ready to calculate read and write throughput capacity without blinking an eye. Know the service’s limits, for instance how many indexes are allow per table, number of tables per region, etc. It’s important to know the difference between Scan and Query, LSI and GSI, GetItem and GetBatchItem, strong and eventually consistency, how to group the data to avoid bottlenecks, and the core concepts such as primary, hash and sort keys.&lt;/p&gt;

&lt;h1 id=&quot;sqs&quot;&gt;SQS&lt;/h1&gt;
&lt;p&gt;It’s important to know th difference between visibility and delay timeouts. Also know the min, max and default values for long polling, retention, visibility and delay.  Another key concept is short and long polling. Also study the API commands for changing the default values, for instance, to change the visibility timeout.&lt;/p&gt;

&lt;h1 id=&quot;the-remaining&quot;&gt;The remaining&lt;/h1&gt;

&lt;p&gt;The exam has more general questions regarding the AWS basic concepts, such as CPS, NAT instances, NACK, SGs, ELBs, etc.&lt;/p&gt;

&lt;h1 id=&quot;my-tips-for-saving-time-on-this-exam-are&quot;&gt;My tips for saving time on this exam are:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Answer the easy question quick, don’t stay long thing whether is right answer because probably it is.&lt;/li&gt;
  &lt;li&gt;Only mark for review those question where you really have a doubt, so you can check them later and if there’s time left be able to review them all.&lt;/li&gt;
  &lt;li&gt;Think it is a Amazon certification and in that matter always wonder what Amazon service to use.&lt;/li&gt;
  &lt;li&gt;Take into account that it’s a Amazon certification and in that matter always think what Amazon service to use.&lt;/li&gt;
  &lt;li&gt;Discard things that can be done at the OS level if an Amazon service provides it, and only consider it when there is no other option.&lt;/li&gt;
  &lt;li&gt;Whenever you read scalable think of SQS / DynamoDB, cost-saving = S3 / S3 RRS, and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are interested in this certification and I recommend you some links:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Online courses&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://linuxacademy.com&quot; target=&quot;_blank&quot;&gt;Linux Academy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://acloud.guru/learn/aws-certified-sysops-administrator-associate&quot; target=&quot;_blank&quot;&gt;A Cloud Guru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloudacademy.com/aws-certifications-training/&quot; target=&quot;_blank&quot;&gt;Cloud Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;AWS Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/whitepapers/&quot; target=&quot;_blank&quot;&gt;Whitepapers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/documentation/&quot; target=&quot;_blank&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/faqs/&quot; target=&quot;_blank&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Luis Gallardo</name></author><category term="AWS" /><summary type="html"></summary></entry></feed>